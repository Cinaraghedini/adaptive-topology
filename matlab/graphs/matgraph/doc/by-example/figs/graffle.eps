%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 309.000000 334.000000
%APL_DSC_Encoding: UTF8
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 309 334
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
{ld}repeat pop
/SC{	
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		
/cm {cmmtx astore CM concat}bd	
/W{clip newpath}bd
/W*{eoclip newpath}bd
statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	
    true
}{
    pop	
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse
{	
    { 
	{ 
	    pop pop 
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd
/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd
/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd
/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	
dict begin
{def} repeat
pop		
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	
}bd
/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ 
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ 
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		
/cp_proc/x_proc ld 	
/base_charpath		
{
    /t_array xs
    /t_i 0 def
    { 
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ 
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ 
findfont dup length dict copy definefont pop
}bd
L3? dup dup{save exch}if
/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def
/setupFunEval 
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   
		    
	[ 
	    0 1 nRange 1 sub
	    { 
		    2 mul/nDim2 xd		
		    Range nDim2 get		
		    Range nDim2 1 add get	
		    1 index sub			
						
		    255 div			
		    exch			
	    }for
	]store
    end
}bd
/FunEval 
{
    begin
	
	nRange mul /val xd	
				
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd 
	    val	
	    add DataSource exch get 
	    mulRange nDim2 get mul 	
	    mulRange nDim2 1 add get 
	    add 
	}for	
    end
}bd
/max 
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd
/sh2
{	
	/Coords load aload pop 	
	3 index 3 index translate	
					
	3 -1 roll sub	
	3 1 roll exch 	
	sub				
	2 copy
	dup mul exch dup mul add sqrt	
	dup
	scale  
	atan	
	
	rotate		
	
	/Function load setupFunEval	
	
	
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	
	grestore	
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd
/shp	
{	
	4 copy
	
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse
	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
	
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse
	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd
/calcmaxs
{	
	
	xmin dup mul ymin dup mul add sqrt		
	xmax dup mul ymin dup mul add sqrt		
	xmin dup mul ymax dup mul add sqrt		
	xmax dup mul ymax dup mul add sqrt		
	max max max								
}bd
/sh3
{	
	/Coords load aload pop 	
	5 index 5 index translate	
	3 -1 roll 6 -1 roll sub		
	3 -1 roll 5 -1 roll sub		
	2 copy dup mul exch dup mul add sqrt
	/dx xs						
	2 copy 0 ne exch 0 ne or
	{
		
		exch atan rotate	
	}{
		pop pop
	}ifelse
	
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	
	/Nsteps xs		
	setupFunEval		
	
	
	
	
	
	dx r2 add r1 lt{
		
		0 
	}{
		dx r1 add r2 le
		{ 
			1
		}{ 
			r1 r2 eq
			{	
				2
			}{ 
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		
	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	
		{	
			0/Function load FunEval sc	
			
			
			
			
			{ 
				{	
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		
				}
				{	
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	
					
					
				
					
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	
					
				
					r2 r1 gt{	
						
						0 r1
						r1 neg r2 r1 sub div dx mul	
						0	
						shp	
					}{	
						
						
						
						0 r1 calcmaxs	
						dup
						
						r2 add dx mul dx r1 r2 sub sub div
						neg				
						exch 1 index	
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	
		}if
	}if
	
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	
	
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	
		{	
			Nsteps/Function load FunEval sc	
			
			
			
			
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		
				} 
				{	
					
					
					xmax abs r1 add r1 dx r1 shp
				}	
				{	
			
					r2 r1 gt{
						
						
						
						calcmaxs dup	
						
						r1 add dx mul dx r2 r1 sub sub div	
						exch 1 index	
						exch sub
						dx r2
						shp
					}{	
						
						r1 neg r2 r1 sub div dx mul	
						0		
						dx 		
						r2		
						shp
					}ifelse
				}
			}			
			sh3tp get exec	
		}if
	}if
}bd
/sh		
{	
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	
					2 index sub				
					3 index					
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd
{restore}if not dup{save exch}if
	L3?{	
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if
end
setpacking
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 309 334
%%BeginPageSetup
cg_md begin
bp
sdmtx
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { { 1.8008  exp } bind  exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ { 1.8008  exp } bind { 1.8008  exp } bind { 1.8008  exp } bind ] def 
/MatrixABC [ 0.4294 0.2332 0.0202 0.3278 0.6737 0.1105 0.1933 0.0938 0.9580 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs2 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
1 sc
q
0 0 309 334 rc
0 334 m
309 334 l
309 0 l
0 0 l
h
f
1 J
1 j
0.60000002 i
/Cs2 SC
0 0 0 sc
1 0 0 -1 -151 451 cm
307.24451 128.02405 m
200.75549 183.97595 l
S
309.57529 130.52618 m
272.42471 190.47379 l
S
318.50424 128.45981 m
412.49576 187.54019 l
S
315.87808 130.82993 m
349.12192 198.17007 l
S
192.58539 193.0365 m
161.41461 270.96347 l
S
200.25987 190.82031 m
284.74014 252.17967 l
S
197.05589 193.16766 m
225.94411 279.83231 l
S
263.76529 199.85466 m
164.23473 273.14532 l
S
274.23935 199.84837 m
376.76062 275.15161 l
S
271.65506 201.93478 m
317.34494 304.06519 l
S
163.95284 281.2099 m
254.04716 357.7901 l
S
161.07475 283.16138 m
189.92525 368.83862 l
S
412.203 193.94379 m
295.797 253.0562 l
S
415.53827 197.0175 m
384.4617 272.98251 l
S
420.13095 197.14221 m
449.86905 282.85779 l
S
288.17517 262.23975 m
260.82483 355.76025 l
S
292.65506 261.93481 m
338.34494 364.06519 l
S
376.61105 282.63647 m
264.38895 358.36353 l
S
384.03735 285.17383 m
412.96265 372.82617 l
S
261.82053 367.858 m
295.17947 437.142 l
S
346.5773 207.58598 m
233.42271 282.41403 l
S
350.12112 210.22375 m
321.87888 303.77625 l
S
356.95285 208.20992 m
447.04712 284.79007 l
S
225.56206 292.02716 m
194.43794 368.97284 l
S
233.21721 289.87827 m
335.78281 366.12173 l
S
314.203 312.94379 m
197.79701 372.05621 l
S
325.25989 313.82034 m
409.74011 375.17966 l
S
197.47209 378.51041 m
292.52792 439.48959 l
S
446.74866 292.83206 m
346.25134 366.16794 l
S
449.52789 295.01321 m
417.47214 372.98676 l
S
337.70032 375.60184 m
301.29971 437.39816 l
S
409.29605 382.12012 m
303.70398 439.87985 l
S
1 1 1 sc
CM
166.24265 330.24265 m
168.58578 327.89948 168.58578 324.10052 166.24265 321.75739 c
163.89951 319.41422 160.10049 319.41422 157.75735 321.75739 c
155.41422 324.10052 155.41422 327.89948 157.75735 330.24265 c
160.10049 332.58578 163.89951 332.58578 166.24265 330.24265 c
f
0 0 0 sc
1 0 0 -1 -151 451 cm
317.24265 120.75735 m
319.58578 123.10052 319.58578 126.89948 317.24265 129.24261 c
314.89951 131.58578 311.10049 131.58578 308.75735 129.24261 c
306.41422 126.89948 306.41422 123.10052 308.75735 120.75735 c
311.10049 118.41422 314.89951 118.41422 317.24265 120.75735 c
S
1 1 1 sc
CM
48.24263 268.24261 m
50.585785 265.89948 50.585785 262.10052 48.24263 259.75739 c
45.89949 257.41422 42.10051 257.41422 39.75737 259.75739 c
37.414215 262.10052 37.414215 265.89948 39.75737 268.24261 c
42.10051 270.58578 45.89949 270.58578 48.24263 268.24261 c
f
0 0 0 sc
1 0 0 -1 -151 451 cm
199.24263 182.75739 m
201.58578 185.10052 201.58578 188.89948 199.24263 191.24261 c
196.89949 193.58578 193.10051 193.58578 190.75737 191.24261 c
188.41422 188.89948 188.41422 185.10052 190.75737 182.75739 c
193.10051 180.41422 196.89949 180.41422 199.24263 182.75739 c
S
1 1 1 sc
CM
122.24265 259.24261 m
124.58578 256.89948 124.58578 253.10051 122.24265 250.75737 c
119.89951 248.41422 116.10049 248.41422 113.75735 250.75737 c
111.41422 253.10051 111.41422 256.89948 113.75735 259.24261 c
116.10049 261.58578 119.89951 261.58578 122.24265 259.24261 c
f
0 0 0 sc
1 0 0 -1 -151 451 cm
273.24265 191.75739 m
275.58578 194.10052 275.58578 197.89949 273.24265 200.24263 c
270.89951 202.58578 267.10049 202.58578 264.75735 200.24263 c
262.41422 197.89949 262.41422 194.10052 264.75735 191.75739 c
267.10049 189.41422 270.89951 189.41422 273.24265 191.75739 c
S
1 1 1 sc
CM
12.24263 178.24265 m
14.585785 175.89951 14.585785 172.10049 12.24263 169.75735 c
9.8994904 167.41422 6.1005096 167.41422 3.75737 169.75735 c
1.4142151 172.10049 1.4142151 175.89951 3.75737 178.24265 c
6.1005096 180.58578 9.8994904 180.58578 12.24263 178.24265 c
f
0 0 0 sc
1 0 0 -1 -151 451 cm
163.24263 272.75735 m
165.58578 275.10049 165.58578 278.89951 163.24263 281.24265 c
160.89949 283.58578 157.10051 283.58578 154.75737 281.24265 c
152.41422 278.89951 152.41422 275.10049 154.75737 272.75735 c
157.10051 270.41422 160.89949 270.41422 163.24263 272.75735 c
S
1 1 1 sc
CM
271.24265 264.24261 m
273.58578 261.89948 273.58578 258.10052 271.24265 255.75737 c
268.89951 253.41422 265.10049 253.41422 262.75735 255.75737 c
260.41422 258.10052 260.41422 261.89948 262.75735 264.24261 c
265.10049 266.58578 268.89951 266.58578 271.24265 264.24261 c
f
0 0 0 sc
1 0 0 -1 -151 451 cm
422.24265 186.75739 m
424.58578 189.10052 424.58578 192.89948 422.24265 195.24263 c
419.89951 197.58578 416.10049 197.58578 413.75735 195.24263 c
411.41422 192.89948 411.41422 189.10052 413.75735 186.75739 c
416.10049 184.41422 419.89951 184.41422 422.24265 186.75739 c
S
1 1 1 sc
CM
143.24265 199.24263 m
145.58578 196.89949 145.58578 193.10049 143.24265 190.75735 c
140.89951 188.41422 137.10049 188.41422 134.75735 190.75735 c
132.41422 193.10049 132.41422 196.89949 134.75735 199.24263 c
137.10049 201.58578 140.89951 201.58578 143.24265 199.24263 c
f
0 0 0 sc
1 0 0 -1 -151 451 cm
294.24265 251.75737 m
296.58578 254.10051 296.58578 257.89951 294.24265 260.24265 c
291.89951 262.58578 288.10049 262.58578 285.75735 260.24265 c
283.41422 257.89951 283.41422 254.10051 285.75735 251.75737 c
288.10049 249.41422 291.89951 249.41422 294.24265 251.75737 c
S
1 1 1 sc
CM
235.24265 176.24265 m
237.58578 173.89951 237.58578 170.10049 235.24265 167.75735 c
232.89951 165.41422 229.10049 165.41422 226.75735 167.75735 c
224.41422 170.10049 224.41422 173.89951 226.75735 176.24265 c
229.10049 178.58578 232.89951 178.58578 235.24265 176.24265 c
f
0 0 0 sc
1 0 0 -1 -151 451 cm
386.24265 274.75735 m
388.58578 277.10049 388.58578 280.89951 386.24265 283.24265 c
383.89951 285.58578 380.10049 285.58578 377.75735 283.24265 c
375.41422 280.89951 375.41422 277.10049 377.75735 274.75735 c
380.10049 272.41422 383.89951 272.41422 386.24265 274.75735 c
S
1 1 1 sc
CM
112.24265 93.242645 m
114.58578 90.899506 114.58578 87.100494 112.24265 84.757355 c
109.89951 82.414215 106.10049 82.414215 103.75737 84.757355 c
101.41422 87.100494 101.41422 90.899506 103.75737 93.242645 c
106.10049 95.585785 109.89951 95.585785 112.24265 93.242645 c
f
0 0 0 sc
1 0 0 -1 -151 451 cm
263.24265 357.75735 m
265.58578 360.10049 265.58578 363.89951 263.24265 366.24265 c
260.89951 368.58578 257.10049 368.58578 254.75737 366.24265 c
252.41422 363.89951 252.41422 360.10049 254.75737 357.75735 c
257.10049 355.41422 260.89951 355.41422 263.24265 357.75735 c
S
1 1 1 sc
CM
205.24265 251.24263 m
207.58578 248.89949 207.58578 245.10051 205.24265 242.75737 c
202.89951 240.41422 199.10049 240.41422 196.75735 242.75737 c
194.41422 245.10051 194.41422 248.89949 196.75735 251.24263 c
199.10049 253.58578 202.89951 253.58578 205.24265 251.24263 c
f
0 0 0 sc
1 0 0 -1 -151 451 cm
356.24265 199.75737 m
358.58578 202.10051 358.58578 205.89949 356.24265 208.24263 c
353.89951 210.58578 350.10049 210.58578 347.75735 208.24263 c
345.41422 205.89949 345.41422 202.10051 347.75735 199.75737 c
350.10049 197.41422 353.89951 197.41422 356.24265 199.75737 c
S
1 1 1 sc
CM
81.24263 169.24265 m
83.585785 166.89951 83.585785 163.10049 81.24263 160.75735 c
78.89949 158.41422 75.10051 158.41422 72.75737 160.75735 c
70.414215 163.10049 70.414215 166.89951 72.75737 169.24265 c
75.10051 171.58578 78.89949 171.58578 81.24263 169.24265 c
f
0 0 0 sc
1 0 0 -1 -151 451 cm
232.24263 281.75735 m
234.58578 284.10049 234.58578 287.89951 232.24263 290.24265 c
229.89949 292.58578 226.10051 292.58578 223.75737 290.24265 c
221.41422 287.89951 221.41422 284.10049 223.75737 281.75735 c
226.10051 279.41422 229.89949 279.41422 232.24263 281.75735 c
S
1 1 1 sc
CM
173.24265 145.24265 m
175.58578 142.89951 175.58578 139.10049 173.24265 136.75735 c
170.89951 134.41422 167.10049 134.41422 164.75735 136.75735 c
162.41422 139.10049 162.41422 142.89951 164.75735 145.24265 c
167.10049 147.58578 170.89951 147.58578 173.24265 145.24265 c
f
0 0 0 sc
1 0 0 -1 -151 451 cm
324.24265 305.75735 m
326.58578 308.10049 326.58578 311.89951 324.24265 314.24265 c
321.89951 316.58578 318.10049 316.58578 315.75735 314.24265 c
313.41422 311.89951 313.41422 308.10049 315.75735 305.75735 c
318.10049 303.41422 321.89951 303.41422 324.24265 305.75735 c
S
1 1 1 sc
CM
45.24263 80.242645 m
47.585785 77.899506 47.585785 74.100494 45.24263 71.757355 c
42.89949 69.414215 39.10051 69.414215 36.75737 71.757355 c
34.414215 74.100494 34.414215 77.899506 36.75737 80.242645 c
39.10051 82.585785 42.89949 82.585785 45.24263 80.242645 c
f
0 0 0 sc
1 0 0 -1 -151 451 cm
196.24263 370.75735 m
198.58578 373.10049 198.58578 376.89951 196.24263 379.24265 c
193.89949 381.58578 190.10051 381.58578 187.75737 379.24265 c
185.41422 376.89951 185.41422 373.10049 187.75737 370.75735 c
190.10051 368.41422 193.89949 368.41422 196.24263 370.75735 c
S
1 1 1 sc
CM
305.24265 166.24265 m
307.58578 163.89951 307.58578 160.10049 305.24265 157.75735 c
302.89951 155.41422 299.10049 155.41422 296.75735 157.75735 c
294.41422 160.10049 294.41422 163.89951 296.75735 166.24265 c
299.10049 168.58578 302.89951 168.58578 305.24265 166.24265 c
f
0 0 0 sc
1 0 0 -1 -151 451 cm
456.24265 284.75735 m
458.58578 287.10049 458.58578 290.89951 456.24265 293.24265 c
453.89951 295.58578 450.10049 295.58578 447.75735 293.24265 c
445.41422 290.89951 445.41422 287.10049 447.75735 284.75735 c
450.10049 282.41422 453.89951 282.41422 456.24265 284.75735 c
S
1 1 1 sc
CM
194.24265 85.242645 m
196.58578 82.899506 196.58578 79.100494 194.24265 76.757355 c
191.89951 74.414215 188.10049 74.414215 185.75735 76.757355 c
183.41422 79.100494 183.41422 82.899506 185.75735 85.242645 c
188.10049 87.585785 191.89951 87.585785 194.24265 85.242645 c
f
0 0 0 sc
1 0 0 -1 -151 451 cm
345.24265 365.75735 m
347.58578 368.10049 347.58578 371.89951 345.24265 374.24265 c
342.89951 376.58578 339.10049 376.58578 336.75735 374.24265 c
334.41422 371.89951 334.41422 368.10049 336.75735 365.75735 c
339.10049 363.41422 342.89951 363.41422 345.24265 365.75735 c
S
1 1 1 sc
CM
268.24265 76.242645 m
270.58578 73.899506 270.58578 70.100494 268.24265 67.757355 c
265.89951 65.414215 262.10049 65.414215 259.75735 67.757355 c
257.41422 70.100494 257.41422 73.899506 259.75735 76.242645 c
262.10049 78.585785 265.89951 78.585785 268.24265 76.242645 c
f
0 0 0 sc
1 0 0 -1 -151 451 cm
419.24265 374.75735 m
421.58578 377.10049 421.58578 380.89951 419.24265 383.24265 c
416.89951 385.58578 413.10049 385.58578 410.75735 383.24265 c
408.41422 380.89951 408.41422 377.10049 410.75735 374.75735 c
413.10049 372.41422 416.89951 372.41422 419.24265 374.75735 c
S
1 1 1 sc
CM
151.24265 12.242645 m
153.58578 9.8995056 153.58578 6.1004944 151.24265 3.7573547 c
148.89951 1.4142151 145.10049 1.4142151 142.75735 3.7573547 c
140.41422 6.1004944 140.41422 9.8995056 142.75735 12.242645 c
145.10049 14.585785 148.89951 14.585785 151.24265 12.242645 c
f
0 0 0 sc
1 0 0 -1 -151 451 cm
302.24265 438.75735 m
304.58578 441.10049 304.58578 444.89951 302.24265 447.24265 c
299.89951 449.58578 296.10049 449.58578 293.75735 447.24265 c
291.41422 444.89951 291.41422 441.10049 293.75735 438.75735 c
296.10049 436.41422 299.89951 436.41422 302.24265 438.75735 c
S
ep
end
%%Trailer
%%EOF
