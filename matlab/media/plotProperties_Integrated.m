% filename: plotProperties_Integrated.m
% Purpose:  plot and persist network properties evolution for all gain combinations
% Input:
% - data - matrix containing the coverage data evoluation
% - state - array with the average disconnection time
% - param - parametrization struct

function plotProperties_Integrated(data,state,param)

close all;

set(0,'defaultfigurecolor',[1 1 1])

strTitle=sprintf('N=%d, Area=$%d^2$, Iterations=%d', param.networkSize,param.area,param.numberNetworks);

if ~isequal(exist(param.mainPath, 'dir'),7)
    mkdir(param.mainPath)
end

nridx=size(data,2)/(param.nrProp+1); %properties evaluated+1

figure(1);  % % global efficiency

refCol=2;
idx=refCol;
for i=1:nridx
    plot(data(:,1),data(:,idx) ,'LineStyle','-','LineWidth',2,'Marker','x');
    hold all;
    idx=idx+(param.nrProp+1);
end
title(strTitle,'Interpreter','latex','FontSize',14);

ylabel('Global efficiency','FontSize',16);
xlabel(param.labelX,'FontSize',14);
ylim([0 1]);

h = legend(param.legend,'Location','Best','FontSize',14);

gName=[param.mainPath,'graphic_eG_',num2str(param.networkSize)];

saveas(gcf,[gName,'.fig'],'fig');
export_fig(gName,'-eps','-png');

figure(2);  % local efficiency

refCol=5;
idx=refCol;
for i=1:nridx
    plot(data(:,1),data(:,idx) ,'LineStyle','-','LineWidth',2,'Marker','x');
    hold all;
    idx=idx+(param.nrProp+1);
end

title(strTitle,'Interpreter','latex','FontSize',14);

ylabel('Weighted Cluter Coefficient','FontSize',16);
xlabel(param.labelX,'FontSize',14);
ylim([0 1]);

h = legend(param.legend,'Location','Best','FontSize',14);

gName=[param.mainPath,'graphic_eL_', num2str(param.networkSize)];

saveas(gcf,[gName,'.fig'],'fig');
export_fig(gName,'-eps','-png');


figure(3);  % giant component

refCol=7;
idx=refCol;
for i=1:nridx
    plot(data(:,1),data(:,idx) ,'LineStyle','-','LineWidth',2,'Marker','x');
    hold all;
    idx=idx+(param.nrProp+1);
end

title(strTitle,'Interpreter','latex','FontSize',14);

ylabel('S','FontSize',16);
xlabel(param.labelX,'FontSize',14);
ylim([0 1]);

h = legend(param.legend,'Location','Best','FontSize',14);


gName=[param.mainPath,'graphic_S_',num2str(param.networkSize)];

saveas(gcf,[gName,'.fig'],'fig');
export_fig(gName,'-eps','-png');

figure(4);  % lambda - algebric connectivity

refCol=6;
idx=refCol;
for i=1:nridx
    plot(data(:,1),data(:,idx) ,'LineStyle','-','LineWidth',2,'Marker','x');
    hold all;
    idx=idx+(param.nrProp+1);
end

title(strTitle,'Interpreter','latex','FontSize',14);

ylabel('\lambda','FontSize',16);
xlabel(param.labelX,'FontSize',14);

h = legend(param.legend,'Location','Best','FontSize',14);

gName=[param.mainPath,'graphic_Ag_', num2str(param.networkSize)];

saveas(gcf,[gName,'.fig'],'fig');
export_fig(gName,'-eps','-png');


figure(5);  % Average Degree - k

refCol=8;
idx=refCol;
for i=1:nridx
    plot(data(:,1),data(:,idx) ,'LineStyle','-','LineWidth',2,'Marker','x');
    hold all;
    idx=idx+(param.nrProp+1);
end

title(strTitle,'Interpreter','latex','FontSize',14);

ylabel('<k>','FontSize',16);
xlabel(param.labelX,'FontSize',14);

h = legend(param.legend,'Location','Best','FontSize',14);

gName=[param.mainPath,'graphic_K_',num2str(param.networkSize)];

saveas(gcf,[gName,'.fig'],'fig');
export_fig(gName,'-eps','-png');

figure(6);  % Robustness

refCol=9;
idx=refCol;
for i=1:nridx
    plot(data(:,1),data(:,idx) ,'LineStyle','-','LineWidth',2,'Marker','x');
    hold all;
    idx=idx+(param.nrProp+1);
end

title(strTitle,'Interpreter','latex','FontSize',14);

ylabel('\Theta','FontSize',16);
xlabel(param.labelX,'FontSize',14);
ylim([0 1]);

h = legend(param.legend,'Location','Best','FontSize',14);


gName=[param.mainPath,'graphic_R_',num2str(param.networkSize)];

saveas(gcf,[gName,'.fig'],'fig');
export_fig(gName,'-eps','-png');


figure(7);  % giant component generated by network diconnection during the robustness evaluation

refCol=10;
idx=refCol;
for i=1:nridx
    plot(data(:,1),data(:,idx) ,'LineStyle','-','LineWidth',2,'Marker','x');
    hold all;
    idx=idx+(param.nrProp+1);
end

title(strTitle,'Interpreter','latex','FontSize',14);

ylabel('S - \Theta','FontSize',16);
xlabel(param.labelX,'FontSize',14);
ylim([0 1]);

h = legend(param.legend,'Location','Best','FontSize',14);

gName=[param.mainPath,'graphic_SR_',num2str(param.networkSize)];

saveas(gcf,[gName,'.fig'],'fig');
export_fig(gName,'-eps','-png');

if ~isempty(state) % average disconnection time
    
    figure1=figure(8);
    
    axes1 = axes('Parent',figure1,'XTickLabel',param.XTickLabel,'XTick',transpose([1:size(param.legend,2)]'));

    box(axes1,'on');
    
    hold(axes1,'all');
    
    bar(state(1,:),'DisplayName','dds(:,1)');
    
    title(strTitle,'Interpreter','latex','FontSize',14);
    
    ylabel('t','FontSize',16);
    
    xlabel('','FontSize',14);
    
    ylim([0 param.tf]);
    
    gName=[param.mainPath,'graphic_ItT_',num2str(param.networkSize)];
    
    saveas(gcf,[gName,'.fig'],'fig');
    export_fig(gName,'-eps','-png');
    
    
end
close all;