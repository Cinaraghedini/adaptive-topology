% filename: setModelMedia.m
% Purpose:  initialization for generating videos

param.networkSize = 20;  % number of network nodes

param.numberNetworks=10; % number of networks to be processed with sequencial id (number), if param.networkList=[] 

%for a specific network list identifying the network id(number) for recovery e.g. [1 3 7], 
% if param.networkList=[], the number of network set 
% param.numberNetworks is used and the network id (numbers) are considered
% for recovery

param.networkList=[1 5]; 
param.area = 50; % arena x and y sizes in meters,  area=param.area^2.  
param.lowerB = 1; % arena lower bound 
param.upperB = param.area; % arena upper bound
param.range=16; %range


% allows to recovery data from simulation
% according to the parameters settings

param.t0=0; %initial time
param.ti=1; % time step
param.tf=80; %final time

param.attack=1; % for controlling the visualization of failures.  Attack=1 will highlight nodes that fail. 

% for an integrated video generation. 
     
param.gain=[0 0 0; 2 0 1;2 1 0;2 1 1]; %gains definition for \sigma (algebraic connectivity), \psi (robustness), '\zeta' (coverage)

param.labels=[]; %for figures labels and legends
for i=1:size(param.gain,1)
    param.labels=[param.labels {['\sigma=' num2str(param.gain(i,1)) ',\psi=' num2str(param.gain(i,2)) ',\zeta='  num2str(param.gain(i,3))]}];
end

param.legend=[]; %generated by the simulation
param.XTickLabel=[];

%persistence Information - setup the source path - where the simluation
%data were persisted and identitication for recovering files with results

param.mainPath = ['Z:\Project_ITA_Unimore\results\fault-prone\' num2str(param.networkSize) '\'] ;

param.fileId= 'iterationData'; %name of the original data file with simulation results

%persistence Information - where the media must be saved 

param.dirName = 'video\';  % the directory name where media must be persisted

param.videoName = 'video'; % media file name
param.fileName='imageExport'; % for images

%plot options - each label refers to a combination gain 

param.controlOp={' ','u_i^r - ','u_i^c - ','u_i - '};  % the reference to the control law - title setting

param.colors=[0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1]; %1 for coloring the vulnerable nodes 0 not coloring, 1 otherwise

param.frameOn=0;  % param.frameOn=0 for avoiding poping up pictures during the generation process

param.typeMedia=  'picture'; %'video'; % 'video' for video or 'picture' for static pictures snapshot  

param.lowerX= param.area + 5;
param.upperX= param.area + 10;

param.lowerY= param.lowerB;
param.upperY= param.upperB;

param.showObstacles=1; % for showing the obstacles during the video
param.obstaclesFileId= 'obstacles'; % name of the original data file that cointais the obstacle positions