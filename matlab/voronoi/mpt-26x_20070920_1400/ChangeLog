2007-09-18  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* tests/auxiliary/sub_uniqueOpt_test1.m:
	unit test for sub_uniqueOpt()
	[bb1c8bf6eefa]

2007-09-17  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* tests/graphics/mpt_plotPartition_test1.m:
	mpt_plotPartition_test1: also test Options.sameUcolors=1
	[33ab3ce86c5e]

2007-09-10  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* extras/analysis/mpt_reachSets.m,
	tests/analysis/mpt_reachSets_test1.m:
	mpt_reachSets: fixed wrong dynamics-to-regions assignment

	if ctrl.dynamics is all zero and the system is PWA, mpt_reachSets()
	crashed due to a sysStruct.A{0} indexing. now in such case we
	perform a dynamics-to-regions assignment based on the guardlines of
	the PWA system.
	[a83abda1f7c7]

	* report.xml:
	remove report.xml
	[abbd88ed9944]

	* report.xml, tests/analysis/ctrl_1d_searchtree.mat,
	tests/analysis/ctrl_lowdimnoise.mat,
	tests/analysis/ctrl_lowdimnoise_inv.mat,
	tests/analysis/ctrl_prob.mat, tests/analysis/ctrl_with_hole.mat,
	tests/analysis/di_ctrl_N3_norm1.mat,
	tests/analysis/di_ctrl_N3_norm2.mat,
	tests/analysis/invset_empty.mat, tests/analysis/lti1d.m,
	tests/analysis/lti1d_ctrl_N1_norm1.mat,
	tests/analysis/lti1d_mintime.mat,
	tests/analysis/mpt_getCommonSOSLyapFct_test1.m,
	tests/analysis/mpt_infsetPWA_test1.m,
	tests/analysis/mpt_infsetPWA_test2.m,
	tests/analysis/mpt_infset_test1.m,
	tests/analysis/mpt_infset_test2.m,
	tests/analysis/mpt_infset_test2.out,
	tests/analysis/mpt_invariantSet_test1.m,
	tests/analysis/mpt_isPWAbigger_test1.m,
	tests/analysis/mpt_lyapunov_test1.m,
	tests/analysis/mpt_lyapunov_test2.m,
	tests/analysis/mpt_lyapunov_test3.m,
	tests/analysis/mpt_lyapunov_test4.m,
	tests/analysis/mpt_lyapunov_test5.m,
	tests/analysis/mpt_lyapunov_test6.m,
	tests/analysis/mpt_maxCtrlSet_test1.m,
	tests/analysis/mpt_maxCtrlSet_test1.out,
	tests/analysis/mpt_maxCtrlSet_test2.m,
	tests/analysis/mpt_maxCtrlSet_test3.m,
	tests/analysis/mpt_maxCtrlSet_test4.m,
	tests/analysis/mpt_maxCtrlSet_test4.out,
	tests/analysis/mpt_maxCtrlSet_test5.m,
	tests/analysis/mpt_maxCtrlSet_test5.out,
	tests/analysis/mpt_reachSets_test1.m,
	tests/analysis/mpt_reachSets_test2.m,
	tests/analysis/mpt_reachSets_test3.m,
	tests/analysis/mpt_reachSets_test4.m,
	tests/analysis/mpt_reachXU_test1.m,
	tests/analysis/mpt_removeOverlaps_test1.m,
	tests/analysis/mpt_removeOverlaps_test2.m,
	tests/analysis/mpt_removeOverlaps_test3.m,
	tests/analysis/mpt_removeOverlaps_test4.m,
	tests/analysis/mpt_removeOverlaps_test5.m,
	tests/analysis/mpt_removeOverlaps_test6.m,
	tests/analysis/mpt_removeOverlaps_test7.m,
	tests/analysis/mpt_searchTree_issue519.m,
	tests/analysis/mpt_searchTree_issue519.mat,
	tests/analysis/mpt_searchTree_test1.m,
	tests/analysis/mpt_searchTree_test2.m,
	tests/analysis/mpt_searchTree_test3.m,
	tests/analysis/mpt_searchTree_test4.m,
	tests/analysis/mpt_searchTree_test4.out,
	tests/analysis/mpt_searchTree_test5.m,
	tests/analysis/mpt_simplify_test1.m,
	tests/analysis/mpt_simplify_test2.m,
	tests/analysis/mpt_transmap_test1.m,
	tests/analysis/mpt_verify_test1.m,
	tests/analysis/mpt_verify_test1.out,
	tests/analysis/mpt_verify_test2.m,
	tests/analysis/mpt_verify_test2.out,
	tests/analysis/mpt_verify_test3.m,
	tests/analysis/mpt_verify_test3.out,
	tests/analysis/mpt_verify_test4.m,
	tests/analysis/mpt_verify_test4.out,
	tests/analysis/removeovlps_bug1.mat, tests/analysis/rmovlpsbug.mat,
	tests/analysis/st_ctrl_16region_DONTWORK.mat,
	tests/analysis/transmap_cddprob.mat,
	tests/auxiliary/ctrl_1d_du_yref.mat, tests/auxiliary/ctrl_data.mat,
	tests/auxiliary/ctrl_lowdimnoise.mat,
	tests/auxiliary/identifyRegion_test.m,
	tests/auxiliary/lti1d_addu_ctrl.mat,
	tests/auxiliary/mpt_defaultOptions_test1.m,
	tests/auxiliary/mpt_feasibleStates_test1.m,
	tests/auxiliary/mpt_feasibleStates_test1.out,
	tests/auxiliary/mpt_feasibleStates_test2.m,
	tests/auxiliary/mpt_greedyMerging_test1.m,
	tests/auxiliary/mpt_ineq2eq_R12_prob.mat,
	tests/auxiliary/mpt_ineq2eq_test1.m,
	tests/auxiliary/mpt_ineq2eq_test2.m,
	tests/auxiliary/mpt_ineq2eq_test3.m,
	tests/auxiliary/mpt_isnoise_test1.m,
	tests/auxiliary/mpt_lti2pwa_test1.m,
	tests/auxiliary/mpt_mldsim_test1.m,
	tests/auxiliary/mpt_mpsol2ctrl_test1.m,
	tests/auxiliary/mpt_norm2pwa_test1.m,
	tests/auxiliary/mpt_norm2pwa_test2.m,
	tests/auxiliary/mpt_norm2pwa_test3.m,
	tests/auxiliary/mpt_options_test1.m,
	tests/auxiliary/mpt_performance_test1.m,
	tests/auxiliary/mpt_prepareTracking_test1.m,
	tests/auxiliary/mpt_randLTISys_test1.m,
	tests/auxiliary/mpt_sysStructInfo_test1.m,
	tests/auxiliary/mpt_sysStructInfo_test1.out,
	tests/auxiliary/mpt_verifySysProb_test1.m,
	tests/auxiliary/mpt_verifySysProb_test2.m,
	tests/auxiliary/mpt_verifySysStruct_test1.m,
	tests/auxiliary/mpt_verifySysStruct_test2.m,
	tests/auxiliary/mpt_verifySysStruct_test3.m,
	tests/auxiliary/sub_computeTrajectory_test1.m,
	tests/auxiliary/sub_computeTrajectory_test2.m,
	tests/auxiliary/sub_computeTrajectory_test3.m,
	tests/auxiliary/sub_computeTrajectory_test4.m,
	tests/auxiliary/sub_computeTrajectory_test5.m,
	tests/auxiliary/sub_computeTrajectory_test6.m,
	tests/auxiliary/sub_computeTrajectory_test7.m,
	tests/auxiliary/turbo_car.hys, tests/auxiliary/unitbox_test1.m,
	tests/control/arno_glpkprob.hys, tests/control/boilerdata_R13.mat,
	tests/control/control_mimo1.m, tests/control/ctrl3d_data.mat,
	tests/control/ctrlXU_1d.mat, tests/control/ctrl_1d_searchtree.mat,
	tests/control/ctrl_lowdimnoise.mat,
	tests/control/ctrl_with_hole.mat, tests/control/deltau_test1.m,
	tests/control/deltau_test2.m, tests/control/deltau_test3.m,
	tests/control/deltau_test4.m, tests/control/lti1d.m,
	tests/control/lti1d_addU.m, tests/control/mpc_mip_test1.m,
	tests/control/mpc_mip_test1.out,
	tests/control/mpt_boolMinTime_test1.m,
	tests/control/mpt_boolMinTime_test2.m,
	tests/control/mpt_boolMinTime_test3.m,
	tests/control/mpt_computeTrajectory_test1.m,
	tests/control/mpt_computeTrajectory_test2.m,
	tests/control/mpt_computeTrajectory_test2.out,
	tests/control/mpt_constructMatrices_test1.m,
	tests/control/mpt_control_test1.m,
	tests/control/mpt_control_test2.m,
	tests/control/mpt_control_test3.m,
	tests/control/mpt_control_test3.out,
	tests/control/mpt_control_test4.m,
	tests/control/mpt_control_test5.m,
	tests/control/mpt_control_test6.m,
	tests/control/mpt_getInputXU_test1.m,
	tests/control/mpt_getInputXU_test2.m,
	tests/control/mpt_getInput_test1.m,
	tests/control/mpt_getInput_test2.m,
	tests/control/mpt_getInput_test3.m,
	tests/control/mpt_getInput_test3.out,
	tests/control/mpt_getInput_test4.m,
	tests/control/mpt_getInput_test5.m,
	tests/control/mpt_getInput_test5.out,
	tests/control/mpt_getInput_test6.m,
	tests/control/mpt_getInput_test7.m,
	tests/control/mpt_iterativePWA_test1.m,
	tests/control/mpt_iterativePWA_test2.m,
	tests/control/mpt_iterativePWA_test3.m,
	tests/control/mpt_iterativePWA_test4.m,
	tests/control/mpt_iterativePWA_test5.m,
	tests/control/mpt_iterativePWA_test6.m,
	tests/control/mpt_iterativePWA_test6.out,
	tests/control/mpt_iterativePWA_test7.m,
	tests/control/mpt_iterative_test1.m,
	tests/control/mpt_iterative_test2.m,
	tests/control/mpt_iterative_test3.m,
	tests/control/mpt_iterative_test4.m,
	tests/control/mpt_mixedMinTime_test1.m,
	tests/control/mpt_oneStepCtrl_test1.m,
	tests/control/mpt_oneStepCtrl_test2.m,
	tests/control/mpt_oneStepCtrl_test3.m,
	tests/control/mpt_oneStepCtrl_test4.m,
	tests/control/mpt_oneStepCtrl_test5.m,
	tests/control/mpt_optBoolCtrl_test1.m,
	tests/control/mpt_optBoolCtrl_test2.m,
	tests/control/mpt_optControlPWA_test1.m,
	tests/control/mpt_optControlPWA_test2.m,
	tests/control/mpt_optControlPWA_test3.m,
	tests/control/mpt_optControlPWA_test4.m,
	tests/control/mpt_optControlPWA_test5.m,
	tests/control/mpt_optControlPWA_test6.m,
	tests/control/mpt_optControlPWA_test6.out,
	tests/control/mpt_optControl_test1.m,
	tests/control/mpt_optControl_test2.m,
	tests/control/mpt_optControl_test3.m,
	tests/control/mpt_optInfControlPWA_test1.m,
	tests/control/mpt_optInfControlPWA_test2.m,
	tests/control/mpt_optInfControl_test1.m,
	tests/control/mpt_optLinearCtrl_test1.m,
	tests/control/mpt_optLinearCtrl_test2.m,
	tests/control/mpt_optMixedCtrl_test1.m,
	tests/control/mpt_optMixedCtrl_test2.m,
	tests/control/mpt_optQuadCtrl_test1.m,
	tests/control/mpt_optQuadCtrl_test2.m,
	tests/control/mpt_optQuadCtrl_test3.m,
	tests/control/mpt_optQuadCtrl_test3.out,
	tests/control/mpt_optQuadCtrl_test4.m,
	tests/control/mpt_optQuadCtrl_test5.m,
	tests/control/mpt_optQuadCtrl_test6.m,
	tests/control/mpt_optQuadCtrl_test7.m,
	tests/control/mpt_owncost_test1.m,
	tests/control/mpt_owncost_test10.m,
	tests/control/mpt_owncost_test2.m,
	tests/control/mpt_owncost_test3.m,
	tests/control/mpt_owncost_test4.m,
	tests/control/mpt_owncost_test5.m,
	tests/control/mpt_owncost_test6.m,
	tests/control/mpt_owncost_test7.m,
	tests/control/mpt_owncost_test8.m,
	tests/control/mpt_owncost_test9.m, tests/control/mpt_ownmpc_test1.m,
	tests/control/mpt_ownmpc_test11.m,
	tests/control/mpt_ownmpc_test12.m,
	tests/control/mpt_ownmpc_test13.m,
	tests/control/mpt_ownmpc_test14.m,
	tests/control/mpt_ownmpc_test15.m,
	tests/control/mpt_ownmpc_test16.m,
	tests/control/mpt_ownmpc_test17.m,
	tests/control/mpt_ownmpc_test18.m,
	tests/control/mpt_ownmpc_test19.m,
	tests/control/mpt_ownmpc_test20.m,
	tests/control/mpt_simplexContr_test1.m,
	tests/control/mpt_yalmipTracking_test1.m,
	tests/control/mpt_yalmipTracking_test2.m,
	tests/control/mpt_yalmipTracking_test3.m,
	tests/control/mpt_yalmipcftoc_test1.m,
	tests/control/mpt_yalmipcftoc_test2.m,
	tests/control/mpt_yalmipcftoc_test3.m, tests/control/ownmpc_test1.m,
	tests/control/ownmpc_test2.m, tests/control/ownmpc_test3.m,
	tests/control/pwa1d.m, tests/control/pwa1d_addU.m,
	tests/control/pwa_car.hys, tests/control/pwawelldefined_test1.m,
	tests/control/tracking_issue216.m, tests/control/tracking_test1.m,
	tests/control/tracking_test10.m, tests/control/tracking_test10.out,
	tests/control/tracking_test11.m, tests/control/tracking_test11.out,
	tests/control/tracking_test12.m, tests/control/tracking_test2.m,
	tests/control/tracking_test3.m, tests/control/tracking_test4.m,
	tests/control/tracking_test5.m, tests/control/tracking_test6.m,
	tests/control/tracking_test7.m, tests/control/tracking_test8.m,
	tests/control/tracking_test9.m, tests/control/turbo_car.hys,
	tests/geometry/hull_test1.m, tests/geometry/hull_test1.mat,
	tests/geometry/hull_test2.m, tests/geometry/hull_test2.mat,
	tests/geometry/mpt_getInnerEllipsoid_test1.m,
	tests/geometry/mpt_getOutterEllipsoid_test1.m,
	tests/geometry/mpt_voronoi_test1.m, tests/graphics/ctrl_pwa.mat,
	tests/graphics/ctrl_pwq.mat, tests/graphics/lti1d.m,
	tests/graphics/mpt_plotPWA_test1.m,
	tests/graphics/mpt_plotPWQ_test1.m,
	tests/graphics/mpt_plotPWQ_test2.m,
	tests/graphics/mpt_plotPartition_test1.m,
	tests/graphics/mpt_plotPartition_test2.m,
	tests/graphics/mpt_plotPartition_test3.m,
	tests/graphics/mpt_plotPartition_test4.m,
	tests/graphics/mpt_plotTrajectory_test1.m,
	tests/graphics/mpt_plotU_test1.m, tests/mpt_init_hook.m,
	tests/mptctrl/analyze_test1.m, tests/mptctrl/analyze_test1.out,
	tests/mptctrl/cancompile_test1.m, tests/mptctrl/cancompile_test2.m,
	tests/mptctrl/ctrl1.mat, tests/mptctrl/ctrlN2.mat,
	tests/mptctrl/ctrl_1d_searchtree.mat,
	tests/mptctrl/ctrl_flatregions.mat, tests/mptctrl/display_test1.m,
	tests/mptctrl/display_test1.out, tests/mptctrl/duffing_oscilator.m,
	tests/mptctrl/extendx0_test1.m, tests/mptctrl/extendx0_test2.m,
	tests/mptctrl/get_test1.m, tests/mptctrl/horzcat_test1.m,
	tests/mptctrl/info_test1.m, tests/mptctrl/info_test1.out,
	tests/mptctrl/isexplicit_test1.m, tests/mptctrl/isinvariant_test1.m,
	tests/mptctrl/isinvariant_test2.m,
	tests/mptctrl/isinvariant_test2.out,
	tests/mptctrl/isstabilizable_test1.m,
	tests/mptctrl/isstabilizable_test2.m,
	tests/mptctrl/isstabilizable_test2.out,
	tests/mptctrl/length_test1.m, tests/mptctrl/modify_test1.m,
	tests/mptctrl/modify_test2.m, tests/mptctrl/modify_test3.m,
	tests/mptctrl/modify_test4.m, tests/mptctrl/mptctrl_test1.m,
	tests/mptctrl/mptctrl_test2.m, tests/mptctrl/mptctrl_test3.m,
	tests/mptctrl/mptctrl_test4.m, tests/mptctrl/plot_test1.m,
	tests/mptctrl/plotj_test1.m, tests/mptctrl/plotu_test1.m,
	tests/mptctrl/runtime_test1.m, tests/mptctrl/set_test1.m,
	tests/mptctrl/sim_test1.m, tests/mptctrl/sim_test2.m,
	tests/mptctrl/simplot_test1.m, tests/mptctrl/simplot_test2.m,
	tests/mptctrl/subsref_test1.m, tests/mptctrl/subsref_test2.m,
	tests/mptctrl/subsref_test3.m, tests/mptctrl/subsref_test4.m,
	tests/polytope/analyticCenter_test1.m,
	tests/polytope/bounding_box_test1.m,
	tests/polytope/bounding_box_test2.m,
	tests/polytope/bounding_box_test3.m,
	tests/polytope/bounding_box_test4.m,
	tests/polytope/cdd_extreme_novertices.mat,
	tests/polytope/chebyball_test1.m, tests/polytope/complex_volume.mat,
	tests/polytope/dimension_test1.m, tests/polytope/distance_test1.m,
	tests/polytope/distance_test2.m, tests/polytope/distance_test3.m,
	tests/polytope/distribpoints_test1.m,
	tests/polytope/dointersect_test1.m, tests/polytope/double_test1.m,
	tests/polytope/end_test1.m, tests/polytope/envelope_test1.m,
	tests/polytope/eq_test1.m, tests/polytope/esp_prob.mat,
	tests/polytope/extreme_test1.m, tests/polytope/extreme_test2.m,
	tests/polytope/extreme_test2.mat, tests/polytope/extreme_test3.m,
	tests/polytope/extreme_test3.mat, tests/polytope/extreme_test3.out,
	tests/polytope/extreme_test4.m, tests/polytope/extreme_test4.mat,
	tests/polytope/extreme_test5.m, tests/polytope/extreme_test5.mat,
	tests/polytope/facetcircle_issue138.m,
	tests/polytope/facetcircle_prob.mat,
	tests/polytope/facetcircle_test1.m,
	tests/polytope/facetcircle_test2.m,
	tests/polytope/facetcircle_test3.m,
	tests/polytope/facetcircle_test4.m,
	tests/polytope/getInnerEllipsoid_test1.m,
	tests/polytope/getInnerEllipsoid_test2.m,
	tests/polytope/getOutterEllipsoid_test1.m,
	tests/polytope/grid_test1.m, tests/polytope/grid_test2.m,
	tests/polytope/horzcat_test1.m, tests/polytope/horzcat_test2.m,
	tests/polytope/hull_test1.m, tests/polytope/hull_test1.mat,
	tests/polytope/intersect_test1.m,
	tests/polytope/isbounded_issue141.m,
	tests/polytope/isbounded_test1.m, tests/polytope/isconvex_test1.m,
	tests/polytope/isinside_test1.m, tests/polytope/isinside_test2.m,
	tests/polytope/issue138.mat, tests/polytope/issue141.mat,
	tests/polytope/issue142.mat, tests/polytope/issue145.mat,
	tests/polytope/merge_test1.m, tests/polytope/mtimes_test1.m,
	tests/polytope/mtimes_test2.m, tests/polytope/nconstr_test1.m,
	tests/polytope/neighbors_test1.m, tests/polytope/or_test1.m,
	tests/polytope/pelemfun_test1.m, tests/polytope/plot_test1.m,
	tests/polytope/plot_test2.m,
	tests/polytope/projection_S1_S5_fail.mat,
	tests/polytope/projection_issue37.m,
	tests/polytope/projection_issue38.m,
	tests/polytope/projection_issue38.mat,
	tests/polytope/projection_issue387.m,
	tests/polytope/projection_issue387.mat,
	tests/polytope/projection_iterhull_cycle.mat,
	tests/polytope/projection_prob2.mat,
	tests/polytope/projection_test1.m,
	tests/polytope/projection_test10.m,
	tests/polytope/projection_test11.m,
	tests/polytope/projection_test11.mat,
	tests/polytope/projection_test12.m,
	tests/polytope/projection_test12.out,
	tests/polytope/projection_test14.m,
	tests/polytope/projection_test2.m,
	tests/polytope/projection_test3.m,
	tests/polytope/projection_test4.m,
	tests/polytope/projection_test5.m,
	tests/polytope/projection_test5.out,
	tests/polytope/projection_test6.m,
	tests/polytope/projection_test7.m,
	tests/polytope/projection_test7.mat,
	tests/polytope/projection_test8.m,
	tests/polytope/projection_test9.m, tests/polytope/reduce_issue142.m,
	tests/polytope/reduce_prob2.mat, tests/polytope/reduce_test1.m,
	tests/polytope/reduce_test2.m, tests/polytope/reduce_test3.m,
	tests/polytope/reduce_test4.m, tests/polytope/reduce_test5.m,
	tests/polytope/reduce_wrong_keptrows.mat,
	tests/polytope/regiondiff_test1.m,
	tests/polytope/setdiff_issue145.m, tests/polytope/slice_test1.m,
	tests/polytope/subsasgn_test1.m, tests/polytope/subsref_test1.m,
	tests/polytope/subsref_test2.m, tests/polytope/subsref_test3.m,
	tests/polytope/triang1.mat, tests/polytope/triangulate_test1.m,
	tests/polytope/triangulate_test2.m, tests/polytope/uminus_test1.m,
	tests/polytope/uminus_test2.m, tests/polytope/unique_test1.m,
	tests/polytope/uplus_test1.m, tests/polytope/volume_test1.m,
	tests/simulink/ctrl1.mat, tests/simulink/ctrl_1d_searchtree.mat,
	tests/simulink/mpt_exportST_test1.m,
	tests/simulink/mpt_exportST_test1.out,
	tests/simulink/mpt_exportc_test1.m, tests/simulink/sim_exp.mdl,
	tests/simulink/sim_exp_test1.m, tests/simulink/sim_exp_test1.out,
	tests/simulink/sim_exp_test2.m, tests/simulink/sim_exp_test2.out,
	tests/simulink/sim_online.mdl, tests/simulink/sim_online_test1.m,
	tests/simulink/sim_online_test1.out,
	tests/simulink/sim_online_test2.m,
	tests/simulink/sim_online_test2.out,
	tests/solvers/Phard_unbounded.mat, tests/solvers/dummy.mat,
	tests/solvers/lti1d.m, tests/solvers/miqp_prob.mat,
	tests/solvers/mplp_cycling1.mat, tests/solvers/mplp_cycling2.mat,
	tests/solvers/mplp_cycling3.mat, tests/solvers/mplp_cycling4.mat,
	tests/solvers/mplp_cycling5.mat, tests/solvers/mplp_cycling6.mat,
	tests/solvers/mplp_cycling7.mat, tests/solvers/mplp_cycling8.mat,
	tests/solvers/mplp_cycling9.mat, tests/solvers/mplp_divbyzero.mat,
	tests/solvers/mplp_facetcircle_prob.mat,
	tests/solvers/mplp_glpkprob.mat, tests/solvers/mplp_hole.mat,
	tests/solvers/mplp_infeasible1.m,
	tests/solvers/mplp_regionoutside.mat,
	tests/solvers/mplp_unbounded.mat, tests/solvers/mplp_unbounded2.mat,
	tests/solvers/mpqp_Gempty.mat, tests/solvers/mpqp_infeasible.mat,
	tests/solvers/mpqp_noPhard.mat,
	tests/solvers/mpqp_redundant_prob.mat, tests/solvers/mpqpbug1.mat,
	tests/solvers/mpt_mplp_test1.m, tests/solvers/mpt_mplp_test10.m,
	tests/solvers/mpt_mplp_test11.m, tests/solvers/mpt_mplp_test12.m,
	tests/solvers/mpt_mplp_test13.m, tests/solvers/mpt_mplp_test14.m,
	tests/solvers/mpt_mplp_test15.m, tests/solvers/mpt_mplp_test16.m,
	tests/solvers/mpt_mplp_test17.m, tests/solvers/mpt_mplp_test2.m,
	tests/solvers/mpt_mplp_test3.m, tests/solvers/mpt_mplp_test4.m,
	tests/solvers/mpt_mplp_test5.m, tests/solvers/mpt_mplp_test6.m,
	tests/solvers/mpt_mplp_test7.m, tests/solvers/mpt_mplp_test8.m,
	tests/solvers/mpt_mplp_test9.m, tests/solvers/mpt_mpmilp_test1.m,
	tests/solvers/mpt_mpmilp_test2.m, tests/solvers/mpt_mpmilp_test3.m,
	tests/solvers/mpt_mpmiqp_test1.m, tests/solvers/mpt_mpmiqp_test2.m,
	tests/solvers/mpt_mpmiqp_test3.m, tests/solvers/mpt_mpqp_issue180.m,
	tests/solvers/mpt_mpqp_test1.m, tests/solvers/mpt_mpqp_test1.out,
	tests/solvers/mpt_mpqp_test10.m, tests/solvers/mpt_mpqp_test11.m,
	tests/solvers/mpt_mpqp_test11.mat, tests/solvers/mpt_mpqp_test2.m,
	tests/solvers/mpt_mpqp_test2.out, tests/solvers/mpt_mpqp_test3.m,
	tests/solvers/mpt_mpqp_test3.out, tests/solvers/mpt_mpqp_test4.m,
	tests/solvers/mpt_mpqp_test5.m, tests/solvers/mpt_mpqp_test6.m,
	tests/solvers/mpt_mpqp_test7.m, tests/solvers/mpt_mpqp_test8.m,
	tests/solvers/mpt_mpqp_test8.out, tests/solvers/mpt_mpqp_test9.m,
	tests/solvers/mpt_mpqp_test9.mat, tests/solvers/mpt_solveLP_test1.m,
	tests/solvers/mpt_solveLP_test2.m,
	tests/solvers/mpt_solveLP_test3.m,
	tests/solvers/mpt_solveLPi_test1.m,
	tests/solvers/mpt_solveLPs_test1.m,
	tests/solvers/mpt_solveLPs_test1.mat,
	tests/solvers/mpt_solveMILP_test1.m,
	tests/solvers/mpt_solveMIQP_test1.m,
	tests/solvers/mpt_solveMIQP_test2.m,
	tests/solvers/mpt_solveQP_test1.m,
	tests/solvers/mpt_solveQP_test2.m,
	tests/solvers/mpt_solveQP_test3.m,
	tests/solvers/mpt_solveQP_test4.m,
	tests/solvers/mpt_solveQP_test5.m, tests/solvers/qp_lambda_prob.mat,
	tests/solvers/sedumi_test1.m, tests/solvers/unbound_prob.mat,
	tests/solvers/xbeyond_prob.mat, tests/ui/dcboost.hys,
	tests/ui/mpt_init_test1.m, tests/ui/mpt_sys_test1.m,
	tests/ui/mpt_sys_test2.m, tests/ui/mpt_sys_test3.m,
	tests/ui/mpt_sys_test4.m, tests/ui/mpt_sys_test4.out,
	tests/ui/mpt_sys_test5.m, tests/ui/turbo_car.hys:
	added unit tests
	[8bd43a661290]

	* testing/Contents.m, testing/lti2d_def.m, testing/lti3d_def.m,
	testing/mpt_runTests.m, testing/mpt_test_LTI2d.m,
	testing/mpt_test_PWA.m, testing/pwa_def.m:
	removed the testing/ directory
	[ddb9463e5bf2]

2007-09-20  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* examples/ccode/mpt_getInput.c, extras/simulink/mpt_exportc.m,
	extras/simulink/mpt_getInput.c:
	mpt_getInput.c: use floats instead of doubles to save memory
	[0d366b3ca379]

2007-09-18  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* extras/control/mpt_iterativePWA.m:
	mpt_iterativePWA: support probStruct.Tset as a polytope array

	probStruct.Tset can now be a polytope array and the individual
	terminal regions are now correctly associated to dynamics in the X
	space.
	[cc167102c03b]

	* extras/auxiliary/sub_uniqueOpt.m:
	sub_uniqueOpt: speedup

	using hashes for equality comparison speeds up the code by a factor
	of 10.
	[661266c0fa70]

2007-09-17  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* extras/auxiliary/sub_uniqueOpt.m,
	extras/graphics/mpt_plotPartition.m, mpt_simplify.m:
	separate sub_prepareColors into a stand-alone function

	sub_prepareColors is now renamed to mpt_uniqueOpt and is avaliable
	as a separate function to avoid code redundancy (sub_prepareColors
	was coded twice, one in mpt_simplify and once in mpt_plotPartition)
	[14a5b5e6d4a4]

2007-09-10  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* extras/simulink/mpt_getSfuncParam.m:
	mpt_getSfuncParam: always fullify matrices

	we have to convert sparse elements to full matrices, otherwise the
	c-code control law evaluation will fail.
	[72f699e42878]

2007-09-06  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* extras/control/hys2pwa/PWAwelldefined.m:
	PWAwelldefined: always convert matrices to cells

	if PWAwelldefined is called with H and K not being cell arrays, the
	function would break with an error. this patch fixes this problem by
	always converting the elements to cells.

	unit test: extras/control/pwawelldefined_test1.m
	[cbd9eb3e8587]

2007-09-04  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* @polytope/merge.m:
	polytope/merge: allow pre-simplification using reduceunion()

	if a polytope array to be merged contains many overlapping regions,
	some of which completely cover other regions, one can use the new
	"Options.use_reduceunion=1" flag which first calls reducunion() to
	kick out such completely covered regions.

	note that this can have both positive and negative implication on
	the speed of merging! usually it makes sense to activate this option
	when calculating invariant subsets where a large number of small
	regions are generated.

	unit test added: polytope/merge_test1.m
	[4c44c05a7ee2]

	* @polytope/reduceunion.m:
	polytope/reduceunion: refactor and speed up the code
	[b7ad42fb42cb]

	* @polytope/intersect.m:
	polytope/intersect: allow the "intersect(Pn)" syntax

	if Pn is a polytope array consisting of overlapping polytopes, the
	"Q = intersect(Pn)" syntax will return a polytope Q = {x | x \in
	Pn}, i.e. set of points which are common for all elements of Pn.

	unit test added: polytope/intersect_test1.m
	[a0af039865b8]

	* extras/analysis/mpt_getCommonSOSLyapFct.m,
	extras/analysis/mpt_getPWQLyapFct.m,
	extras/analysis/mpt_getQuadLyapFct.m:
	addapt lyapunov routines to latest YALMIP release
	[edc0db9cb4c7]

	* extras/auxiliary/mpt_dummyCS.m:
	mpt_dummyCS: set the "dynamics" field to zero

	we now set the "ctrlStruct.dynamics" field to a zero vector in order
	to prevent problem with dynamic association in
	sub_computeTrajectory() [see changeset e05d8271e0e2]
	[9525e613ab95]

2007-09-03  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* mpt_getInput.m:
	mpt_getInput: fix unknown variable
	[cbdd6d508eab]

2007-08-27  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* extras/auxiliary/sub_computeTrajectory.m:
	sub_computeTrajectory: always pass known dynamics to mpt_simSys

	if the index of the active PWA dynamics is known (e.g. from the
	respective ctrl.dynamics field) then we pass this known index to
	mpt_simSys() to get a correct state update.

	note that this cal lead in discrepancies in the closed-loop behavior
	when compared to simulink-based simulations. when the sim() and
	simplot() functions are used, we let the controller decide which
	dynamics should be used to calculate the state update. in Simulink
	there is no way how the controller could "enforce" the active
	dynamics to the system. therefore if a state lies on a boundary of
	two different PWA dynamics, different choices can be made. in
	sub_computeTrajectory we always take the "correct" dynamics (correct
	from the point of view of the controller).
	[e05d8271e0e2]

2007-08-15  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* extras/analysis/mpt_infset.m:
	mpt_infset: use mpt_infsetPWA instead of the hand-crafted code

	* solution to cases with a polytopic noise was incorrect using the
	original version, fixed by calling mpt_infsetPWA
	* cases with LTI dynamics and target being a polytope array are now
	handled properly

	unit test changed: regress/extras/analysis/mpt_infset_test1.m unit
	test added: regress/extras/analysis/mpt_infset_test2.m
	[9b1a6be67ae4]

2007-08-14  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* extras/analysis/mpt_searchTree.m:
	mpt_searchTree: more robust computation of bounding boxes
	[a9babdc88cea]

	* extras/analysis/mpt_infsetPWA.m:
	mpt_infsetPWA: correctly handle open-loop control laws

	this fixes the crash appearing on cases where the control law u =
	Fi*x + Gi is defined over the whole prediction horizon, i.e. when
	the Fi and Gi matrices have "N*nu" rows instead of just "nu".

	unit test added: regress/extras/analysis/mpt_infsetPWA_test2.m
	[306f0473d98c]

	* mpt_ownmpc.m:
	mpt_ownmpc: make code Matlab <= R13 compatible
	[2f4d73eba9e8]

2007-05-11  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* @mptctrl/mptctrl.m:
	mptctrl: vectors should be concatenated vertically, not horizontally
	[0aec2e78c669]

	* mpt_getInput.m:
	mpt_getInput: always return U as a column vector
	[4b1c307a3c0c]

	* extras/analysis/mpt_infset.m:
	mpt_infset: reject PWA systems

	mpt_infsetPWA() should be used for PWA systems (either the dynamics
	is PWA, or the constraints are provided as a polytope array).
	[79366ec59709]

2007-03-30  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* solvers/mpt_mpqp.m:
	mpt_mpqp: fix help description

	use "x" instead of "x(0)" to denote the parameter.
	[2b662a791003]

2007-03-16  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* extras/control/mpt_optInfControlPWA.m:
	mpt_optInfControlPWA: don't use undefined variables
	[b1f9ae5181b2]

2007-03-14  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* extras/auxiliary/mpt_lti2pwa.m:
	mpt_lti2pwa: do not break if there are no output constraints

	unit test: regress/extras/auxiliary/mpt_lti2pwa_test1.m
	[94901b1914d5]

2007-03-13  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* mpt_ownmpc.m:
	mpt_ownmpc: always change empty elements of ctrl.Ai to zeros

	if the cost of the problem is not quadratic, YALMIP would return the
	quadratic term of the cost (ctrl.Ai) set to an empty matrix. We used
	to change such empty fields to zero matrices of appropriate
	dimensions, but only if probStruct.norm was not set to 2. Using
	mpt_ownmpc(), however, the user could manually change the cost to
	zero, which will yield an mpLP, despite having probStruct.norm=2.

	Therefore we now always change all empty elements of ctrl.Ai to
	zeros.

	unit test: regress/mpt_ownmpc_test20.m
	[1e4875db9eac]

	* extras/analysis/mpt_searchTree.m:
	mpt_searchTree: fix errors on controllers with just one region

	unit test: regress/extras/analysis/mpt_searchTree_test4.m
	[e846869a4787]

2007-03-12  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* mpt_ownmpc.m:
	mpt_ownmpc: allow objective to be a double

	mpt_ownmpc(sysStruct, probStruct, C, obj, V) should allow "obj" to
	be provided also as a double (either zero or an empty matrix).

	unit test: regress/mpt_ownmpc_test19.m
	[cdcb360a9cf9]

2007-03-07  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* extras/analysis/mpt_searchTree.m:
	mpt_searchTree: fix crashes if Pfinal is non-convex

	fixes issue519.

	unit test: regress/extras/analysis/mpt_searchTree_issue519.m unit
	test: regress/extras/analysis/mpt_searchTree_test3.m
	[96e21d35901b]

2007-03-05  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* mpt_init.m:
	mpt_init: properly return output argument if requested

	This fixes a bug which caused output argument not to be set if the
	construction

	 out = mpt_init

	was used.
	[a07aa884b359]

	* solvers/mpt_mpqp.m:
	mpt_mpqp: fix crashes caused by an empty hardA,hardb polytope

	unit test: regress/solvers/mpt_mpqp_test11.m
	[96da9fea84ba]

2007-03-01  Johan Loefberg  <joloef@control.ee.ethz.ch>

	* @polytope/eq.m:
	polytope/eq: speedup

	speed hack: two polytopes cannot be equal if, after removing
	redundant constraints, they have different number of hyperplanes. We
	can abort quickly in such case.
	[a2f6e56c416c]

2007-03-01  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* mpt_getInput.m:
	mpt_getInput: use proper size of U if the problem is infeasible

	If the problem is infeasible, we now return U as a properly sized
	vector (nu*N x 1) of NaNs.

	unit test: regress/mpt_getInput_test7.m
	[1c87ceabdc21]

	* extras/graphics/mpt_plotPartition.m:
	mpt_plotPartition: add option to colorize regions by control laws

	plot(ctrl, struct('sameUcolors', 1)) will plot the controller in a
	way such that regions with the same control law will be plotted in
	the same color.
	[63958c367ab4]

	* extras/graphics/mpt_plotPartition.m:
	mpt_plotPartition: fix crashes for higher dimensions

	This fixes crashes if the controller was constructed using deltaU
	formulation and the dimension is above 3.

	unit test: regress/extras/graphics/mpt_plotPartition_test3.m unit
	test: regress/extras/graphics/mpt_plotPartition_test4.m
	[49ead19a7b44]

2007-02-26  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* @polytope/projection.m:
	polytope/projection: prevent fourier() to be called with empty
	inputs

	Calling mex fourier with empty input would result in a matlab crash.
	To prevent this, we now check whether the data are non-empty. Fixes
	issue387.

	Unit test added: polytope/projection_issue387.m
	[02cffaa1088d]

	* extras/analysis/mpt_maxCtrlSet.m:
	mpt_maxCtrlSet: compute feasible set via mpQP in case of troubles

	If projection fails to calculate feasible set, we now switch to mpQP
	formulation, which is numerically more robust (albeit slower).
	[1b0a2a2d7c0d]

	* @polytope/plot.m:
	polytope/plot: stay completely silent if Options.verbose=0
	[5e5b3d318145]

	* @polytope/horzcat.m:
	polytope/horzcat: fix crash if leading element is an empty polytope

	if the construction P=[C{:}] is used and the first element of "C" is
	an empty polytope, horzcat would crash.

	unit test added: polytope/horzcat_test2.m
	[dc05ac9e5ee3]

2007-01-02  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* extras/graphics/mpt_plotTimeTrajectory.m:
	mpt_plotTimeTrajectory: use LaTeX-style digit quoting
	[5a4ceb53c345]

2006-12-11  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* .hgtags:
	Added tag MPT_2_6_2 for changeset a1c8732c01dc
	[e8945cb58142]

2006-12-07  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* mpt_init.m:
	Bug 69: Use sdpsettings('bnb.upper', 'fixer') by default

	With 'fixer', every iteration is slower, but it is more likely to
	find a feasible solution than 'rounder'. For most testcases 'fixer'
	is about 2x faster than rounder.
	[a1c8732c01dc] [MPT_2_6_2]

2006-12-06  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* extras/auxiliary/mpt_solveLPi.m, solvers/mpt_solveMILP.m:
	Bug 70: Need to check more statuses when calling glpkmex

	When calling glpkmex from mpt_solveLPi and mpt_solveMILP, we need to
	consider output statuses 180 (solution is optimal), 181 (solution is
	feasible), 151 (the interior point method is optimal) and 200 as
	indicators of a feasible solution.

	unit test: regress/extras/auxiliary/mpt_mldsim_test1.m
	[19b6eb8d51ec]

2006-12-05  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* solvers/mpt_mpqp.m:
	Bug 68: mpt_mpqp: crash when calling mpt_addToStorage

	unit test: regress/solvers/mpt_mpqp_test10.m
	[3b39e389f793]

	* extras/auxiliary/mpt_ineq2eq.m:
	mpt_ineq2eq: speedup
	[4e2a8c2570c2]

	* history.txt:
	Bug 49: history.txt updated to MPT 2.6.2
	[8f04a1778f2b]

	* extras/auxiliary/mpt_mplp_ver7.m:
	Bug 52: mpt_mplp: use bounding boxes instead of PquadrantMap

	Creating 2^nx quadrants to speed up region searching can be very
	expensive for large dimensions of the state space. Similarly to
	mpt_mpqp, we now use bounding-box based pruning also in mpt_mplp.
	[47b4eee04144]

2006-12-04  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* @polytope/horzcat.m, @polytope/plot.m, @polytope/vertcat.m,
	extras/control/mpt_optControlPWA.m,
	extras/control/optmerge/mpt_optMerge.m:
	fixed m-lint reported problems
	[cd4adea59fc9]

	* readme.txt:
	Bug 49: Bump version number in readme.txt
	[e3069acc6ebd]

	* @polytope/Contents.m, Contents.m:
	Bug 49: Bump version number in Contents files
	[3f7827281d02]

	* solvers/mpt_mpqp.m:
	mpt_mpqp: use faster equivalent of repmat

	x(:, ones(1, n)) is faster than repmat(x, 1, n)

	Helps to improve performance for Bug 52.
	[94d384549559]

	* extras/auxiliary/mpt_feasibleStates.m:
	Bug 66: mpt_feasibleStates() should use polytope/grid()

	Use polytope/grid() to obtain list of points contained in a given
	polytope.

	unit test: regress/extras/auxiliary/mpt_feasibleStates_test1.m unit
	test: regress/extras/auxiliary/mpt_feasibleStates_test2.m
	[961f412a3d4e]

	* @polytope/isinside.c, @polytope/isinside.m:
	Bug 67: polytope/isinside: auto-switch to fastbreak=1 if nargout < 2

	If the user doesn't ask for the "inwhich" output argument and the
	input is a polyarray, in order to speed up the search we can auto-
	switch to Options.fastbreak=1, which will abort the search when at
	least one region contains the given point.
	[d7f75df4729c]

	* @polytope/grid.m:
	polytope/grid: always require number of gridpoints
	[be9d9df0dca8]

	* @polytope/grid.m:
	@polytope/grid: fixed wrong indexing
	[fdce24ffc9ed]

	* @polytope/grid.m:
	Bug 65: Add @polytope/grid()

	grid(P) returns a set of equidistantly spaced points contained in
	the polytope/polyarray P. By default the polytope object P is
	divided into a grid of 30 points along each coordinate. This default
	value can be overriden by passing a second input argument:

	 X = grid(P, gridpoints)

	unit test: regress/polytope/grid_test1.m
	[5f7c79c09e45]

2006-12-01  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* solvers/mpt_mpqp.m:
	Bug 58: Improve performance of mpt_mpqp.m/sub6_RedundantPolyhedron

	This patch implements pruning based on bounding boxes, which is
	significantly faster compared to PquadrantMaps. The overall runtime
	of the mpQP algorithm for large cases is now reduced by a factor of
	at least 2.
	[4f80a41e3dcc]

	* @polytope/uminus.m:
	Bug 64: polytope/uminus doesn't update bounding box

	The unary minus operator applied to polytopes which had a bounding
	box stored inside didn't update the bbox field in the flipped
	polytope.

	unit test: regress/polytope/uminus_test1.m
	[f15583088271]

2006-11-30  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* @polytope/subsref.m:
	polytope/subsref: remove redundant call of length()
	[f8d2db92f74b]

	* @polytope/isinside.c, @polytope/private/closestRegion.m:
	Bug 58: Mex version of polytope/isinside.m

	Since isinside() contributes heavily (by ~25%) to the total runtime
	of mpqp solvers on large examples, it is desirable to have a C-coded
	mex version of isinside().

	For now we let the mex file uncompiled in the @polytope directory
	and let users to compile it when speed is desired.

	This version mirrors the functionality of polytope/isinside.m, with
	the only exception of not allowing the call "isinside(P)", which
	plots the regions and lets the users to specify the point x0 by a
	mouse click.

	unit test: regress/polytope/isinside_test1.m unit test:
	regress/polytope/isinside_test2.m
	[16e1dfdd7e9d]

	* @polytope/subsref.m:
	Bug 61: Indexing of polyarrays by logicals doesn't work

	>> p = [p1 p2 p3 p4] >> q = p(logical([0 1 0 1]))

	??? Error using ==> polytope.subsref POLYTOPE:SUBSREF: Index is
	negative or zero

	Following the MATLAB standards, the indexing with logicals should
	lead q=[p2 p4].

	This patch also fixes Bug 62: Indexing of a single polytope by
	double(0) should give an error.

	unit test: regress/polytope/subsref_test2.m unit test:
	regress/polytope/subsref_test3.m
	[f370afad315d]

2006-11-29  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* @polytope/subsref.m:
	Bug 56: Complex referencing of polytopes/polyarrays fails

	>> p = unitbox(2); >> p([1 1 1])

	??? Error using ==> polytope.subsref SUBSREF: ??? Index exceeds
	array dimension

	Following the Matlab standards, the "p([1 1 1])" construction should
	lead to a polyarray with 3 elements, all of them equal to p(1).

	unit test: polytope/subsref_test2.m
	[19c54a9eb56a]

	* solvers/mpt_mpqp.m:
	Bug 57: Automatically symmetrize the H matrix in mpt_mpqp

	If the H matrix is slightly off-symmetric, quadprog gives annoying
	warnings:

	Warning: Your Hessian is not symmetric. Resetting H=(H+H')/2. > In
	quadprog at 211 In mpt_solveQP at 261 In mpt_mpqp at 472 In
	mpt_solvenode at 73 In callmpt at 41 In solvesdp at 249 In
	solvemp at 93 In mpt_yalmipcftoc at 1068 In mpt_control at 534

	In Bug 47 we fix this case for quadprog. To prevent such problems
	for all QP solvers, we should add automatic symmetrization of the H
	term in mpt_mpqp

	unit test: solvers/mpt_mpqp_test6.m
	[55491b942494]

	* solvers/mpt_mpqp.m:
	Bug 52: Improve performance of mpt_mpqp.m/sub6_RedundantPolyhedron

	Checking whether a feasible point is already covered by existing
	regions currently uses a technique of dividing existing regions into
	quadrants such that the number of regions to check at each step can
	be reduced. This procedure is , however, time consuming, because it
	has to create 2^nx new polytope arrays to hold all possible
	quadrants.

	We are therefore replacing the storage of polytopes by a quadrant
	map of 1/0 indices, which should be faster.

	Contributed by Johan Loefberg
	[bb45608ed368]

	* extras/control/mpt_yalmipcftoc.m:
	Bug 41: tracking=1 fails for on-line MPC for MLD systems

	Changeset cab227035eee allowed tracking=1 to be used for MLD systems
	converted into an equivalent PWA form. However, if on-line MPC is
	requested, mpt_yalmipcftoc() breaks with an error because we
	prioritize MLD form over PWA formulation.

	To fix this, we always switch to PWA models if tracking=1/on-line
	strategy is used.

	unit test: extras/control/tracking_test10.m unit test:
	extras/control/tracking_test11.m
	[b2828e29dcac]

	* @polytope/subsref.m:
	Bug 60: Speed up polytope/subsref()

	Currently polytope/subsref.m uses following construction to extract
	only specified elements:

	Q.Array = {P.Array{indices}};

	However the double use of cell operators is significantly slower
	compared to:

	Q.Array = P.Array(indices);
	[f500b5cb7e0a]

2006-11-28  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* mpt_init.m:
	Bug 49: Bump version number to 2.6.2
	[ff869ae8fb8f]

	* extras/auxiliary/mpt_matlabrelease.m, mpt_init.m, mpt_studio.m:
	Bug 54: Better detection of the MATLAB release number

	mpt_init.m and mpt_studio.m use a special logic to detect MATLAB R11
	and older. This logic is now moved to mpt_matlabrelease.m, such that
	it will return R11 for MATLAB 5.3 and older versions.
	[3435c0e016de]

	* @polytope/triangulate.m, @polytope/volume.m,
	extras/auxiliary/mpt_matlabrelease.m,
	extras/geometry/mpt_convhulln.m:
	Bug 54: Better detection of the MATLAB release number

	Per Bug 13 we call convhulln() or delaunayn() with a second input
	argument in MATLAB R14 and newer in order to improve qhull's
	performance. However the detection of the release number was not
	robust enough. Specifically, it didn't recognize MATLAB R2006a and
	newer as sequent of R14.

	Therefore we introduce a new function -- mpt_matlabrelease.m --
	which returns the correct release number. Notice that MATLAB R2006a,
	R2006b, ... are all recognized as R15.

	unit test added: polytope/triangulate_test2.m unit test changed:
	polytope/triangulate_test1.m
	[b2249ec3f1b7]

2006-11-20  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* extras/simulink/mpt_getSfuncParam.m,
	extras/simulink/mpt_simInput_sfunc.m:
	Bug 38: use ctrl.details.x0format instead of ctrl.details.dims

	We should use dimensions stored in "ctrl.details.x0format" instead
	of those in "ctrl.details.dims"/"ctrl.sysStruct.dims". The reason
	being that details.x0format is guarnateed to be always set, while
	"ctrl.details.dims" can be ambiguous (tracking/non-tracking) and
	"ctrl.sysStruct.dims" will not be set if mpt_ownmpc() was used.

	unit test: extras/simulink/sim_exp_test1.m unit test:
	extras/simulink/sim_exp_test2.m unit test:
	extras/simulink/sim_online_test1.m unit test:
	extras/simulink/sim_online_test2.m
	[3afbbd06edf3]

	* extras/auxiliary/mpt_mpsol2ctrl.m:
	mpt_mpsol2ctrl: convert YALMIP solution into an MPTCTRL object

	This function converts a paraemtric solution obtained by calling
	YALMIP's solvemp() function into a valid MPT controller object. When
	converting, the user either has to provide a valid
	sysStruct/probStruct pair:

	 ctrl = mpt_mpsol2ctrl(sol, sysStruct, probStruct)

	or specify number of inputs (mandatory) and number of system outputs
	(optional):

	 ctrl = mpt_mpsol2ctrl(sol, nu[, ny])

	unit test: regress/extras/auxiliary/mpt_mpsol2ctrl_test1.m
	[90156daf25a0]

2006-11-14  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* solvers/mpt_mpqp.m:
	Bug 51: mpQP fails to find an initial feasible point

	In certain cases the mpQP algorithm fails to find a feasible initial
	point if the quadprog solver is used. However the solver succeeds if
	redundant constraints are removed.

	unit test added: regress/solvers/mpt_mpqp_test9.m
	[b3d7e739c6e6]

2006-11-02  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* extras/control/mpt_yalmipcftoc.m:
	mpt_yalmipcftoc: fix wrong tag of one output constraint
	[e477bc3051b1]

2006-10-31  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* extras/control/optmerge/tg_polyreduce.m:
	bug 50: make tg_polyreduce() more robust

	If the CDD-based method used to remove redundant constraints fails
	for some reason, we should fall back to using reduce() instead of
	breaking with an error.
	[09d260f500e1]

	* extras/auxiliary/mpt_verifySysStruct.m:
	mpt_verifySysStruct: speedup

	calling unitbox() is faster than constructing the box as a polytope
	object directly.
	[36f1787d4a11]

	* solvers/mpt_solveQP.m:
	bug 47: suppress annoying warnings when using quadprog

	If quadprog is used as a QP solver, it very often complains about a
	non-symmetric Hessian, which is produced by an mpQP solver.

	If the difference in symmetricity is only small, we should set the
	Hessian to (H+H')*0.5 in mpt_solveQP to prevent these unnecessary
	warnings.

	unit test: solvers/mpt_solveQP_test5.m
	[caafb5af6b34]

	* extras/analysis/mpt_removeOverlaps.m:
	mpt_removeOverlaps: remove unused lines
	[717527b5b0d8]

	* @mptctrl/isinvariant.m, @mptctrl/isstabilizable.m:
	bug 46: isinvariant/isstabilizable broken in MPT 2.6.1

	isinvariant() and isstabilizable() methods are broken in MPT 2.6.1
	if mpt_yalmipcftoc() was used to compute the controller. This bug
	also affects the GUI, since it claims that no Lyapunov function was
	found (i.e. the controller is not stabilizing) even if such a
	function was clearly computed correctly (reported in issue287).

	unit test: mptctrl/isinvariant_test2.m unit test:
	mptctrl/isstabilizable_test1.m unit test:
	mptctrl/isstabilizable_test2.m
	[5cb792f93c0b]

	* solvers/SeDuMi105/sedumi.m:
	bug 43: fprintf(0, ...) throws an error in R2006b

	Commands such as fprintf(0, ...) and fwrite(0, ...), in which the
	file identifier is zero (the same as stdin) in Matlab R2006b result
	in an error being thrown. In previous releases, MATLAB did not throw
	an error in response to these commands, even though printing or
	writing to stdin is clearly not a valid option.
	[a34e555e2f4d]

	* extras/auxiliary/unitbox.m:
	bug 45: exploit unitbox structure

	Construction of unitboxes can be made significantly faster by
	disabling constraint reduction (since all unitbox constraints are
	known to be non-redundant) and switching off normalization (since
	H-representation of unitboxes is already normalized).
	[11e6b567195b]

2006-09-14  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* mpt_control.m:
	mpt_control: improve error detection

	if control horizon is used together with a PWA system and a minimum-
	time strategy, mpt_control() should allow such combination, becuase
	a proper error message will be given by mpt_verifyProbStruct,
	instead of a bogus one by mpt_control.

	unit test added: mpt_control_test5.m
	[cf2da58ac062]

	* mpt_simplify.m:
	mpt_simplify: properly reject/accept controllers with overlaps

	1. we now reject controllers with overlaps which cannot be removed
	by mpt_removeOverlaps (those with quadratic cost)

	2. fixed incomplete output generated by mpt_removeOverlaps

	unit test added: mpt_simplify_test2
	[9110d1fe79c9]

2006-09-11  Johan Loefberg  <loefberg@control.ee.ethz.ch>

	* extras/auxiliary/mpt_ineq2eq.m:
	mpt_ineq2eq: speedup
	[760b988bf876]

2006-09-05  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* extras/auxiliary/mpt_ineq2eq.m:
	mpt_ineq2eq: speedup
	[a10ae5d701f8]

2006-08-30  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* extras/auxiliary/mpt_ineq2eq.m:
	mpt_ineq2eq: speedup

	using norm() is faster than all(abs()).
	[ed12699bf4ae]

	* extras/analysis/mpt_verify.m:
	Bug 37: mpt_verify should use solvesdp()

	When mpt_verify() is used with Options.usereachsets=0 (i.e. solving
	the verification problem as a feasibility LP/MILP), it should first
	call mpt_ownmpc() with the 'online' flag to construct the problem
	and then use solvesdp() with no cost to actually solve the
	verification.

	unit test: extras/analysis/mpt_verify_test4.m
	[c5dcce699f92]

	* extras/auxiliary/mpt_greedyMerging.m:
	Bug 39: Greedy merging failed for 1D polytopes

	Steps to reproduce: 1. P1 = polytope([-1; 0]); P2 = polytope([0;
	1]); 2. Q = mpt_greedyMerging([P1 P2])

	Actual result: Greedy merging is unable to merge given 1D polytopes.

	Expected result: Union of P1 and P2 is convex, they should be merged
	into one polytope.

	unit test: extras/auxiliary/mpt_greedyMerging_test1.m
	[f2c704725e29]

2006-08-29  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* mpt_ownmpc.m:
	mpt_ownmpc: Remainding fix for Bug 30
	[e49504bd6fea]

2006-08-12  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* extras/control/optmerge/mpt_hyparr2.m:
	mpt_hyparr2: remove unwanted command output
	[0fbe1b6c25d1]

	* extras/control/hys2pwa/mpt_hyparr.m:
	mpt_hyparr: suppress unwanted command output
	[c5cb353ad7a0]

	* extras/auxiliary/mpt_lrs.m:
	mpt_lrs: suppress command output
	[0cc5f1ab43a6]

	* mpt_sys.m:
	mpt_sys: fix an undefined variable
	[af4a994350e2]

2006-08-11  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* @polytope/extreme.m, @polytope/volume.m, extras/geometry/Contents.m,
	extras/geometry/hull.m, extras/geometry/mpt_convhulln.m:
	Bug 13: Improve qhull robustness in Matlab R14

	qhull in Matlab R14 almost never works unless it is called with
	additional options. However, since Matlab R13 does not allow two
	inputs to qhull, we have to have our own helper function which uses
	a proper call depending on the version of matlab (mpt_convhulln)

	Fixes issue 250 and issue 256.
	[9f8c4443eed0]

	* extras/control/mpt_yalmipcftoc.m, mpt_ownmpc.m:
	Bug 30: Open-loop solution had wrong number of elements

	When asking solvemp() for the open-loop solution, we have to use
	vertical concatenation instead of a horizontal one. Notice that this
	was only causing problems for systems with more than one input.

	unit test: extras/control/control_mimo1.m
	[6f04260a7047]

	* solvers/mpt_mplp.m:
	Bug 28: mpt_mplp doesn't handle infeasible cases correctly

	This patch makes mpt_mplp to always define "details.Bi" and
	"details.Ci" even if the problem is infeasible.

	unit test: solvers/mplp_infeasible1.m
	[2b8fb349d355]

2006-07-11  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* solvers/mpt_mplp.m:
	mpt_mplp: fullify Matrices.D

	related to changesets d858afba0e70 and de25933e62fd
	[45315e436688]

2006-07-04  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* mpt_sys.m:
	mpt_sys: clarify help description
	[bcbadd9f4d22]

2006-07-10  Johan Loefberg  <loefberg@control.ee.ethz.ch>

	* extras/auxiliary/mpt_ineq2eq.m:
	mpt_ineq2eq: speedup
	[bd7f70fc43c4]

2006-07-03  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* extras/control/mpt_optInfControlPWA.m:
	mpt_optInfControlPWA: use a valid initial controller structure

	if no core was found, we fall back into a standard CFTOC approach
	where we detect regions belonging to the core. once we find at least
	such region, we restart the algorithm with Options.core. however,
	the generate core was not a valid controller structure due to a
	missing "details" field.
	[cde217d1078e]

	* @polytope/volume.m:
	polytope/volume: improve qhull call under matlab R14

	qhull implemented in matlab R14 sucks numerically unless it is
	called with additional options. however, matlab R13 and prior do not
	allow to call delaunayn() with two options, hence we have to
	differentiate calls by matlab version.
	[cfdedb230396]

2006-06-29  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* solvers/mpt_mplp.m:
	mpt_mplp: properly handle F*x terms in cost

	if we have a constant term F*x in the cost, we need to add the F
	matrix to the Bi (affine) part of the cost expression.

	unit test added: regress/solvers/mpt_mplp_test17.m
	[38a9458905cb]

2006-06-29  Johan Loefberg  <loefberg@control.ee.ethz.ch>

	* extras/auxiliary/mpt_ineq2eq.m:
	mpt_ineq2eq: speedup
	[8ac8f5ba9fcd]

2006-06-20  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* extras/control/mpt_yalmipcftoc.m:
	mpt_yalmipcftoc: allow tracking=1 for MLD systems with PWA form

	if an MLD system has an equivalent PWA representation, we should
	allow tracking=1 to be used.

	unit test: extras/control/tracking_test9.m
	[cab227035eee]

	* extras/auxiliary/mpt_yalmipTracking.m:
	mpt_yalmipTracking: don't use +/-Inf when creating a polytope

	when creating polytope bounds on references, we must not use +/-Inf
	terms, or reduce() will complain that a polytope is R^n

	unit test: extras/control/tracking_test9.m
	[6a515655994c]

2006-06-06  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* extras/analysis/mpt_reachSets.m:
	mpt_reachSets: fix typos
	[103782c9a17d]

2006-05-24  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* extras/control/mpt_yalmipcftoc.m:
	mpt_yalmipcftoc: add a missing tag
	[b44356c19298]

2006-05-22  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* solvers/mpt_solveMILP.m, solvers/mpt_solveMIQP.m:
	mpt_solveMILP,mpt_solveMIQP: don't pass options.verbose=-1 to CPLEX

	CPLEXINT doens't like when options.verbose=-1. since we are not sure
	how other solvers react to a negative value, we now set the lower
	limit of options.verbose to 0.
	[807da7af6805]

2006-05-19  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* .hgtags:
	Added tag MPT_2_6_1 for changeset
	60e1cf24b6e718d5c6c2f35134b4cf4ce454b519
	[acbc9ce69100]

	* mpt_init.m:
	mpt_init: fix typo
	[60e1cf24b6e7] [MPT_2_6_1]

	* mpt_init.m:
	mpt_init: improve checking of path

	we now only check subdirectories of the yalmip directory, this gives
	users the option to put YALMIP anywhere they want.
	[9f6f32624e4d]

	* extras/auxiliary/mpt_verifySysStruct.m:
	mpt_verifySysStruct: fix a typo
	[c37db7b24b7f]

2006-05-18  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* extras/auxiliary/mpt_verifyProbStruct.m:
	mpt_verifyProbStruct: fix typos

	spotted by I. Fotiou
	[d10d6a8b376c]

	* extras/auxiliary/mpt_mplp_ver7.m:
	mpt_mplp_ver7: handle corner case on exit due to infeasibility

	if no initial feasible point is found, we used to return Phard =
	polytope(bndA, bndb) and Pn = polytope. however if bndA, bndb are
	empty, such polytope construction is invalid. therefore now we
	return Phard in such case as an empty polytope.
	[edfa71d58651]

	* @polytope/Contents.m, Contents.m, history.txt, mpt_init.m,
	readme.txt:
	bump version number to 2.6.1
	[5c1225e04d2e]

2006-05-16  Johan Loefberg  <loefberg@control.ee.ethz.ch>

	* extras/auxiliary/mpt_ineq2eq.m:
	mpt_ineq2eq: use tolerances when checking equalities

	this makes mpMILP solver more robust.
	[4c7137cad657]

2006-05-16  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* solvers/mpt_solveLP.m, solvers/mpt_solveQP.m:
	mpt_solveLP,mpt_solveQP: handle +/- Inf terms in constraints

	certain solvers (e.g. NAG, CDD) don't like infinity terms in
	constraints. therefore we do two things: 1. detect trivially
	infeasible constraints x <= -Inf 2. remove any redundant constraints
	x <= Inf

	notice that not handling +/-Inf terms could make problems when
	solving on-line MPC for systems with no state/output constraints.

	unit test added: solvers/mpt_solveLP_test3.m unit test added:
	solvers/mpt_solveQP_test4.m
	[dec95b9993d9]

	* @mptctrl/mptctrl.m, mpt_getInput.m:
	expand a nonlinear model by default

	if the optimization problem is nonlinear, we now expand the YALMIP
	model in mptctrl() by default. two reasons: 1. saving time.
	expanding models is expensive, now mpt_getInput() doesn't have to do
	that at every step 2. loading/saving of non-expanded models is not
	possible currently with YALMIP
	[bd903fd89793]

	* extras/auxiliary/mpt_yalmip2mpt.m:
	mpt_yalmip2mpt: don't display warnings from expandmodel()

	if the model contains unbounded variables inside of implies() or
	iff() operators, expandmodel() would give nasty warnings. since such
	situation can happen if we have control of piecewise-nonlinear
	systems, and since we can't do anything about it (see changeset
	08ee8f7a281f), we just switch off all warnings before calling
	expandmodel()
	[5acd818011f3]

2006-05-15  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* mpt_init.m:
	mpt_init: check YALMIP path

	YALMIP after 15-May-2006 changed its directory structure. Therefore
	we now check that all necessary YALMIP directories are on the Matlab
	path and give an error if they are not.
	[0363364009c5]

	* extras/control/mpt_yalmipcftoc.m:
	mpt_yalmipcftoc: use set() instead of bounds()

	YALMIP released beyond 15-May-2006 deprecates the bounds() operator
	and extracts bounds on variables directly from constraints.
	therefore we have to add bounds as constraints in our models.

	notice that since bounds are required when using the implies()
	operator (which happens if we have a PWA or a piecewise nonlinear
	model), we now force bounds of +/- mptOptions.infbox on
	states/inputs/outputs even if they are not specified by the user. we
	give a nice warning that we have done so, though.
	[08ee8f7a281f]

	* @mptctrl/isinvariant.m:
	mptctrl/isinvariant: clarify help description
	[285da193cc69]

	* @mptctrl/cancompile.m:
	mptctrl/cancompile: fix output for LTI systems w/ quadratic cost

	we have been incorrectly rejecting controllers designed based on
	linear systems with quadratic cost.

	unit test added: mptctrl/cancompile_test1.m unit test added:
	mptctrl/cancompile_test2.m
	[1fa25b4dcd19]

2006-05-11  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* extras/auxiliary/sub_setyalmipdata.m:
	fix problems with certain mixed-integer solvers [issue216]

	some solvers do not accept binary variables, therefore each such
	variable must be denoted as integer with 0<=z<=1 bounds.

	also when calling most solvers via YALMIP, the constraints are
	expected to be sparse matrices.

	spotted by Brian Solberg
	[cd50b80f9080]

	* extras/control/mpt_yalmipcftoc.m:
	mpt_yalmipcftoc: fix wrong condition

	the "d" variable representing the mode selector should be returned
	if we have a Piecewise Nonlinear system, not if a single nonlinear
	dynamics is used.
	[ff943168c8e0]

	* extras/simulink/mpt_exportST.m, extras/simulink/mpt_searchTree.c:
	mpt_searchTree.c: use single precision instead of double precision

	change made on behalf of STM
	[bd5d9d9d635c]

2006-05-05  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* @mptctrl/extendx0.m, @mptctrl/loadobj.m, @mptctrl/mptctrl.m:
	mptctrl: keep information about the format of x0

	ctrl.details.x0format is now a structure which defines 3 things: 1.
	dimension of the state vector 2. number of inputs stored in the
	state vector 3. number of references stored in the state vector

	this information is important if we augmented the state vector to
	deal with tracking/deltaU formulation as is later used in the
	extendx0() helper.

	the reason why we keep such info directly in the controller object
	is to reduce the effort of simulation functions which would
	otherwise need to perform a tricky analysis of the controller object
	in order to find whether: 1. we minimize deltaU=u(k)-u(k-1) instead
	of u(k) 2. we need to extend x0 by adding u(k-1) and the reference

	this patch also introduces a "loadobj" method which is needed to
	assign "ctrl.details.x0format" also for objects saved with older
	versions.
	[08eeb3534d0c]

2006-05-04  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* solvers/mpt_mpqp.m:
	mpt_mpqp: fullify Matrices.bndA and Matrices.bndb

	related to changeset d858afba0e70
	[de25933e62fd]

	* mpt_control.m:
	mpt_control: use mpt_yalmipcftoc() for 2-norm for LTI systems

	mpt_yalmipcftoc() is a much more numerically robust approach to
	solve explicit MPC for LTI problems with quadratic objective
	function.
	[e4d4cc14fb52]

	* solvers/mpt_mplp.m, solvers/mpt_mpqp.m:
	mpt_mplp, mpt_mpqp: make sure matrices are not sparse

	since we call mpt_solveLPi from mpt_mplp() and mpt_mpqp() and
	because mpt_solveLPi() doesn't automatically fullify the inputs, we
	must make sure that the input matrices are not sparse.

	this is done in preparation for changes in YALMIP's yalmip2mpt.m
	[d858afba0e70]

	* extras/auxiliary/mpt_yalmipDU.m,
	extras/auxiliary/mpt_yalmipTracking.m:
	use better constraints on deltaU when using deltaU formulation

	if we augment the system to cope with deltaU formulation _and_
	deltaU constraints given by the user only contain +/- Inf elements,
	we now compute tighter bounds on deltaU by using input constraints.
	this helps to keep the problem bounded in mpt_yalmipcftoc()
	[2c6d6a2155ce]

	* extras/auxiliary/mpt_yalmipTracking.m:
	mpt_yalmipTracking: use constraints as bounds on references

	if we augment the state (output) vector to include the reference, we
	now use the state (output) constraints as bounds on the reference
	signal. this helps to keep the problem bounded all the time.
	[f810a31bfbc3]

	* extras/simulink/mpt_simInput_sfunc.m:
	mpt_simInput_sfunc: use the extendx0() helper
	[1a29d0fe6149]

2006-05-01  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* @mptctrl/mptctrl.m:
	mptctrl: less verbose output
	[25ef9901583c]

	* @mptctrl/extendx0.m:
	extendx0: improve detection logic
	[c3e3a4418bb6]

	* @mptctrl/extendx0.m:
	extendx0: add a missing semicolon
	[e6c5ac312eb2]

	* mpt_getInput.m:
	mpt_getInput: add missing new-line characters
	[1a29d4a36d73]

	* @mptctrl/extendx0.m, extras/auxiliary/sub_computeTrajectory.m:
	mptctrl/extendx0: a helper for automatic augmentation of x0

	if the state vector was augmented to deal with tracking/deltaU
	formulation, this helper can be used to automatically extend the
	"true" measured state by the value of previous input and/or by the
	reference signal.
	[62e1a38d705e]

	* @mptctrl/mptctrl.m, extras/control/mpt_yalmipcftoc.m, mpt_ownmpc.m:
	mptctrl: store information about x0 being augmented

	if we augment the state vector to deal with tracking/deltaU
	formulation, we now keep a note about that in ctrl.details. this
	information is then later to teach mptctrl/extendx0 for which cases
	it should add u(k-1) and/or the reference into the state vector.
	[7e79b23fab1e]

	* @mptctrl/mptctrl.m:
	mptctrl: add an undefined variable
	[01e1fff5ff40]

	* extras/control/mpt_yalmipcftoc.m, mpt_ownmpc.m:
	mpt_ownmpc: inform the user if we augment the state vector

	if state vector needs to be augmented to deal with tracking/deltaU
	formulation, we now inform the user that we have done so by
	displaying additional components which are now included to x0.
	[46ee591f61c8]

	* @mptctrl/mptctrl.m:
	mptctrl: improve usage of remove_equalities

	the easiest way how to decide whether or not we should remove
	equalities is to look whether we have integer variables in the
	model. if not, we can remove equality constraints to improve
	performance.

	notice that this way of handling is important if the problem comes
	from mpt_ownmpc() - there we don't know whether the user used a
	linear system.
	[9671221af737]

	* @mptctrl/char.m:
	mptctrl/char: handle missing structure
	[16d435309f1c]

2006-04-30  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* extras/auxiliary/mpt_yalmipDU.m:
	mpt_yalmipDU: augment references if needed be

	probStruct.{xref|yref} must be updated if we switch to deltaU
	formulation.

	unit test added: extras/control/deltau_test4.m
	[afefdb1ec90f]

	* extras/control/mpt_yalmipcftoc.m:
	mpt_yalmipcftoc: add an undefined variable
	[bc4dbac63f53]

	* extras/control/mpt_yalmipcftoc.m:
	mpt_yalmipcftoc: use a verified probStruct where needed
	[21b2f6fa8e05]

	* extras/control/mpt_yalmipcftoc.m:
	mpt_yalmipcftoc: improve tracking detection logic

	this patch fixes the regression which made tracking=2 not possible
	to use with deltaU constraints for on-line controllers (we deal with
	such case by introducing a new variable to denote u(k-1) and this
	value is then provided later by the user, such that deltaU
	constraints can be enforced).
	[d158ce6cd20f]

	* @mptctrl/mptctrl.m:
	mptctrl: don't remove equalities if we have boolean inputs

	if it happens that we have an MPC problem for a linear system with
	boolean inputs, according to Johan we should not remove equalities.
	[eaf1e88610a8]

	* extras/control/mpt_yalmipcftoc.m:
	mpt_yalmipcftoc: fix undefined variable
	[53eb94fb9990]

	* extras/control/mpt_yalmipcftoc.m:
	mpt_yalmipcftoc: return correct probStruct
	[f4775531e5f2]

	* extras/control/mpt_yalmipcftoc.m:
	mpt_yalmipcftoc: switch from tracking=1 to tracking=2 for MLD
	systems

	if probStruct.tracking=1 is used together with MLD/nonlinear
	systems, we now automatically switch to tracking=2 and display a
	message that we have done so.

	the reason being that tracking=1 implies deltaU formulation for
	which we can't go in case of MLD/nonlinear dynamics. only tracking=2
	formulations are allowed.

	notice that such automatic switch will only happen for on-line
	controllers, since explicit ones do require PWA/LTI models.
	[372e29a5b9d8]

	* @mptctrl/mptctrl.m, mpt_getInput.m:
	on-line MPC: allow to remove equalities from constraints

	issue216 showed a big performance regression which is related to
	equality constraints being a problem for certain LP/QP solvers. we
	now therefore add the ability to remove any equality constraints
	present in the MPC formulation.

	by default, equalities are always removed for LTI systems, but the
	user can either supress this default by setting
	"Options.remove_equalities_lti=0" in mpt_control(), or he can force
	equalities to be removed for PWA/MLD systems as well by providing
	"Options.remove_equalities_all=1" while calling mpt_control().

	the effect of removing equalities on issue216 is very significant:
	Options.remove_equalities_lti=0 ~300 secs
	Options.remove_equalities_lti=1 ~3 secs
	[ba9444eb2e42]

	* extras/auxiliary/sub_computeTrajectory.m,
	extras/simulink/mpt_simInput_sfunc.m:
	improve simulation of on-line MPC controllers

	some on-line controllers now use an augmented state vector which
	includes the reference and/or the previous control action. therefore
	this patch is needed to adapt the simulation routines to this
	behavior. namely, we need to compute a "true" control input in case
	where the optimization used the deltaU formulation.

	related to changesets 97ca6f0f0d8b and c86f3d49b238
	[6c75568c0f29]

	* @mptctrl/mptctrl.m:
	mptctrl: improve handling of on-line controllers with tracking

	by changeset c86f3d49b238 we now augment the state vector to cope
	with tracking/deltaU formulation whenever possible. this implies
	that we can handle probStruct.tracking=1 for LTI/PWA systems and we
	switch to probStruct.tracking=2 for MLD/nonlinear systems.

	in MPT 2.6 we always switched to tracking=2, which introduced an
	inconsistency with MPT 2.5. therefore we now respect the tracking
	flag as set by the user and use tracking=1 if possible.

	this implies that reference/u(k-1) are part of the state vector if
	tracking=1 is used (it is also true for tracking=2 with LTI/PWA
	systems). this patch serves to recognize that the state vector was
	augmented by exploting additional information provided by
	mpt_yalmipcftoc() (changeset 63210f246295).
	[97ca6f0f0d8b]

	* mpt_getInput.m:
	mpt_getInput: only augment x0 if it has wrong dimension

	the initial state for on-line controllers is now augmented by adding
	u(k-1) and/or the reference if the x0 provided by the user has wrong
	number of elements.
	[8465accb5af3]

	* mpt_getInput.m:
	mpt_getInput: convert object into structure for faster access

	we now convert the controller object into a structure such that we
	can get faster access to its internal fields (profiling showed that
	otherwise we spend too much time in mptctrl/subsref)
	[ae772cf318f5]

2006-04-29  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* extras/control/mpt_yalmipcftoc.m:
	mpt_yalmipcftoc: return more info in case of on-line controllers

	when constructing an on-line MPC problem, by changeset c86f3d49b238
	we now augment the state vector to deal with tracking/deltaU
	constraints whenever possible. in order to indicate that the
	reference and/or the value of previous control action are now part
	of the state vector (and not given as a separate variables), we now
	return this in a special structure (1st output from
	mpt_yalmipcftoc(), unused unless Options.dont_solve=1 is given).
	this additional information is then processed by mptctrl().
	[63210f246295]

	* extras/control/mpt_yalmipcftoc.m:
	mpt_yalmipcftoc: augment x0 for tracking also for on-line
	controllers

	if we have a system which we can augment to cope with tracking
	and/or deltaU formulation (i.e. LTI or PWA systems), we now do so
	also for on-line controllers (as we did in MPT 2.5). the advantage
	being that on hand the optimization problem is consistent with its
	"explicit" counterpart; moreover this allows us to solve on-line
	problems which minimize deltaU instead of just u(k).

	related to issue216
	[c86f3d49b238]

	* extras/control/mpt_yalmipcftoc.m:
	mpt_yalmipcftoc: improve error detection logic

	we now reject tracking=1 for systems with boolean inputs even for
	on-line controllers (since tracking=1 implies deltaU formulation for
	which we cannot go if we have boolean inputs). if such case happens,
	we instruct users to use tracking=2.

	unit test added: extras/control/mpt_yalmipcftoc_test1.m
	[c0a5c48bd5c7]

	* extras/auxiliary/mpt_yalmipTracking.m:
	mpt_yalmipTracking: store dimension of the reference
	[b170f8c69071]

	* extras/auxiliary/mpt_yalmipTracking.m:
	mpt_yalmipTracking: properly augment probStruct.Q

	probStruct.Q was not correctly augmented if we had probStruct.Qy

	unit test added: extras/auxiliary/mpt_yalmipTracking_test3.m
	[1bacbea97bb8]

	* extras/auxiliary/mpt_yalmipTracking.m:
	mpt_yalmipTracking: improve problem detection logic

	1. if probStruct.tracking=0 we now immediately exit 2. if tracking=1
	and/or deltaU constraints are given for systems with boolean inputs,
	we now instruct users to switch to tracking=2 3. removed a bogus
	switch from tracking=2 to tracking=1 in situations where tracking=1
	is not allowed

	unit test added: extras/auxiliary/mpt_yalmipTracking_test2.m
	[6d7dbd3c33e4]

	* extras/auxiliary/mpt_yalmipDU.m:
	mpt_yalmipDU: reject systems with integet inputs

	systems with boolean/integer inputs cannot be converted into a
	deltaU formulation, we now give a nice error when such case occurs.
	[d14673f9a304]

	* extras/auxiliary/mpt_prepareTracking.m:
	mpt_prepareTracking: mark probStruct as being augmented
	[d081936094aa]

2006-04-28  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* mpt_init.m:
	mpt_init: recognize CPLEX 8.0 MIQP solver [issue216]

	the MIQP version of the mex interface to CPLEX 8.0 was not
	recognized and set up properly.

	reported by Brian Solberg in issue216
	[3510f0be68d0]

2006-04-25  Johan Loefberg  <loefberg@control.ee.ethz.ch>

	* extras/auxiliary/mpt_yalmip2mpt.m:
	mpt_yalmip2mpt: save unnecessary call to sdpsettings()
	[26204903fb20]

2006-04-21  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* extras/control/hys2pwa/mpt_pwa2sys.m, mpt_sys.m:
	mpt_sys: always set input constraints when converting from HYSDEL

	when converting from HYSDEL, we used to set input constraints only
	if the number of inputs was bigger than zero _and_ the bounds
	contained only non-Inf terms. now we always set sysStruct.umin and
	sysStruct.umax to the bounds provided by HYSDEL. reasoning is as
	follows: 1. if we have an autonomous system, we immediately set
	empty input constraints. this should mitigate user's confusion on
	why mpt_verifySysStruct complains about missing constraints.

	2. since MPT 2.6 we mostly use mpt_yalmipcftoc() to design the MPC
	problem. this function handles constraints including +/- Inf terms
	directly.
	[9233122e973d]

2006-04-20  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* @mptctrl/mptctrl.m:
	mptctrl: improve recognition of autonomous systems

	we now check whether all elements of sysStruct.guardU contain only
	zero elements. if not, the system is not autonomous.

	unit test added: mptctrl/mptctrl_test4.m
	[5abce6f7cb89]

2006-04-07  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* solvers/hysdel/hysdel.m:
	hysdel: options not passed to the compiler [issue213]

	if options such as '-5' are specified as the 3rd input, they have
	not been passed to the HYSDEL compiler.

	reported by Brian Solberg
	[19e532bf5ac0]

2006-03-30  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* .hgtags:
	Added tag MPT_2_6 for changeset
	51834e46631f72a64b96238dbce368be3889d89e
	[7a06e2a95d84]

	* extras/simulink/mpt_simInput_sfunc.m:
	mpt_simInput_sfunc: prepare variables for on-line MPC where
	appropriate

	Options.uprev and Options.reference is now used if we have an on-
	line controller which uses solvesdp().
	[51834e46631f] [MPT_2_6]

2006-03-29  Johan Loefberg  <loefberg@control.ee.ethz.ch>

	* examples/nonlin/nonlin1.m:
	nonlin1: add more comments
	[561cc028c065]

2006-03-29  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* mpt_getInput.m:
	mpt_getInput: avoid using sdpsettings()

	using sdpsettings() is slow, therefore now we assign fields of
	YALMIP options directly.

	this patch also allows Options.uppersolver to be specified.
	[1e47ce6a9d48]

2006-03-29  Frank J. Christophersen  <fjc@control.ee.ethz.ch>

	* extras/analysis/mpt_dlyap_infnorm.m:
	mpt_dlyap_infnorm: use algebraic tests instead of LPs

	instead of solving a sequence of LPs one only needs to check simple
	algebraic tests.
	[b16261a40bb7]

2006-03-29  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* @polytope/plus.m, extras/analysis/mpt_reachXU.m,
	extras/auxiliary/mpt_yalmipTracking.m,
	extras/control/mldmpc/mpc_checkSysWeight.m,
	extras/simulink/mpt_exportST.m, mpt_computeTrajectory.m,
	mpt_ownmpc.m, mpt_simSys.m, mpt_sys.m:
	fix problems reported by mlint code checker
	[040295a32d96]

	* @polytope/Contents.m, Contents.m, history.txt, readme.txt:
	changes for MPT 2.6
	[0911648d9052]

	* examples/ownmpc/softconstr5.m:
	softconstr5: new demo of soft constraints
	[c77f516162fb]

	* examples/nonlin/duffing_oscilator.m,
	examples/nonlin/duffing_oscillator.m, examples/nonlin/nonlin1.m:
	duffing_oscillator: fix typo in file name
	[8edd54471f1e]

	* extras/control/mpt_yalmipcftoc.m:
	mpt_yalmipcftoc: fix tags for output equations for LTI systems
	[3b60afaf29ac]

	* extras/control/mpt_yalmipcftoc.m:
	mpt_yalmipcftoc: add constraints on x_{N-1}

	changeset 0b72c666d2fa has broken enforcement of state constraints
	on x_{N-1}, fixed here.

	unit test modified: mpt_ownmpc_test16.m
	[618880482c61]

2006-03-28  Johan Loefberg  <loefberg@control.ee.ethz.ch>

	* examples/nonlin/nonlin1.m:
	nonlin1: show difference between local and global solver
	[3b0560acc262]

2006-03-28  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* mpt_getInput.m:
	mpt_getInput: use smaller default value of Options.MaxSQPIter

	Value of Options.MaxSQPIter is one of the most important factors
	which influence convergence of the fmincon() solver. It was observed
	on the nonlin1.m demo that the default value was too high, which
	caused fmincon() to hang under R13. Therefore now we set a better
	upper bound on this option, calculated from the number of variables
	and constraints present in the problem.

	This patch also adds support for Options.lowersolver, which is
	propagated into sdpsettings('bmibnb.lowersolver',
	Options.lowersolver). For instance the nonline1.m demo does not
	currently work with NAG as a lower solver, but works fine with
	GLPK/CDD.
	[8497b20773a7]

	* extras/control/mpt_yalmipcftoc.m:
	mpt_yalmipcftoc: bound slack variables

	we now add bounds on slack variables used to introduce soft
	constraints, such that we avoid warnings from implies() or iff().

	unit test added: mpt_ownmpc_test18.m
	[ef0e41d20c86]

	* @mptctrl/subsref.m:
	mptctrl/subsref: return vector of NaNs if problem is infeasible

	if the u=ctrl(x0) syntax is used, we now return a vector of NaNs if
	the problem is infeasible.

	unit test added: mptctrl/subsref_test3.m
	[d60d206b6425]

	* extras/control/mpt_optControl.m:
	mpt_optControl: reject probStruct.N=Inf
	[8abcf4b40fe6]

	* extras/control/mpt_yalmipcftoc.m:
	mpt_yalmipcftoc: reject probStruct.subopt_lev > 0

	suboptimal strategies are not handled by this function.

	unit test added: mpt_ownmpc_test17.m
	[d118ec6a238b]

	* extras/control/mpt_yalmipcftoc.m:
	mpt_yalmipcftoc: always add state constraint on x_N

	if state constraints are defined, we now always impose them on the
	last predicted state x_N as well.

	unit test added: mpt_ownmpc_test16.m
	[0b72c666d2fa]

	* examples/ownmpc/lyapunov1.m:
	lyapunov1: call mpt_lyapunov() directly with sysStruct as an input
	[901d9ce3dea9]

2006-03-28  Mato Baotic  <baotic@control.ee.ethz.ch>

	* extras/graphics/mpt_plotPWA.m:
	mpt_plotPWA: support Options.rowindex

	In Options.rowindex one can specify which row of Fi{:}*x+Gi{:}
	should be plotted. The options defaults to 1 if it is not given.
	[b2889eae7716]

2006-03-28  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* examples/nonlin/pw_nonlin.m:
	pw_nonlin: update help description
	[51350a781660]

	* examples/nonlin/nonlin2.m, mpt_getInput.m:
	mpt_getInput: work around problems with fmincon on Matlab R13

	fmincon in R13 sets the MaxSQPIter option to Inf, which very causes
	the solver to freeze. Matlab R14 uses a much better bound which is a
	function of the number of optimization variables and constraints.
	Therefore to prevent the cycling in R13/fmincon we now use the same
	settings as R14 does. If problems remain, one can set the option by
	changing Options.MaxSQPIter.
	[aa74ddfca2a5]

	* examples/nonlin/nonlin1.m, examples/nonlin/nonlin2.m,
	mpt_getInput.m:
	mpt_getInput: use the "global" solver for nonlinear problems by
	default

	According to Johan, it's better to always use the "global" nonlinear
	solver instead of the "local" version. However, it was observed on
	numerous cases that if fmincon() is used as the global solver, it
	very often just stalls under Matlab R13. No problems however when
	Matlab R14 is used. It is therefore recommended to always use
	Options.nlsolver='local' and Options.convertconvex=1 under Matlab
	R13.
	[d92b7ac76e0e]

	* examples/ownmpc/lyapunov1.m, examples/ownmpc/moveblock1.m,
	examples/ownmpc/moveblock2.m, examples/ownmpc/ownmpc10.m,
	examples/ownmpc/ownmpc11.m, examples/ownmpc/softconstr1.m,
	examples/ownmpc/softconstr2.m, examples/ownmpc/softconstr3.m,
	examples/ownmpc/softconstr4.m, examples/ownmpc/softconstr5.m,
	examples/ownmpc/timevar1.m, examples/ownmpc/timevar2.m:
	added more demos
	[47f12391af2a]

	* extras/control/mpt_yalmipcftoc.m:
	mpt_yalmipcftoc: return slacks as variables

	if mpt_yalmipcftoc() is used to design constraints and objective and
	constraint softening is enabled, we now return the slacks as
	variables, such that they can later be used in custom constraints.

	unit test added: mpt_ownmpc_test15.m
	[6a53243bbaf7]

	* extras/control/mpt_yalmipcftoc.m:
	mpt_yalmipcftoc: return only first Nc manipulated variables

	if move blocking is used via probStruct.Nc and we are only
	constructing constraints/objective for later use, we now return only
	firs Nc manipulated variables in V.u, since the rest is fixed to
	V.u{end}.

	unit test added: mpt_ownmpc_test14.m
	[089dad36110e]

2006-03-27  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* mpt_getInput.m:
	mpt_getInput: handle cases with move blocking

	if mpt_yalmipcftoc() or mpt_ownmpc() were used to deal with move
	blocking by means of probStruct.Nc, we now create a proper open-loop
	optimizer which contains all control moves u_0...u_N-1.

	without this patch we would only return those control moves which
	correspond to free manipulated variables, which would result in
	open-loop sequence of wrong size.

	unit test added: mpt_getInput_test6.m
	[3374be93951f]

	* mpt_control.m:
	mpt_control: properly handle move blocking with MPT-native functions

	changeset cedc93418d40 breaked move blocking if mpt_optControl() is
	used. therefore now we verify the input structures again if MPT-
	native functions are to be used, this time with Options.useyalmip
	disabled.

	unit test added: mpt_control_test3.m
	[1559dcb39dea]

	* extras/control/mpt_yalmipcftoc.m:
	mpt_yalmipcftoc: fix indexing of bounds w/ control horizon

	if control horizon is given, indexing of variables was incorrect
	when setting bounds on manipulated variables.
	[892504abcb0a]

	* extras/control/mpt_yalmipcftoc.m:
	mpt_yalmipcftoc: set bounds on "u" if move blocking is used

	bounds on manipulated variables must be set separatelly if a control
	horizon is used.
	[c5e02764e626]

	* extras/control/mpt_yalmipcftoc.m, mpt_control.m:
	allow control horizons with PWA systems or with linear costs

	mpt_verifyProbStruct would yell if control horizon is defined with
	PWA systems or with linear cost objectives. Therefore now we always
	use the Options.useyalmip=1 flag which tells the verification
	functions that it should allow these combinations.

	unit test added: mpt_control_test2
	[cedc93418d40]

	* mpt_getInput.m:
	mpt_getInput: check for correct dimension of x0

	unit test changed: mpt_getInput_test3.m
	[591482daf718]

	* extras/control/mpt_yalmipcftoc.m, mpt_ownmpc.m:
	mpt_ownmpc: keep flag about controller type

	a flag is now kept in the VARS structure which tells whether given
	constraints have been designed for on-line or for explicit
	controller. such flag is then used in the computation phase of
	mpt_ownmpc() such that the user does not have to provide the
	controller type again. example:

	[C, O, V] = mpt_ownmpc(sysStruct, probStruct, 'online'); ctrl =
	mpt_ownmpc(sysStruct, probStruct, C, O, V);

	notice that in the second command we don't need to specify the
	'online' flag again, since it is kept in "V". user can of course
	override the default behavior e.g. by

	ctrl = mpt_ownmpc(sysStruct, probStruct, C, O, V, 'explicit');

	unit test added: mpt_ownmpc_test13.m
	[8b8f2d338948]

	* @mptctrl/mptctrl.m:
	mptctrl: cannot convert nonlinear systems into dummy controllers

	unit test added: mptctrl/mptctrl_test3.m
	[987869e88c1d]

	* examples/nonlin/duffing_oscilator.m, examples/nonlin/nonlin1.m,
	examples/nonlin/nonlin2.m, examples/nonlin/pw_nonlin.m,
	examples/ownmpc/ownmpc1.m, examples/ownmpc/ownmpc2.m,
	examples/ownmpc/ownmpc3.m, examples/ownmpc/ownmpc4.m,
	examples/ownmpc/ownmpc5.m, examples/ownmpc/ownmpc6.m,
	examples/ownmpc/ownmpc7.m, examples/ownmpc/ownmpc8.m,
	examples/ownmpc/ownmpc9.m:
	added more demos
	[67adbf5d8d97]

2006-03-27  Helfried Peyrl  <hpeyrl@control.ee.ethz.ch>

	* solvers/esp/esp_setdiff_c.mexmac, solvers/fourier/fourier.mexmac,
	solvers/glpkmex/glpkmex.mexmac:
	added mex files for the MacOS platform
	[28e080a4af81]

2006-03-27  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* mpt_getInput.m:
	mpt_getInput: support Options.convertconvex

	Options.convertconvex should be set to 0 for general nonlinear
	problems. However the default is currently 1, since otherwise the
	nonlin2.m demo stalls under Matlab 6.5/Win due to cycling in
	fmincon.
	[706ef5add0fe]

2006-03-24  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* extras/control/mpt_yalmipcftoc.m:
	mpt_yalmipcftoc: set bounds on guards for piecewise nonlinear
	systems

	if system is piecewise nonlinear, we are using the implies()
	operator. this, however, gives a warning if the expression for
	guards is not bounded. currently YALMIP does not autopropagate
	bounds in "constraint" objects (it would be very difficult to do so,
	see comments in the patch).

	therefore to avoid the warnings we just set large bounds on the
	guards expressions. yes, this will probably lead to very poor big-M
	relaxation, but there is no clear better (and simple) way of doing
	it.
	[9238a44eaf9b]

	* mpt_simSys.m:
	mpt_simSys: return correct mode for piecewise nonlinear systems
	[b6fde4f36491]

	* extras/control/mpt_yalmipcftoc.m:
	mpt_yalmipcftoc: use proper casting when checking sigmonials

	when checking whether nonlinearities contain sigmonial terms, we
	must do a set() casting because gaurds will be given as "constraint"
	objects, not as "set" objects; and there is no is() operator defined
	for the "constraint" class.
	[22f145d1b7a3]

	* mpt_sys.m:
	mpt_sys: respect value of Ts defined in a nonlinear function
	template
	[0249c05418eb]

2006-03-23  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* mpt_ownmpc.m:
	mpt_ownmpc: fix typo in name of a variable
	[41c78041763f]

	* mpt_ownmpc.m:
	mpt_ownmpc: reject sigmonial constraints and objectives
	[8eafaa43e22f]

	* extras/analysis/mpt_removeOverlaps.m:
	mpt_removeOverlaps: check that cost is always linear

	we know properly check that the cost does not contain any quadratic
	terms.

	unit test added: extras/analysis/mpt_removeOverlaps_test7.m
	[1154cb6767f3]

	* mpt_lyapunov.m:
	mpt_lyapunov: reject controllers with overlapping partitions
	[1db4accb6fd4]

	* extras/analysis/mpt_removeOverlaps.m:
	mpt_removeOverlaps: fix cases where input was an mpctrl object

	we failed to create a valid output if input was an mptctrl object.

	unit test added: extras/analysis/mpt_removeOverlaps_test6.m
	[9ed2846429e0]

	* @mptctrl/mptctrl.m:
	mptctrl: use solvesdp() if we have nonlinear constraints

	if users use mpt_ownmpc() and then add nonlinear constraints, we now
	give a warning and keep the constraints and objective as YALMIP
	variables. then in mpt_getInput() we use solvesdp() to solve the
	nonlinear problem.

	unit test added: mpt_ownmpc_test11.m
	[a1f62d9bedaf]

2006-03-22  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* extras/control/mpt_yalmipcftoc.m:
	mpt_yalmipcftoc: prevent warnings due to unbounded variables in
	implies()

	if implies() is used (for PWA or piecewise nonlinear systems),
	since March 22nd, 2006 YALMIP checks whether all variables are
	bounded. If not, a warning is given. In order to prevent these
	warnings, we now replace all +/- Inf bounds by +/-
	mptOptions.infbox to prevent such warnings.

	unit test added: mpt_ownmpc_test1.m
	[a5f69f1a3b15]

2006-03-23  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* @polytope/plot.m, extras/graphics/mpt_plotPWA.m,
	extras/graphics/mpt_plotPWQ.m:
	allow to disbale usage of "drawnow" in plotting functions

	polytope/plot, mpt_plotPWA and mpt_plotPWQ now allow to supress
	usage of "drawnow" if Options.drawnow is set to 0 (1 is default).
	this leads to significant performance improvement e.g. when plotting
	a series of PWQ plots on top of each other.
	[7c2f0030ed7f]

2006-03-22  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* extras/graphics/mpt_plotPWQ.m:
	mpt_plotPWQ: fix wrong assignment of bounds
	[7e31c2521528]

2006-03-17  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* mpt_control.m:
	mpt_control: properly detect deltaY constraints

	we now only reject deltaY constraints for yalmip-based formulations
	if sysStruct.{dymax|dymin} are not set to +/- Inf.
	[2bbcd913c518]

2006-03-15  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* extras/auxiliary/mpt_pwa2hys.m:
	mpt_pwa2hys: don't append an '.hys' extension twice

	if the filename is already provided including the '.hys' extension,
	we should not add the same twice.
	[4b413136c4d1]

	* mpt_sys.m:
	mpt_sys: give nice error when input is an incomplete MLD structure

	if mpt_pwa2mld() is used, the resulting MLD structure does not have
	the field "rowinfo" set, therefore the automatic PWA conversion
	fails. if we detect such case, we now give a nice error message
	which tells the user what to do.

	unit test added: mpt_sys_test4.m
	[30faae4108a3]

2006-03-10  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* extras/control/mpt_yalmipcftoc.m:
	mpt_yalmipcftoc: fix undefined variable
	[afbb531e3c12]

	* @mptctrl/char.m, @mptctrl/mptctrl.m, extras/control/mpt_nonlinfcn.m,
	extras/control/mpt_yalmipcftoc.m, mpt_control.m, mpt_getInput.m,
	mpt_ownmpc.m, mpt_simSys.m, mpt_sys.m:
	MPC for nonlinear systems

	nonlinear (polynomial) systems are now supported for on-line MPC. to
	generate a system structure which describes a nonlinear system, one
	has to create a special function based on the mpt_nonlinfcn.m
	template and then call mpt_sys() as follows:

	sysStruct = mpt_sys(@function_name);

	such a system structure can then be used in mpt_control() and/or in
	mpt_ownmpc() to design on-line MPC problems. mpt_getInput() then
	solves a corresponding nonlinear optimization problem by calling
	solvesdp(). by default it uses a local solver, but the user can
	switch to a global solver by Options.nlsolver='global'.

	piecewise nonlinear systems are supported as well (see mpt_nonlinfcn
	for more details).
	[8ad15f4b5373]

	* @mptctrl/info.m:
	mptctrl/info: give more precise memory storage info
	[aebc11922b45]

	* extras/control/optmerge/polyinnerball.m:
	polyinnerball: only define tolerances when needed
	[5965c28483fd]

2006-02-24  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* @mptctrl/info.m:
	mptctrl/info: give a more precise memory storage information

	we now take into account that each floating point number is
	represented by 8 bytes, and each integer by 4 bytes.
	[4579868be0b7]

2006-02-23  Frank J. Christophersen  <fjc@control.ee.ethz.ch>

	* extras/analysis/mpt_dlyap_infnorm.m:
	mpt_dlyap_infnorm: add Options.minimal
	[99a9ff10a485]

2006-02-22  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* extras/control/mpt_yalmipcftoc.m:
	mpt_yalmipcftoc: replace +/-Inf bounds with +/- mptOptions.infbox
	[4cc220b30253]

	* solvers/clp/clp.m, solvers/clp/mexclp.cpp, solvers/clp/mexclp.dll:
	MEXCLP: updated to latest version
	[b2df0c147d4b]

2006-02-21  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* solvers/mpt_solveLP.m:
	mpt_solveLP: fix cases with no inequality constraints and with
	bounds

	if we have no inequality constraints, but do have bounds on
	variables, these bounds have not been correctly converted into
	constraints due to bogus detection of number of optimization
	variables.
	[5df99f8f466c]

	* extras/control/mpt_yalmipcftoc.m:
	mpt_yalmipcftoc: mark soft constraints in tags

	soft constraints are now marked by more descriptive tags in the set
	object.
	[3f5de39790de]

	* extras/control/mpt_yalmipcftoc.m:
	mpt_yalmipcftoc: take into account that there is no u(N)

	since we now have the variable "u" as a cell array of N elements
	(u_0 ... u_(N-1)), we do not have any u(N) in the formulation.
	therefore we must take this fact into account when requesting the
	open-loop solution from solvemp().
	[60c34385d4a1]

	* extras/control/mpt_yalmipcftoc.m:
	mpt_yalmipcftoc: handle cases with probStruct.N=1

	we now always create sdpvar objects as cell arrays even if we have
	prediction horizon of 1.
	[d0b76c50959f]

	* @mptctrl/mptctrl.m, extras/control/mpt_yalmipcftoc.m, mpt_ownmpc.m:
	mpt_yalmipcftoc, mpt_ownmpc: do not return y(N), u(N), d(N) and z(N)

	only x(N) is used in the MPC formulation, therefore we now return
	V.y, V.u, V.d and V.z as (N-1) dimensional arrays. This makes it
	easy to enforce constraints like

	 set(sum([V.u{:}])==0)

	without the need to remember not to count the last element.
	[255b9ffece5d]

	* docs/mpt_probStruct.m:
	mpt_probStruct: update help description
	[a811525f08ba]

	* docs/mpt_probStruct.m, docs/mpt_sysStruct.m:
	mpt_sysStruct, mpt_probStruct: updated help description
	[5f3acb4950ea]

	* @polytope/Contents.m, Contents.m, history.txt, mpt_init.m,
	readme.txt:
	bump version number to 2.6
	[2135ad7b9526]

	* extras/graphics/mpt_plotTimeTrajectory.m:
	mpt_plotTimeTrajectory: update help description
	[964b2ad03aae]

	* @mptctrl/info.m:
	mptctrl/info: update help description
	[494515d2458f]

	* mpt_getInput.m:
	mpt_getInput: always pass a guess of feasible solution to solvers

	guess of the feasible solution (Options.usex0) is now always passed
	to respective solver. moreover, selection of different solvers can
	now be directly controlled from mpt_getInput() by specifying
	Options.{lpsolver|qpsolver|milpsolver|miqpsolver}
	[d379e1e11cd3]

	* extras/control/mpt_yalmipcftoc.m:
	mpt_yalmipcftoc: add bounds to all variables for better scaling

	in case of on-line controllers we now add bounds to "uprev" and
	"reference" variables to achieve better scaling. if these bounds
	cannot be deduced (missing state/output/input constraints), a
	warning is given.
	[b64e34eebfbd]

2006-02-20  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* Contents.m, mpt_ownmpc.m:
	mpt_ownmpc: update help description
	[201ac578b889]

	* mpt_init.m:
	mpt_init: give more precise help when path is not set correctly

	to prevent problems like in issue196, we now give a more precise
	advice of what to do if path is not set to all subdirectories.
	[678576512a9f]

	* mpt_owncost.m, mpt_ownmpc.m:
	mpt_owncost renamed to mpt_ownmpc
	[9de9297c5ea4]

	* extras/auxiliary/mpt_verifySysStruct.m:
	mpt_verifySysStruct: do not require output constraints

	we now do not require output constraints to be given if state
	constraints are provided.

	unit test added: extras/auxiliary/mpt_verifySysStruct_test3.m
	[23429f6b63a4]

	* @mptctrl/mptctrl.m, mpt_control.m, mpt_owncost.m:
	mpt_control: support multi-model dynamics

	multi-model dynamics (sysStruct given as a cell array of system
	structures) can now be used in mpt_control() and mpt_owncost()

	unit test added: mpt_control_test1.m
	[e52db755f715]

2006-02-16  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* @mptctrl/mptctrl.m, mpt_owncost.m:
	mpt_owncost: allow to generate on-line controllers

	to generate constraints and objective:
	[C,O,V]=mpt_owncost(sysStruct, probStruct, 'online')

	to generate an on-line controller based on custom constraints and
	objective: ctrl = mpt_owncost(sysStruct, probStruct, C, O, V,
	'online')

	unit test added: mpt_owncost_test7.m
	[96b43d920192]

	* extras/control/mpt_yalmipcftoc.m:
	mpt_yalmipcftoc: do not use Rdu on u_N-u_{N-1}

	u_N is not used in the MPC setup, therefore we should not penalize
	the difference (u_N - u_{N-1}).
	[9fbbf57b0ccc]

2006-02-08  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* extras/control/mpt_yalmipcftoc.m:
	mpt_yalmipcftoc: prefer MLD models for on-line controllers

	from a large number of examples it seems that MLD models are more
	efficient to solve compared to the approach where we use one binary
	per region of a PWA model.

	therefore we now use the MLD representation by default for on-line
	controllers and give the user to force either PWA or MLD models by
	setting Options.force_pwa or Options.force_mld to 1.
	[1ec486dad0fe]

	* extras/auxiliary/sub_computeTrajectory.m:
	sub_computeTrajectory: handle open-loop solutions for PWA systems

	if an explicit solution for PWA systems has been computed by
	mpt_yalmipcftoc(), the full open-loop solution can be stored
	directly in ctrl.Fi and ctrl.Gi. therefore we now handle this case
	when computing open-loop trajectories.
	[2a81f6ccb3dc]

2006-02-07  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* mpt_sys.m:
	mpt_sys: add missing brace
	[5d5db899b366]

	* mpt_init.m:
	mpt_init: set 'bnb.branchrule' to 'weight' to improve speed

	if YALMIP is used as an mixed-integer solver, for control problems
	it makes sense to use 'weight' as the default branching rule in the
	branch&bound algorithm. it should improve the runtime.

	for more info contact Johan Loefberg.
	[1e40b41b1f55]

2006-02-06  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* extras/control/mpt_yalmipcftoc.m:
	mpt_yalmipcftoc: simplify expressions for output variables

	if the output equations are identical for all dynamics of a PWA
	system, we can now create a less complex model by avoiding
	dependence of the output variables on dynamics selectors.
	[fcf1d12a1c60]

	* mpt_sys.m:
	mpt_sys: extend detection of cases where input is an MLD structure
	[82ce6970f4ad]

	* extras/control/mpt_yalmipcftoc.m:
	mpt_yalmipcftoc: switch to one-shot formulation if Options.details=1

	we need to switch off the DP formulation if the user requires the
	full open-loop solution to be returned for PWA systems.

	unit test added: extras/control/mpt_yalmipcftoc_test2.m
	[5f48b7aca289]

2006-02-03  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* extras/auxiliary/mpt_yalmip2mpt.m:
	mpt_yalmip2mpt: work around model.integer_variables
	[16ba8889534d]

	* extras/control/mpt_yalmipcftoc.m:
	mpt_yalmipcftoc: make PWA tags more descriptive
	[8709088d82db]

	* extras/control/mpt_yalmipcftoc.m:
	mpt_yalmipcftoc: fix bogus indexing
	[88b95e56979e]

	* @mptctrl/mptctrl.m, extras/control/mpt_yalmipcftoc.m, mpt_control.m,
	mpt_getInput.m:
	allow to use mpt_yalmipcftoc() to construct and solve on-line
	problems
	[794d331c3bc6]

	* extras/graphics/mpt_plotTimeTrajectory.m:
	mpt_plotTimeTrajectory: allow to disable displaying of legends

	if Options.legend is set to 0, we do not display the legends.
	default is Options.legend=1.
	[ef03682b1817]

	* extras/auxiliary/mpt_yalmipDU.m,
	extras/auxiliary/mpt_yalmipTracking.m:
	mpt_yalmipDU/mpt_yalmipTracking: also augment soft constraints

	probStruct.{sxmax|symax} and probStruct.{Sx|Sy}, if present, need to
	be augmented in case of tracking or deltaU formulation.
	[43cca4801f00]

2006-02-01  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* extras/auxiliary/sub_computeTrajectory.m,
	extras/simulink/mpt_simInput_sfunc.m:
	always use Options.Uprev in call of mpt_getInput() w/ online
	controllers

	Options.Uprev is now needed for general on-line controllers designed
	by means of mpt_yalmipcftoc() in order to guarantee satisfaction of
	deltaU constraints.
	[d9da330b7277]

	* extras/auxiliary/mpt_yalmip2mpt.m, mpt_owncost.m:
	mpt_yalmip2mpt: convert YALMIP-based constraints/objective to MPT
	format
	[4d05653156e5]

	* solvers/mpt_solveMIQP.m:
	mpt_solveMIQP: fix typo in help description
	[1687329da45f]

	* extras/auxiliary/mpt_yalmipDU.m, extras/control/mpt_yalmipcftoc.m:
	mpt_control: use mpt_yalmipDU() to deal with deltaU constraints
	[75e111ddac02]

	* extras/auxiliary/mpt_yalmipTracking.m:
	mpt_yalmipTracking: switch to tracking=1 if there is Rdu penalty
	[9803cc356dcc]

	* mpt_control.m:
	mpt_control: switch tracking=2 to tracking=1 if there is Rdu penalty
	[c464379bdd85]

	* extras/auxiliary/mpt_verifySysStruct.m:
	mpt_verifySysStruct: improve verification of deltaU constraints
	[26504d3b049b]

	* extras/auxiliary/mpt_yalmipTracking.m:
	mpt_yalmipTracking: update help description
	[ffe7d57fdc48]

	* mpt_control.m:
	mpt_control: allow to call mpt_yalmipcftoc()

	mpt_yalmipcftoc() is used whenever we have boolean/integer inputs,
	or for 2-norm CFTOC problems for PWA systems. for certain setups we
	can use both mpt_yalmipcftoc() and MPTs native control functions; in
	that case Options.prefered='mpt' or Options.prefered='yalmip' can be
	used to switch to either of them.
	[79b8b374bd91]

	* mpt_owncost.m:
	mpt_owncost: display info about the problem being solved

	we now display a brief info about the problem which is to be solved.
	specificaly, we display number of optimization, parametric and
	integer variables involved in the optimization problem.
	[72b198e63053]

2006-01-31  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* extras/auxiliary/mpt_verifyProbStruct.m:
	mpt_verifyProbStruct: less verbose output
	[ecfa96888985]

	* extras/control/mpt_yalmipcftoc.m:
	mpt_yalmipcftoc: improve verification of sysStruct and probStruct
	[26cf0644c209]

	* extras/auxiliary/mpt_yalmipTracking.m:
	mpt_yalmipTracking: fix wrong matrix dimensions
	[bc6e8ac169cb]

2006-01-27  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* extras/control/mpt_yalmipcftoc.m:
	mpt_yalmipcftoc: remove a redundant subfunction

	mpt_defaultField() is now a default function.
	[3fe0efc40d62]

2006-01-25  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* extras/control/mpt_yalmipcftoc.m:
	mpt_yalmipcftoc: give better error messages
	[70ab07cbe2db]

	* extras/auxiliary/mpt_yalmipTracking.m,
	extras/control/mpt_yalmipcftoc.m:
	mpt_yalmipcftoc, mpt_yalmipTracking: use mpt_defaultField
	[d3ed1a892eb6]

	* extras/auxiliary/mpt_defaultField.m:
	mpt_defaultField: sets default value of a filed of a structure

	V = mpt_defaultField(S, fname, default)

	if "S" contains a field "fname" then that value is returned,
	otherwise it will return "default".
	[2c3041e4d4d3]

2006-01-24  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* mpt_owncost.m:
	mpt_owncost: keep verification of sysStruct and probStruct silent

	in the second phase (computation of a controller) we should keep
	mpt_verifySysProb silent, since all necessary messages have already
	been displayed in the first phase (construction of constraints).
	[f1f79234ab06]

	* mpt_owncost.m:
	mpt_owncost: fix bogus indexing
	[1896c7afdf56]

	* extras/auxiliary/mpt_yalmipTracking.m:
	mpt_yalmipTracking: remove probStruct.Rdu after augmentation

	when augmenting the system/problem to cope with tracking we should
	remove probStruct.Rdu, since this term will be included in
	probStruct.R. keeping probStruct.Rdu would cause problems in
	mpt_yalmipcftoc() where we use it (if present) to penalize deltaU in
	open loop.
	[8d3a60186d3b]

	* extras/auxiliary/mpt_yalmipTracking.m:
	mpt_yalmipTracking: fix augmentation of constraints
	[4ebe51663889]

	* mpt_owncost.m:
	mpt_owncost: verify structures before computation starts

	we now verify the sysStruct and probStruct structures even before we
	start computing the explicit controller, otherwise it would be
	annoying to give an error after the (possible) long time of
	computation.
	[3e657b411eb0]

	* mpt_owncost.m:
	mpt_owncost: fix undefined variable

	unit test added: mpt_owncost_test3.m
	[11d65d80c6f8]

	* extras/control/mpt_yalmipcftoc.m:
	mpt_yalmipcftoc: more error checks, improved "no solving" mode

	* checks that probStruct.N is correctly defined
	* returns all necessary variables in the Options.dont_solve=1 mode.
	[5459d5d4f16f]

	* mpt_owncost.m:
	mpt_owncost: improve handling of input/output arguments
	[8d6ec7128ee7]

2006-01-23  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* extras/auxiliary/mpt_yalmipTracking.m:
	mpt_yalmipTracking: augment system w/ tracking for mpt_yalmipcftoc()

	augmentes system dynamics to cope with tracking. the difference to
	mpt_prepareTracking is that we no longer create "Cy" and "Dy" fields
	of the system structure, but rather change cost matrices to penalize
	the difference (y-y_ref).
	[085835d91520]

	* mpt_owncost.m:
	mpt_owncost: design your own cost

	read help file for description.
	[7a017f0978d2]

	* extras/control/mpt_yalmipcftoc.m:
	mpt_yalmipcftoc: the almighty function

	read help file for description.
	[08f4556f9a9c]

	* extras/auxiliary/mpt_verifyProbStruct.m,
	extras/auxiliary/mpt_verifySysProb.m:
	mpt_verifyProbStruct: allow control horizon for PWA systems w/
	yalmip

	don't throw an error if we use control horizon for PWA systems with
	mpt_yalmipcftoc. Options.useyalmip must be set to true for this
	feature (it's false by default).

	unit test added: extras/auxiliary/mpt_verifySysProb_test2.m
	[2f73b9f6d5fc]

	* extras/auxiliary/mpt_verifySysStruct.m:
	mpt_verifySysStruct: make output constraints optional

	if Options.ybounds_optional is set to true (it's false by default),
	output constraints are no longer mandatory and will be set to +/-
	Inf if they are not present in the system structure.

	unit test added: extras/auxiliary/mpt_verifySysStruct_test2.m
	[93bbd7b2f2c5]

	* extras/auxiliary/mpt_prepareTracking.m:
	mpt_prepareTracking: mark system as being augmented

	a flag is added to the augmented sysStruct such that we know at
	later stages that the system was augmented exactly by this function.
	[1b1802dcdd69]

	* extras/analysis/mpt_computePWATset.m:
	mpt_computePWATset: include state constraints if present
	[35e01271c154]

2005-12-12  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* extras/analysis/mpt_computePWATset.m:
	mpt_computePWATset: respect user-provided Options
	[efce6abb1425]

2005-12-10  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* extras/auxiliary/mpt_mergeCS.m:
	mpt_mergeCS: properly merge Pfinal fields
	[6f4c27e57e83]

2006-01-27  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* extras/simulink/mpt_searchTree.c:
	mpt_searchTree.c: use different datatypes for RTW

	apparently "real_T" is needed instead of "double" when compiling
	with RTW/TLC.
	[6dcec4da92fa]

2006-01-20  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* extras/analysis/mpt_searchTree.m:
	mpt_searchTree: only modify original object in case of no outputs

	only modify the original object in caller's workspace if there are
	no output arguments from mpt_searchTree().

	unit test added: extras/analysis/mpt_searchTree_test2.m
	[f8903f8d3326]

	* mpt_lyapunov.m:
	mpt_lyapunov: allow sysStruct structures as inputs

	mpt_lyapunov(sysStruct, 'functiontype') is now an allowed syntax.
	the (autonomous) dynamical system is first converted into a dummy
	controller object using the "mptctrl(sysStruct)" syntax and then the
	computation of a given lyapunov function continues is a standard
	way.

	unit test added: extras/analysis/mpt_lyapunov_test6.m
	[52e610b2cd3e]

	* extras/analysis/mpt_getCommonSOSLyapFct.m:
	mpt_getCommonSOSLyapFct: define missing variables in special cases

	if number of regions is equal to number of dynamics, certain
	variables have not been defined.

	unit test added: extras/analysis/mpt_lyapunov_test4.m
	[592f88c28215]

	* extras/analysis/mpt_getPWQLyapFct.m:
	mpt_getPWQLyapFct: skip verification if all regions contain the
	origin

	if all regions contain the origin in their interior, the SDP program
	we intend to solve for verification purposes becomes empty and
	YALMIP will complain. therefore we skip the verification in such
	case.

	unit test modified: extras/analysis/mpt_lyapunov_test3.m
	[2c7c8f2cd889]

	* extras/analysis/mpt_getQuadLyapFct.m:
	mpt_getQuadLyapFct: deal with cases with just one region

	the H-representation of a polytope was not converted to a cell
	array. the correct behavior is assured by using pelemfun().

	unit test modified: extras/analysis/mpt_lyapunov_test3.m
	[f9ad2223113d]

	* extras/analysis/mpt_getPWALyapFct.m,
	extras/analysis/mpt_getPWPLyapFct.m,
	extras/analysis/mpt_getPWQLyapFct.m,
	extras/analysis/mpt_getQuadLyapFct.m:
	lyapunov functions: deal with special corner cases

	in cases where the explicit controller had as many regions as there
	are dynamics of the dynamical system, certain variables would be
	undefined. this patch fixes it.

	unit test added: extras/analysis/mpt_lyapunov_test3.m
	[fa5c9aa9c4a6]

	* @mptctrl/mptctrl.m:
	mptctrl: convert sysStruct structures into dummy controller objects

	mptctrl(sysStruct) will convert a system structure into a dummy
	explicit controller, where regions of the controller correspond to
	the partitions of a given LTI/PWA system. the conversion is done for
	the purpose of allowing stability analysis functions to investigate
	stability of autonomous systems.

	Note: only autonomous systems can be converted!

	unit test added: mptctrl/mptctrl_test2.m
	[e77b1d046d04]

	* extras/simulink/mpt_exportST.m, extras/simulink/mpt_searchTree.c:
	mpt_exportST: exports a binary search tree into a C-code

	creates a C-file which contains data of a given search tree,
	together with an algorithm needed to identify the optimal control
	law on-line.

	mpt_searchTree.c serves as a template, where the placeholder is then
	replaced by actual data of the binary search tree.

	unit test added: extras/simulink/mpt_exportST_test1.m
	[e8292128438b]

	* @mptctrl/info.m:
	mptctrl/info: displays detailed information about a given controller

	in addition to the char() method, this functions also displays
	memory requirements of a given explicit controller, details about
	which simplification has been used, and details about a binary
	search tree.

	unit test added: mptctrl/info_test1.m
	[6fe57323a98e]

	* extras/auxiliary/sub_computeTrajectory.m, mpt_computeTrajectory.m:
	mpt_computeTrajectory: adapt to new outputs returned by mpt_getInput

	adapt to new behavior of mpt_getInput() which now returns full
	details in a structure.
	[34bdfbea9ba2]

	* mpt_getInput.m:
	mpt_getInput: return # of operations spent in search tree evaluation

	mpt_getInput() now returns a 5th output as a structure which
	contains number of numerical operations (multiplications, additions,
	comparisons) which are spend in evaluation of a binary search tree.

	unit test added: mpt_getInput_test4.m
	[b5541222c605]

2006-02-16  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* extras/analysis/mpt_transmap.m:
	mpt_transmap: handle cases where there is no target

	fixed a condition which would always stop the function if we have no
	target partition.
	[909e1e8da817]

	* mpt_simSys.m:
	mpt_simSys: update help description

	desfription of the "mode" output was missing in the usage line,
	reported by S. Richter.
	[19057291710e]

	* extras/analysis/mpt_transmap.m:
	mpt_transmap: give a nice error if vertex enumeration fails

	we now point the user to updated help file where he will be noted
	how to change the vertex eneumration solver in case of problems.
	[d2399f30821b]

	* extras/analysis/mpt_getQuadLyapFct.m:
	mpt_getQuadLyapFct: reject PWA systems with noise

	PWA systems with noise are not supported. reported by A. Beccuti.
	[9fc09238689b]

	* extras/analysis/mpt_getCommonSOSLyapFct.m:
	mpt_getCommonSOSLyapFct: fix wrong boolean condition and indexing

	reported by A. Beccuti.
	[109d0be048b0]

2006-02-14  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* extras/control/mpt_constructMatrices.m:
	mpt_constructMatrices: all(X==0) changed to all(all(X==0))

	as pointed out by Klaus Trangbaek, all() operates column-wise, hence
	it should be changed to all(all()) to get a scalar answer.

	fixes issue193
	[e8f1f3ba9157]

2006-02-08  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* mpt_control.m:
	mpt_control: extend help description

	add links to 'help mpt_sysStruct' and 'help mpt_probStruct'.
	[3361db7eaa47]

2006-02-05  Miroslav Baric  <baric@control.ee.ethz.ch>

	* extras/analysis/mpt_removeOverlaps.m:
	mpt_removeOverlaps: always return correct details.keptParts

	details.keptParts was always returned as an empty vector, which was
	causing severe problems in mpt_optControlPWA when used with
	Options.details=1.

	unit test added: extras/analysis/mpt_removeOverlaps_test5.m
	[658cf8407683]

2006-02-01  Frank J. Christophersen  <fjc@control.ee.ethz.ch>

	* extras/auxiliary/mpt_norm2pwa.m:
	mpt_norm2pwa: change default settings

	unit test modified: exras/auxiliary/mpt_norm2pwa_test1.m unit test
	modified: exras/auxiliary/mpt_norm2pwa_test2.m
	[31eececacbcf]

	* extras/graphics/mpt_plotPWA.m:
	mpt_plotPWA: fix missing subindexing
	[33b883e7c9fa]

2006-02-01  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* mpt_invariantSet.m:
	mpt_invariantSet: fix undefined variable when invariant set is empty
	[56bbd11ac265]

2006-01-24  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* Contents.m, docs/Contents.m, examples/Contents.m,
	examples/ballandplate/Contents.m, examples/ccode/Contents.m,
	examples/demos/Contents.m, examples/hysdel/Contents.m,
	examples/models/Contents.m, examples/reachdemo/Contents.m,
	examples/turbocar/Contents.m, examples/watertanks/Contents.m,
	extras/Contents.m, extras/analysis/Contents.m,
	extras/auxiliary/Contents.m, extras/control/Contents.m,
	extras/control/optmerge/Contents.m, extras/geometry/Contents.m,
	extras/graphics/Contents.m, extras/gui/Contents.m,
	extras/simulink/Contents.m, mpt_init.m, solvers/Contents.m:
	extend copyright to year 2006
	[fe4ccad27de4]

2006-01-24  Johan Loefberg  <loefberg@control.ee.ethz.ch>

	* solvers/clp/mexclp.dll:
	MEXCLP recompiled with latest version of CLP
	[a66c285afbd8]

2006-01-24  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* mpt_init.m:
	mpt_init: bump version number to 2.5.1
	[862e89a24e10]

	* mpt_init.m:
	mpt_init: GLPK was not recognized as an LP solver
	[7e85e4357419]

	* mpt_getInput.m:
	mpt_getInput: inform the user if x0 violates state constraints

	especially in case of tracking it can happen that the user specifies
	a reference point which is outside of constraints. in such case we
	give nicer message indicating the cause why no region contains a
	given state.

	fixes issue163

	unit test added: mpt_getInput_test5.m
	[1d9c35868c0a]

2006-01-18  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* extras/analysis/mpt_searchTree.m:
	mpt_searchTree: only modify original object in case of no outputs

	only assign the modified object into caller's workspace if there are
	no output arguments for the function call.

	unit test added: extras/analysis/mpt_searchTree_test2.m
	[a7336bce66a2]

2005-12-16  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* mpt_lyapunov.m:
	mpt_lyapunov: fix crash when no lyapunov function was found

	if not lyapunov function of a given type could be found, we tried to
	use the variable "type" to display what type of function we tried to
	compute. but that variable was undefined.
	[347e877f2f0c]

2006-02-01  Frank J. Christophersen  <fjc@control.ee.ethz.ch>

	* extras/analysis/mpt_dlyap_infnorm.m:
	mpt_dlyap_infnorm: computes PWL Lyapunov functions

	new supercool function for computing PWL Lyap function for
	unconstrained LTI of basically arbirtray size. solves Lyapunov-like
	equation for linear norms.
	[34684e4de721]

2006-01-31  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* @polytope/slice.m:
	polytope/slice: return indices of fully-dimensional cuts

	the slice() function now returns a 2nd output as a vector of indeces
	of polytopes where the cut lead to a fully-dimensional polytope.

	unit test added: polytope/slice_test1.m
	[c14b55e34403]

	* mpt_invariantSet.m:
	mpt_invariantSet: only consider first control move even for PWA
	systems

	when linking dynamics to regions for PWA systems, we always assumed
	that the controller only contains the first control move in Fi/Gi
	fields. However, if we would have a full open-loop control sequence
	available for PWA systems, we need to consider only the first move.
	[8adfebee6550]

2006-01-09  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* @polytope/or.m:
	polytope/or: fix handling of empty polytopes

	when computing unions of fully-dimensional polytopes with empty
	ones, we have been incorectly returning an empty polytope.

	unit test added: polytope/or_test1.m
	[1625dd1cf0d1]

2005-12-08  Johan Loefberg  <loefberg@control.ee.ethz.ch>

	* extras/auxiliary/mpt_mplp_ver7.m, solvers/mpt_mpqp.m:
	mpt_mpqp, mpt_mplp: speed up the sub_whichquadrant() subfunction
	[dd8e49b00df2]

2005-12-08  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* @polytope/isinside.m:
	polytope/isinside: speedup

	initializing a vector and using find() is much faster than adding
	elements on the fly.
	[ebda772098ae]

	* solvers/mpt_mpqp.m:
	mpt_mpqp: give warning when the mpQP is not positive definite

	unit test added: solvers/mpt_mpqp_test8.m
	[59532947036d]

2005-12-07  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* mpt_simplify.m:
	mpt_simplify: allow inputs which are not controller objects

	mpt_simplify() can now be used for objects which are not necessarily
	controller objects, but are, for instance, solution partitions which
	contain at least the fields Pn, Fi, Gi, Ai, Bi, and Ci.

	unit test added: mpt_simplify_test1.m
	[c23c4a7c50ed]

	* extras/graphics/mpt_plotPWA.m, extras/graphics/mpt_plotPWQ.m:
	mpt_plotPWQ, mpt_plotPWA: improved handling of new plots / holded
	plots

	when mpt_plotPWQ() or mpt_plotPWA() are used several times, they
	would plot the result into the same window on top of the previous
	result, regardless of the status of 'hold on'.

	now we always clear the current (sub)plot, but respect the user's
	choice of 'hold on' or 'subplot()'.

	this patch also simplifies the messy code of mpt_plotPWQ: 1. manual
	computation of bounding boxes replaced by calling bounding_box()
	directly (note that it supports polytope arrays)

	2. if there are overlapping regions, for a given point we now plot
	the minimal function value associated to that point
	[b8269e89f659]

	* mpt_simplify.m:
	mpt_simplify: update help description
	[31364f525789]

	* extras/control/mpt_optQuadCtrl.m:
	mpt_optQuadCtrl: properly deal with probStruct.y0bounds=1

	do not impose constraints on y0 if user does not want to.

	unit test added: extras/control/mpt_optQuadCtrl_test7.m
	[41cc427bd2e3]

2005-12-06  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* @polytope/projection.m:
	polytope/projection: add protection against cycling

	the iterative-hull algorithm can cycle under certain occasions. this
	patch adds a protection by aborting if number of iterations exceedes
	certain limit.

	unit test added: polytope/projection_test14.m
	[af2e36fa586f]

2005-12-09  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* @polytope/plot.m:
	polytope/plot: add Options.elevate

	if Options.elevate is set to true, each polytope of a 1D or 2D
	polytope array is "elevated" along the 2nd/3rd dimension with an
	increasing index of the polytope in a given array. Example:

	P = [unitbox(2) unitbox(2)]; plot(P, struct('elevate', 1)); view(3);
	[d51c41e6312d]

2005-12-06  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* .hgtags:
	Added tag MPT_2_5 for changeset
	eed2f8dbdff4818ddda463984bf8bcdea4ea2d29
	[4450aa16cc44]

2005-12-06  Johan Loefberg  <loefberg@control.ee.ethz.ch>

	* extras/auxiliary/mpt_ineq2eq.m:
	mpt_ineq2eq: add a small tolerance when checking equalities

	some numerical issues have been observed under Matlab R12, therefore
	we add a small tolerance when pre-checking equalities.

	unit test added: extras/auxiliary/mpt_ineq2eq_test2.m
	[eed2f8dbdff4] [MPT_2_5]

2005-12-06  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* Contents.m, history.txt:
	changes for MPT 2.5 final
	[de9af5c35572]

	* extras/control/mpt_optQuadCtrl.m:
	mpt_optQuadCtrl: fix a typo
	[66d277a76655]

	* solvers/mpt_mpmiqp.m:
	mpt_mpmiqp: fix a typo
	[76cd85748c9c]

2005-12-05  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* extras/graphics/mpt_plotPWQ.m:
	mpt_plotPWQ: do not output handles if user does not want to

	we shouldn't return anything if mpt_plotPWQ is called with no output
	arguments.
	[fc7e9b5b6c17]

2005-12-04  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* solvers/mpt_mpmilp.m, solvers/mpt_mpmiqp.m:
	mpMIQP and mpMILP solvers

	mpt_mpmiqp and mpt_mpmilp can now be used to solve multi-parametric
	mixed integer programs. variables can be either continuous, or
	binary, or from finite alphabet (Matrices.vartype,
	Matrices.alphabet)

	it takes the same Matrices as mpt_mpqp/mpt_mplp do.

	unit test added: solvers/mpt_mpmilp_test1.m unit test added:
	solvers/mpt_mpmilp_test2.m unit test added:
	solvers/mpt_mpmilp_test3.m unit test added:
	solvers/mpt_mpmiqp_test1.m unit test added:
	solvers/mpt_mpmiqp_test2.m unit test added:
	solvers/mpt_mpmiqp_test3.m
	[7450ab6b11cd]

	* extras/auxiliary/sub_setyalmipdata.m:
	sub_setyalmipdata: set correct cost for MIQPs

	the quadratic part of the cost is already divided by 2 in
	mpt_solveMIQP.
	[9a7778fe232c]

	* @polytope/subsasgn.m:
	polytope/subsasgn: check dimensions of polytopes

	fixes a bug where following assignment was allowed:

	P = [unitbox(2) unitbox(2)]; P(2) = unitbox(4);

	now we check that dimensions of all arguments are equal.

	unit test added: polytope/subsasgn_test1.m
	[1fca78ea4375]

	* solvers/mpt_solveMIQP.m:
	mpt_solveMIQP: use 1/2*x'*H*x as objective for YALMIP-based methods

	objective was not set correctly when using solvers interfaced by
	YALMIP

	unit test added: solvers/mpt_solveMIQP_test1.m
	[42fe8446872e]

	* extras/control/mpt_optQuadCtrl.m:
	mpt_optQuadCtrl: pass everything what is in Options to solvemp()
	[085c12166b51]

	* solvers/mpt_mpqp.m:
	mpt_mpqp: work around cases where we fail to compute Phard

	if hardA and hardb are empty, polytope constructor will throw an
	error on polytope(hardA, hardb).

	temporary we construct an empty polytope in such case and give a
	warning.

	unit test added: solvers/mpt_mpqp_test7.m
	[79d5e8d18ba4]

	* solvers/mpt_mpqp.m:
	mpt_mpqp: support Options.zero_tol

	Options.zero_tol allows to change the so-far hard-coded value of
	zero_tol. It seems that the problem in issue180 requires zero_tol to
	be at least 5e-13.

	unit test added: solvers/mpt_mpqp_test6.m
	[e358a643d523]

2005-12-02  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* @mptctrl/cancompile.m, extras/simulink/mpt_exportc.m,
	extras/simulink/mpt_getSfuncParam.m, extras/simulink/mpt_mexData.m,
	extras/simulink/mpt_sim.mdl:
	allow to use CFTOC/PWA/2-norm controllers in Simulink

	this patch introduces a new function mptctrl/cancompile() which
	returns true if a given explicit controller can be exported to C
	code and hence can be used in Simulink simulations.

	Now with such controllers we switch to matlab-based s-function.
	[8fb0cfb5b18c]

	* extras/control/Contents.m, extras/control/mpt_optQuadCtrl.m,
	mpt_control.m:
	CFTOC of PWA systems with quadratic cost

	supports boolean/integer inputs, tracking, multiple target sets,
	time varying penalties.

	unit test added: extras/control/mpt_optQuadCtrl_test1.m unit test
	added: extras/control/mpt_optQuadCtrl_test2.m unit test added:
	extras/control/mpt_optQuadCtrl_test3.m unit test added:
	extras/control/mpt_optQuadCtrl_test4.m unit test added:
	extras/control/mpt_optQuadCtrl_test5.m
	[17a1dffcca32]

	* extras/auxiliary/mpt_prepareTracking.m:
	mpt_prepareTracking: handle polytope arrays in probStruct.Tset

	unit test added: extras/auxiliary/mpt_prepareTracking_test1.m
	[516987cb890d]

	* @mptctrl/isinvariant.m, @mptctrl/isstabilizable.m:
	properly decide about stability/invariance of CFTOCs for 2-norm/PWA

	mptctrl/isinvariant() and mptctrl/isstabilizable() should not return
	true unless we are able to guarantee stability of CFTOC solutions
	for PWA systems with quadratic cost.
	[038c1ed2c620]

	* extras/auxiliary/sub_computeTrajectory.m:
	sub_computeTrajectory: fix wrong IF condition
	[c6adbc0dcfa0]

	* solvers/mpt_mpqp.m:
	mpt_mpqp: handle cases ehre Matrices.G has no columns

	handle the case where Matrices.G has zero columns. this can happen
	when solving an mpMIQP where all optimization variables are binary.

	unit test added: solvers/mpt_mpqp_test4.m
	[0a57dd5c3897]

	* solvers/mpt_mpqp.m:
	mpt_mpqp: fix problems with multiple identical constraints

	if there are several active constraints which are identical, we must
	take only the unique ones, otherwise we run into numerical problems
	when foing matrix inversion.

	unit test changed: solvers/mpt_mpqp_test1.m unit test added:
	solvers/mpt_mpqp_test3.m
	[47dc10d52961]

	* solvers/mpt_mpqp.m:
	mpt_mpqp: quickly bail out if constraints are infeasible

	if we have to remove redundant inequalities from constraints and we
	detect that the problem is infeasible, we should exit quickly.

	unit test added: solvers/mpt_mpqp_test2.m
	[42c743cf45db]

2005-12-01  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* @polytope/nconstr.m:
	polytope/nconstr: return total number of hyperplanes for polyarrays

	if input is a polytope array, nconstr() now returns the sum of
	number of hyperplanes of each polytope. e.g.

	p1 = unitbox(2,1); nc = nconstr([p1 p1]) nc = 8

	unit test added: polytope/nconstr_test1.m
	[ecfcebb7f2d5]

	* extras/auxiliary/mpt_solveLPi.m:
	mpt_solveLPi: handle LPs with no inequality constraints

	NAG doesn't like when there are no inequality constraints defined.
	In such case we must set A and B as empty matrices of correct size,
	otherwise NAG will give an error.

	unit test added: solvers/mpt_solveLP_test2.m
	[894c960763bf]

	* solvers/mpt_solveLP.m:
	mpt_solveLP: don't use sparse matrices with NAG

	NAG and CDD do not like when inputs are sparse matrices, therefore
	we convert them.
	[71a0ab1d8f28]

2005-11-30  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* extras/control/mpt_optControlPWA.m:
	mpt_optControlPWA: handle cases where there is no QP solver
	available

	we must switch to mpt_optControlPWAold if there is no QP solver
	available, because we can't use latest mpLP which generates
	adjacency information.

	unit test added: extras/control/mpt_optControlPWA_test6.m
	[15972ea9941e]

	* @polytope/plot.m:
	polytope/plot: add Options.zvalue

	when plotting 2D polytopes and Options.zvalue is given, it will
	shift the polytope along the 3rd dimension by this value.

	example: plot(p1, struct('zvalue', 1)); hold on plot(p2, 'b',
	struct('zvalue', 2));

	unit test added: polytope/plot_test2.m
	[3726400ea058]

2005-11-28  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* solvers/mpt_solveQP.m:
	mpt_solveQP: handle cases where there are no inequality constraints

	if matrices defining the inequality constraints are empty, we must
	define the "A" matrix as an empty matrix of appropriate dimensions,
	otherwise NAG will complain.

	unit test added: extras/solvers/mpt_solveQP_test3.m
	[0b0d5eba5673]

	* extras/analysis/mpt_reachSets.m:
	mpt_reachSets: reject cases when U0 is either a polyarray or empty

	we now give a nice error message when U0 is a polytope array or a
	not fully-dimensional polytope.

	unit test added: extras/analysis/mpt_reachSets_test4.m
	[b688906e66c0]

	* extras/analysis/mpt_reachSets.m:
	mpt_reachSets: fix problems with PWA systems

	unit test added: extras/analysis/mpt_reachSets_test3.m
	[2220beff0194]

2005-11-26  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* extras/graphics/mpt_plotPWQ.m:
	mpt_plotPWQ: cache data to improve speed

	this patch speeds mpt_plotPWQ by a factor of two even on most simple
	partitions (like the Double Integrator example with 25 regions).
	[bd8f41b1e410]

	* extras/graphics/mpt_plotTimeTrajectory.m, mpt_getInput.m:
	throw an error when dimension of x0 is wrong

	mpt_getInput() and mpt_plotTimeTrajectory() now give a nice error
	message when dimension of x0 is wrong.

	unit test added: mpt_getInput_test3.m unit test added:
	mptctrl/simplot_test2.m
	[d7d5c8f684b3]

2005-11-25  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* examples/demos/mpt_demo3.m, examples/demos/mpt_demo4.m,
	examples/demos/mpt_demo5.m, examples/demos/mpt_demo6.m:
	demos updated to latest syntax
	[36aa7599f70b]

	* @mptctrl/plotj.m, @mptctrl/plotu.m, history.txt:
	new mptctrl/plotu() and mptctrl/plotj() functions

	plotu(ctrl) now does the same as mpt_plotU(ctrl) plotj(ctrl) now
	does the same as mpt_plotJ(ctrl)

	unit test added: mptctrl/plotu_test1.m unit test added:
	mptctrl/plotj_test1.m
	[9ca20b6fd12a]

	* extras/graphics/mpt_plotPWA.m, extras/graphics/mpt_plotPartition.m:
	don't open two new figures if Options.newfigure is true
	[ec37d27ac7dc]

	* @mptctrl/sim.m, @mptctrl/simplot.m, history.txt:
	new functions for simulations of controllers

	mptctrl/sim now acts as a better interface to mpt_computeTrajectory.
	It allows to specify different dynamical systems for simulation than
	the one which was used for computation of the controller.

	mptctrl/simplot either calls mpt_plotTrajectory if x0 is not given,
	or mpt_plotTimeTrajectory otherwise.

	unit test added: mptctrl/sim_test1.m unit test added:
	mptctrl/simplot_test1.m
	[6966a96e0c17]

	* extras/auxiliary/sub_computeTrajectory.m:
	sub_computeTrajectory: improve error checks of Options.sysStruct

	when Options.sysStruct is given and the controller was designed
	either for tracking or for deltaU constraints, this patch introduces
	a more comprehensive checking whether Options.sysStruct is
	compatible with the controller in terms of number of system states.

	unit test added: extras/auxiliary/sub_computeTrajectory_test7.m
	[7cc106ad08bb]

	* extras/auxiliary/di_sim_fun.m,
	extras/auxiliary/sub_computeTrajectory.m, history.txt,
	mpt_computeTrajectory.m:
	allow to use arbitrary systems for simulations

	mpt_computeTrajectory now accepts two new options:

	Options.sysStruct - if specified, we use this system structure for
	simulations. That means that control actions obtained with a given
	controllers are then applied to this system to obtain the next state
	update. Example:

	>> Double_Integrator >> ctrl = mpt_control(sysStruct, probStruct);
	>> lti2dstable >> Options.sysStruct = sysStruct; >>
	mpt_computeTrajectory(ctrl, x0, [], Options);

	Options.sysHandle - if specified as a function handle, we execute
	the function given by the handle in order to obtain the next state
	update. Example:

	>> Double_Integrator >> ctrl = mpt_control(sysStruct, probStruct);
	>> Options.sysHandle = @di_sim_fun; >> mpt_computeTrajectory(ctrl,
	x0, [], Options);

	unit test added: extras/auxiliary/sub_computeTrajectory_test6.m
	[b0512ff8bcae]

	* extras/analysis/mpt_getPWALyapFct.m, mpt_lyapunov.m:
	mpt_lyapunov: detect that no PWA Lyap.Fct. exists, display such info

	we have not been correctly detecting that no PWA Lyapunov function
	exists. Now we also display info when such case occurs.
	[577d9237adf7]

2005-11-24  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* extras/auxiliary/mpt_solveLPi.m, extras/auxiliary/mpt_solverInfo.m,
	mpt_init.m, solvers/mpt_solveLP.m:
	support for the PDCO solver

	http://www.stanford.edu/group/SOL/software/pdco.html

	however it appears to be very slow on the small-scale problems used
	in multi-parametric optimization. faster than CDD on big problems
	(>30 variables, >500 constraints); but slower than GLPK.
	[673a0b204b14]

2005-11-24  Frank J. Christophersen  <fjc@control.ee.ethz.ch>

	* extras/auxiliary/mpt_norm2pwa.m:
	bug fix if P and Pn have different dimension
	[9785b2294fd2]

	* extras/auxiliary/mpt_norm2pwa.m:
	added a second method (enumeration) to get te PWA representation
	[fa83ab2a7dac]

2005-11-24  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* extras/graphics/mpt_plotTrajectory.m:
	mpt_plotTrajectory: don't plot the partition if user doesn't want to

	if Options.showPn is set to 0, we now do not plot the polyhedral
	partition over which the control law is defined. default is 1.

	unit test added: extras/graphics/mpt_plotTrajectory_test1.m
	[5c9c6407a6d2]

2005-11-23  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* @polytope/projection.m:
	polytope/projection: improve heuristics, fix small bug

	fixes a bug which occurs with verbose=2 and when the mplp-based
	method fails.

	unit test added: polytope/projection_test11.m unit test added:
	polytope/projection_test12.m
	[009f3cd063ad]

	* @polytope/projection.m:
	polytope/projection: keep the mplp-based method silent

	we now catch any output from mpt_mplp() to prevent displaying
	intermediate warnings from mpt_solveQP() or from facetcircle().

	unit test added: polytope/projection_test11.m
	[a50dda59e1c5]

2005-11-23  Frank J. Christophersen  <fjc@control.ee.ethz.ch>

	* extras/auxiliary/mpt_norm2pwa.m:
	backward compatebility to older matlab (logical statements)
	[73676ac6e6d8]

	* extras/auxiliary/mpt_norm2pwa.m:
	transforms a linear norm into an equivalent PWA representation
	[9ed7ec70fe49]

2005-11-23  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* .hgtags:
	Added tag MPT_2_5_RC1 for changeset
	689f331b057b8adbcf2cf966cfcc0e7ac6ed25f1
	[f30a4d2e8c17]

	* history.txt:
	removed executable flag from history.txt
	[689f331b057b] [MPT_2_5_RC1]

	* solvers/cddmex/cddmex.mexglx:
	make CDDMEX silent under linux

	i have commented out most of CDD's messages that maximum number of
	pivots was exceeded.
	[d807b68a9223]

2005-11-22  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* solvers/mpt_mpqp.m:
	make mpt_mpqp less verbose
	[0483f810fc54]

	* extras/auxiliary/mpt_mplp_ver7.m:
	mpt_mplp_ver7: keep projection() silent

	when projecting lower-dimensional polytopes we now keep projection()
	silent by catching it's output.
	[35a257e29201]

	* extras/auxiliary/mpt_mplp_ver7.m:
	mpt_mplp_ver7: project flat degenerate regions

	we now try to project degenerate regions even though they are not
	fully dimensional, but are flat. this prevents holes as in the unit
	test

	unit test added: solvers/mpt_mplp_test5.m
	[5e9f3686b61e]

	* extras/auxiliary/mpt_mplp_ver7.m:
	mpt_mplp_ver7: prevent cycling

	cycling usually happens when we have a point xBeyond, we solve an LP
	for that point, find an active set, construct a critical region and
	the new region does NOT contain the point xBeyond.

	although this is all caused by numerics, we try to prevent such
	cases by checking if xBeyond is contained in the critical region. if
	not, we just skip it.

	this patch also decreases default value of ZERO_TOL to 1e-8, since
	it was observed on numerous cases that with 1e-7 we very often
	identify wrong set of active constraints.

	unit test added: solvers/mpt_mplp_test7.m unit test added:
	solvers/mpt_mplp_test9.m unit test added: solvers/mpt_mplp_test10.m
	unit test added: solvers/mpt_mplp_test11.m
	[7d31cfddd4cb]

	* @polytope/projection.m:
	polytope/projection: improve the mplp-based method

	we now use zero cost when solving the projection via mplp. even
	though this might lead to degeneracies, it often results into very
	simple solutions.

	we also give this method higher priority, since it seems to be
	rather fast and reliable.

	unit test added: polytope/projection_test3.m unit test added:
	polytope/projection_test7.m unit test added:
	polytope/projection_test9.m unit test added:
	polytope/projection_test10.m unit test added:
	polytope/projection_issue38.m
	[5e07513f4df4]

2005-11-21  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* extras/control/mpt_constructMatrices.m, solvers/mpt_mpqp.m:
	mpt_mpqp: remove redundant constraints to prevent problems

	if constraints of an mpQP contain redundant constraints, we must
	eleminate such redundancies, otherwise we can get into problems with
	wrong identified active constraints.

	but we only reduce the constraints if Matrices.constraints_reduced
	is not set to true. to prevent redundant polytope reducation,
	mpt_constructMatrices now sets this flag appropriately.

	unit test added: solvers/mpt_mpqp_test1.m unit test added:
	extras/control/mpt_constructMatrices_test1.m
	[d2d3e63d4d5d]

2005-11-20  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* extras/analysis/mpt_removeOverlaps.m:
	mpt_removeOverlaps: always return correct details.keptParts

	details.keptParts was not set correctly if only one partition was
	used.

	unit test added: extras/analysis/mpt_removeOverlaps_test4.m
	[77ebadfd57e1]

	* extras/analysis/mpt_removeOverlaps.m:
	mpt_removeOverlaps: improve performance

	* we now use bounding boxes to create map of intersecting regions
	* logic which detects which partitions do overlap is now improved
	* abitility to prune non-overlapping regions based on extreme points

	leads to significant speed improvements (up to factor of 2 on
	complex 3D partitions)

	unit test added: extras/analysis/mpt_removeOverlaps_test1.m unit
	test added: extras/analysis/mpt_removeOverlaps_test2.m unit test
	added: extras/analysis/mpt_removeOverlaps_test3.m
	[cc333096fa3d]

2005-11-18  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* solvers/esp/esp_LP.m:
	esp_LP: call mpt_solveLPs to get higher reliability

	since in all ESP's code solutions to linear programs are required to
	be feasible, we now solve any LP in the "rescue" mode which brings
	higher reliability.

	unit test added: polytope/projection_test9.m
	[7b3e7a75cd8f]

	* extras/auxiliary/mpt_mplp_ver7.m:
	make mpt_mplp_ver7 less verbose by default

	we do not display the "Polyhedra should not overlap" warning unless
	Options.verbose=2.
	[3f84bbc50336]

	* @polytope/projection.m:
	polytope/projection: improve heuristics

	give lower priority to the mplp-based approach, esp seems to perform
	better, in general.
	[16aede029078]

	* @polytope/projection.m:
	polytope/projection: clear options before calling mpt_mplp()

	we must remove the ".projection" and ".psolvers" fields from the
	options structure, otherwise we would use wrong solver when the mpLP
	used to solve the projection is degenerate.
	[7ea5b336750e]

	* extras/auxiliary/mpt_mplp_ver7.m:
	mpt_mplp_ver7: use Options.projection only if it is provided

	we now only set crOptions.projection if Options.projection is given.
	otherwise we let projection() decide which method to use.
	[8af82eab3e22]

	* mpt_init.m:
	mpt_init: don't call sub_maxsolvers before path is checked

	we must not call the sub_maxsolvers() subfunctions before we check
	that all necessary directories are correctly set.
	[07867d3ababd]

	* @polytope/Contents.m, Contents.m, history.txt, mpt_init.m:
	bump version number to 2.5
	[f5abe6fe9987]

	* @polytope/projection.m:
	polytope/projection: improve heuristics + fix typo

	now we only exclude the iterative hull algorithm if we are
	projecting on more than 5 dimensions.
	[5c3a2f23d211]

	* extras/geometry/hull.m:
	hull: consider elements smaller than 1e-12 as zero

	CDD is very sensitive to numerical noise, therefore we convert all
	elements whose absolute value is smaller than 1e-12 to zero.
	[4dfc61994f73]

	* @polytope/extreme.m:
	polytope/extreme: consider elements smaller than 1e-12 as zero

	CDD is very sensitive to numerical noise, therefore we convert all
	elements whose absolute value is smaller than 1e-12 to zero.

	fixes test: polytope/extreme_test5.m fixes test:
	extras/analysis/mpt_transmap_test1.m
	[747847fec082]

	* extras/analysis/mpt_transmap.m:
	mpt_transmap: increase tolerance, call extreme() with Options

	unit test added: extras/analysis/mpt_transmap_test1.m
	[6068fb790086]

	* @polytope/projection.m:
	polytope/projection: improve mex fourier's reliability

	instead of shifting the input polytope by a random vector, we shift
	it such that it always contains the origin in it's interior. this
	improves numerical robustness

	unit test added: polytope/projection_test5.m
	[1ebf68196164]

	* @polytope/projection.m:
	polytope/projection: give higher priority to ESP for generic cases
	[bed6da37c8e9]

	* @polytope/projection.m:
	polytope/projection: improve heuristics selecting projection method

	this patch improves heuristics which decides which projection method
	will be used for a particular polytope.
	[2afa96ae45dc]

	* extras/control/mpt_iterativePWA.m:
	mpt_iterativePWA: only remove field of a structure if the field
	exists
	[556592ed65e5]

2005-11-17  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* @polytope/plus.m, extras/auxiliary/mpt_mplp_ver7.m,
	extras/control/mpt_iterativePWA.m:
	let projection() decide which method to use

	we should not specify projection method manually, rather let the
	heuristics in polytope/projection() decide which algorithm to use.
	[86c476917269]

	* @polytope/projection.m:
	polytope/projection: use smaller randomization with psolver=5

	when the mex version of fourier motzkin is used, there are cases
	where the randomization we use to prevent numerical problems is "too
	big".

	unit test added: polytope/projection_test5.m
	[850eb5d5c205]

	* @polytope/projection.m:
	polytope/projection: check on which dimensions we want to projecto
	to

	we can't project if:
	* we project on a dimension which is bigger than dimension of the
	input polytope.

	* we project on a dimension which is less than 0.

	* we project on a dimension given by an empty matrix.

	unit test added: polytope/projection_test4.m
	[092f7155af73]

	* @polytope/projection.m:
	polytope/projection: solve projection by mpLP

	Options.projection=7 now solves the projection problem as an multi-
	parametric linear program.

	unit test modified: polytope/projection_test3.m
	[8e7e2cd455db]

	* extras/control/mpt_mixedMinTime.m,
	extras/control/mpt_optControlPWA.m:
	use uppercase warnings
	[149ef196fb0f]

2005-11-16  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* extras/analysis/mpt_isPWAbigger.m:
	mpt_isPWAbigger(): take cost from details if necessary

	Johan wanted this...

	unit test added: extras/analysis/mpt_isPWAbigger_test1.m
	[460776a0912f]

2005-10-24  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* @polytope/getInnerEllipsoid.m:
	make getInnerEllipsoid work for arbitrary dimensions
	[0143405a6e81]

	* @polytope/getInnerEllipsoid.m, @polytope/getOutterEllipsoid.m:
	make sure the E matrix is symmetric
	[5df90e678ae0]

2005-10-13  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* @polytope/getInnerEllipsoid.m, @polytope/getOutterEllipsoid.m:
	return ELLIPSOID objects instead of shape matrix and center
	[29578a3378d9]

2005-11-15  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* solvers/mpt_mpqp.m:
	mpt_mpqp(): jump to next facet if facetcircle fails

	if facetcircle() cannot compute any point on a given facet, we
	should immediately jump to next one.
	[dc973cf2bb3d]

	* extras/auxiliary/mpt_mplp_ver7.m:
	mpt_mplp_ver7(): decrease maximum allowed step size

	ALPHA=1e-5 was too big for most tricky problems, 1e-6 is a much more
	reliable setting.

	unit test added: solvers/mpt_mplp_test6.m
	[2362d7e093fb]

	* @polytope/facetcircle.m:
	polytope/facetcircle(): don't break when we explore multiple facets

	if an error occures and we are exploring multiple facets, we should
	not exit the function, but rather continue to compute center of an
	another facet.

	unit test added: polytope/facetcircle_test4.m
	[edc96f2c1fc3]

2005-11-14  Marco Laumanns  <laumanns@ifor.math.ethz.ch>

	* extras/simulink/mex_getInput.mexa64,
	extras/simulink/mpt_getInput_sfunc_parm.mexa64,
	extras/simulink/mpt_isinside_sfunc.mexa64,
	solvers/SeDuMi105/adendotd.mexa64,
	solvers/SeDuMi105/adenscale.mexa64,
	solvers/SeDuMi105/blkchol.mexa64, solvers/SeDuMi105/bwblkslv.mexa64,
	solvers/SeDuMi105/bwdpr1.mexa64, solvers/SeDuMi105/cholsplit.mexa64,
	solvers/SeDuMi105/choltmpsiz.mexa64, solvers/SeDuMi105/ddot.mexa64,
	solvers/SeDuMi105/dpr1fact.mexa64, solvers/SeDuMi105/eigK.mexa64,
	solvers/SeDuMi105/extractA.mexa64, solvers/SeDuMi105/eyeK.mexa64,
	solvers/SeDuMi105/factorK.mexa64, solvers/SeDuMi105/findblks.mexa64,
	solvers/SeDuMi105/finsymbden.mexa64,
	solvers/SeDuMi105/fwblkslv.mexa64, solvers/SeDuMi105/fwdpr1.mexa64,
	solvers/SeDuMi105/getada1.mexa64, solvers/SeDuMi105/getada2.mexa64,
	solvers/SeDuMi105/getada3.mexa64,
	solvers/SeDuMi105/givensrot.mexa64,
	solvers/SeDuMi105/incorder.mexa64,
	solvers/SeDuMi105/invcholfac.mexa64,
	solvers/SeDuMi105/iswnbr.mexa64, solvers/SeDuMi105/makereal.mexa64,
	solvers/SeDuMi105/ordmmdmex.mexa64,
	solvers/SeDuMi105/partitA.mexa64, solvers/SeDuMi105/psdeig.mexa64,
	solvers/SeDuMi105/psdfactor.mexa64,
	solvers/SeDuMi105/psdframeit.mexa64,
	solvers/SeDuMi105/psdinvjmul.mexa64,
	solvers/SeDuMi105/psdinvscale.mexa64,
	solvers/SeDuMi105/psdjmul.mexa64, solvers/SeDuMi105/psdscale.mexa64,
	solvers/SeDuMi105/qblkmul.mexa64, solvers/SeDuMi105/qframev.mexa64,
	solvers/SeDuMi105/qinvsqrt.mexa64, solvers/SeDuMi105/qrK.mexa64,
	solvers/SeDuMi105/qreshape.mexa64, solvers/SeDuMi105/qscaleK.mexa64,
	solvers/SeDuMi105/quadadd.mexa64, solvers/SeDuMi105/sortnnz.mexa64,
	solvers/SeDuMi105/sqrtinv.mexa64, solvers/SeDuMi105/statsK.mexa64,
	solvers/SeDuMi105/symbbwblk.mexa64,
	solvers/SeDuMi105/symbfwblk.mexa64,
	solvers/SeDuMi105/symfctmex.mexa64,
	solvers/SeDuMi105/triumtriu.mexa64,
	solvers/SeDuMi105/urotorder.mexa64, solvers/SeDuMi105/vecsym.mexa64,
	solvers/SeDuMi105/vectril.mexa64, solvers/SeDuMi105/whichcpx.mexa64,
	solvers/cddmex/cddmex.mexa64, solvers/esp/esp_setdiff_c.mexa64,
	solvers/fourier/fourier.mexa64:
	added mex files for the GLNXA64 platform
	[86e536dde2c9]

2005-11-13  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* extras/analysis/mpt_getCommonSOSLyapFct.m:
	mpt_getCommonSOSLyapFct(): reject noise in V-representation

	noise in V-representation is not yet supported by this function,
	therefore we throw an error which informs about that.

	unit test added: extras/analysis/mpt_getCommonSOSLyapFct_test1.m
	[b4c5b0271002]

	* extras/control/mpt_optControlPWA.m,
	extras/control/mpt_optInfControlPWA.m:
	fix typos
	[9497e8ec1878]

2005-10-27  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* extras/auxiliary/mpt_verifyProbStruct.m,
	extras/auxiliary/mpt_verifySysProb.m,
	extras/auxiliary/mpt_verifySysStruct.m:
	set default sysStruct/probStruct names when verifying them

	if inputname() can't be used to determin names of sysStruct/
	probStruct variables used in mpt_control(), we should set them to
	default names ('sysStruct' and 'probStruct')

	unit test added: extras/auxiliary/mpt_verifySysProb_test1.m
	[5721860ac902]

	* extras/auxiliary/mpt_verifySysStruct.m, mpt_control.m:
	move detection of wrong noise dimensions to mpt_verifySysStruct()

	unit test added: extras/auxiliary/mpt_verifySysStruct_test1.m
	[d6838ac73a98]

2005-10-04  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* extras/auxiliary/sub_computeTrajectory.m:
	[PATCH] use noise even when Options.minnorm is -1 and N is given

	mpt_plotTimeTrajectory() sets Options.minnorm=-1. if N is defined by
	the user, we switched off noise, even if it was given. now we
	correctly affect trajectories with noise in such case.

	unit test added: sub_computeTrajectory_test2.m
	[99ac14e4d5c9]

	* extras/auxiliary/sub_computeTrajectory.m:
	[PATCH] use default values if too few inputs are given

	sets N=[] and Options=[] by default if they are not given

	unit test added: sub_computeTrajectory_test1.m
	[8b6376804c05]

2005-10-03  Mario Vasak  <mario.vasak@fer.hr>

	* extras/analysis/mpt_infsetPWA.m:
	speed improvements

	instead of checking if two polyarrays are equal, due to the nature
	of the problem it is enough to test subset satisfaction. for more,
	see the diff.
	[6a91b480ac4e]

2005-09-27  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* mpt_invariantSet.m:
	properly handle cases where invariant set is empty
	[7b8ca99a25c7]

2005-09-27  Mario Vasak  <mario.vasak@fer.hr>

	* extras/analysis/mpt_infsetPWA.m:
	speed improvements and bug fix

	1. bug fix - In Pn(1) dynamics is such that you totally enter Pn(2)
	in one step, and in Pn(2) it is such that you leave the whole Pn in
	one step. Thus, the invariant set is an empty set. The old version
	returned Pn(1) as the invariant set, which is wrong. New version now
	correctly returns an empty set

	2. speed improvements - implement handling of target partitions
	according to "Rakovic, Grieder, Kvasnica, Mayne, Morari: Computation
	of Invariant Sets for Piecewise Affine Discrete Time Systems subject
	to Bounded Disturbances."
	[82a1cb7976be]

2005-09-27  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* extras/auxiliary/sub_computeTrajectory.m:
	support V-represented noise in simulations
	[c85c74f0138e]

2005-09-13  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* mpt_control.m:
	check if noise has correct dimension
	[6fc280e19b90]

2005-09-12  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* extras/analysis/mpt_infsetPWA.m:
	allow to simplify intermedia steps using merge()

	Signed-off-by: Mario Vasak

	especially for cases with additive noise it is beneficial to
	simplify intermediate results using merge().
	[665191b7b66d]

	* @mptctrl/char.m, @mptctrl/mptctrl.m,
	extras/analysis/mpt_getPWALyapFct.m,
	extras/analysis/mpt_getPWPLyapFct.m,
	extras/analysis/mpt_getPWQLyapFct.m,
	extras/analysis/mpt_getQuadLyapFct.m, extras/analysis/mpt_infset.m,
	extras/analysis/mpt_infsetPWA.m,
	extras/auxiliary/mpt_verifySysProb.m,
	extras/auxiliary/sub_computeTrajectory.m,
	extras/control/mpt_constructMatrices.m,
	extras/control/mpt_iterativePWA.m,
	extras/control/mpt_mixedMinTime.m, extras/control/mpt_oneStepCtrl.m,
	extras/control/mpt_optControlPWA.m,
	extras/control/mpt_optInfControl.m, mpt_computeTrajectory.m,
	mpt_control.m:
	support for lower-dimensional noise polytopes given by
	V-representation

	sysStruct.noise can now be either a polytope object, or a lower
	dimensional polytope given by it's V-representation. keep in mind
	that vertices of the representation must be stored row-wise!

	solves issue130 and issue151
	[09b3da6b1d85]

	* extras/auxiliary/mpt_isnoise.m:
	[NEW] mpt_isnoise checks if noise is defined

	noise can either be a polytope, in which case true is returned if
	the polytope is fully dimensional. if noise is a matrix
	(V-represented polytope), true is returned if it is non-empty.
	[39a060cee12f]

2005-11-13  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* extras/auxiliary/mpt_mpsol2ctrl.m:
	mpt_mpsol2ctrl - convert solution of mplp/mpqp into a ctrlStruct

	converts solution of multi-parametric program into a dummy
	controller structure which is then suitable for mpt_removeOverlaps()
	[eedb4f30fd71]

2005-11-12  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* extras/simulink/mpt_exportc.m:
	mpt_exportc(): allow calls with 2 input arguments

	unit test added: extras/simulink/mpt_exportc_test1.m
	[1ea70666675c]

2005-11-12  Johan Loefberg  <loefberg@control.ee.ethz.ch>

	* @polytope/Contents.m, @polytope/unique.m:
	polytope/unique(): remove redundant entries of a polytope array

	U = unique(P) will return only unique elements of the polytope array
	P.

	unit test added: polytope/unique_test1.m
	[509b3781b4ae]

2005-11-12  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* @polytope/reduce.m:
	polytope/reduce(): always return correct keptrows

	keptrows was not correctly computed when [H,K] either contained
	multiple identical hyperplanes, or when K contained Inf terms.

	unit test added: polytope/reduce_test4.m unit test added:
	polytope/reduce_test5.m
	[3583353cd0a2]

	* @polytope/reduce.m:
	polytope/reduce(): preserve order of hyperplanes

	using [a,b]=unique([H K], 'rows') can destroy order of hyperplanes.
	to bring the order back to correspond to the original matrices, we
	must sort the "b" array.

	unit test added: polytope/reduce_test3.m
	[aac953fb070c]

2005-11-11  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* @polytope/reduce.m:
	polytope/reduce(): remove obsolete comments
	[4aa555e1ff7d]

	* extras/control/mpt_optControlPWA.m:
	mpt_optControlPWA: set ctrl.overlaps to zero in special cases

	if we have a system with just one dynamics, we failed to set the
	ctrl.overlaps flag to zero. this is fixed now.

	unit test added: extras/control/mpt_optControlPWA_test5.m
	[49c9a916c041]

	* @mptctrl/modify.m:
	mptctrl/modify(): test that vectors have enough elements

	before removing elements from certain fields of ctrl.details, we
	must check that those fields contain enough elements.

	reason being that, for instance, mpt_invariantSet() does not modify
	ctrl.details.activeConstraints, which can then lead to errors when
	mptctrl/modify() is used.

	unit test added: mptctrl/modify_test4.m
	[0d8755de760c]

2005-11-10  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* @polytope/mtimes.m:
	polytope/mtimes(): allow scaling even when origin is not included

	1. scaling by a scalar is now allowed even when the input polytope
	does not contain the origin in it's interior

	2. fixed scaling for polyarrays

	3. scaling by zero now returns an empty polytope

	unit test added: polytope/mtimes_test1.m unit test added:
	polytope/mtimes_test2.m
	[c1fca82b4f63]

	* @polytope/projection.m:
	polytope/projection(): important fixes

	1. projection(P, dim) where "dim" is not sorted (e.g. dim=[3 1]) was
	producing wrong results with all methods

	2. projection(P, dim) where at least one element of "dim" is close
	to dimension of P was casuing errors when the mex-fourier method
	was used

	3. if the input polytope is bounded and it's projection is not, we
	now throw an error

	4. code is now less messy, moved the mex-fourier code to a separate
	subfunction

	unit test added: polytope/projection_test2.m unit test added:
	polytope/projection_test3.m
	[4fd50f8eee77]

2005-11-10  Mato Baotic  <mato.baotic@fer.hr>

	* @polytope/regiondiff.m:
	polytope/regiondiff(): Options.infbox cannot exceed
	mptOptions.infbox

	when result of regiondiff is R^n, we must make sure that
	Options.infbox is not larger than mptOptions.infbox.

	unit test added: polytope/regiondiff_test1.m
	[0b08c5cc76fe]

2005-11-03  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* extras/auxiliary/mpt_defaultOptions.m:
	mpt_defaultOptions(): sets default values for the Options structure

	mpt_defaultOptions(Options, 'a', 1) sets Options.a=1 if the
	Options.a field does not exist.

	unit test added: extras/auxiliary/mpt_defaultOptions_test1.m
	[102694e2a545]

	* extras/auxiliary/mpt_ineq2eq.m:
	mpt_ineq2eq(): also return indicies of equality constraints

	unit test added: extras/auxiliary/mpt_ineq2eq_test1.m
	[0779d505b163]

2005-11-02  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* extras/control/mpt_optControlPWA.m:
	mpt_optControlPWA(): always return Pfinal as a polytope array

	before this patch we have been returning ctrlStruct.Pfinal as an
	empty polytope. now we return a polytope array which contains Pfinal
	obtained at each step.

	unit test added: extras/control/mpt_optControlPWA_test4.m
	[3a5b598ba7f5]

	* extras/control/mpt_oneStepCtrl.m:
	mpt_oneStepCtrl(): define all variables if Options.Pfinal is given

	loopCtr was undefined if user provided Options.Pfinal.

	uni test added: extras/control/mpt_oneStepCtrl_test5.m
	[1762ff59889e]

	* @polytope/triangulate.m:
	polytope/triangulate(): properly update extreme points

	last output of triangulate() should be the input polytope but with
	extreme points stored inside.

	unit test added: polytope/triangulate_test1.m
	[76db6ca93353]

	* @polytope/triangulate.m:
	polytope/triangulate(): do not return volume as a complex number

	we should check if determinant is positive before making a square
	root.
	[dcaa894fdec8]

	* extras/analysis/mpt_maxCtrlSet.m:
	mpt_maxCtrlSet: automatically set Options.Kinf=1 if
	Options.Vconverge>0

	if Options.Vconverge is non-zero, we now automatically switch to
	Kinf computation, because convergence detection based on volume
	increase does not work for Cinf computation.

	unit test added: extras/analysis/mpt_maxCtrlSet_test5.m unit test
	added: extras/control/mpt_oneStepCtrl_test4.m
	[c93bd71dd917]

	* @polytope/Contents.m:
	describe polytope/pelemfun in @polytope/Contents.m
	[a342e91e7a54]

2005-11-01  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* @polytope/pelemfun.m:
	pelemfun(): execute an arbitrary function on each element of
	polyarrays

	PELEMFUN(@FHANDLE, Pn, [X1, ..., Xn]) evaluates a function defined
	by the function handle FHANDLE on all _elements_ of the polytope
	array Pn. Additional input arguments X1, ..., Xn can be specified.
	Couple of examples: E = pelemfun(@extreme, Pn) returns extreme
	points of all polytopes stored in the polytope array Pn as a cell
	array. [X, R] = pelemfun(@chebyball, Pn) returns centers and
	radii of the chebychev ball of each element of Pn. B =
	pelemfun(@bounding_box, Pn, struct('Voutput', 1)); V = [B{:}]
	returns bounding boxes of all elements of Pn converted to a matrix.
	I = pelemfun(@le, Pn, Q) returns a cell array of logical statements
	with true value at position "i" if Pn(i) is a subset of Q.

	unit test added: polytope/pelemfun_test1.m
	[7f12da44c432]

	* @polytope/bounding_box.m:
	polytope/bounding_box(): add Options.Voutput

	if Options.Voutput=1, V=bounding_box(P) will return the lower and
	upper vertex in V, i.e. V = [l u]. the boudning box will NOT be
	constructed (and returned ) as a polytope object if this option is
	set to true.

	also changes behavior of Options.bboxvertices - this option only has
	effect when Options.Voutput is true.

	unit test changed: polytope/bounding_box_test2.m unit test added:
	polytope/bounding_box_test4.m
	[3986c280ac8b]

	* extras/analysis/mpt_maxCtrlSet.m, extras/control/mpt_oneStepCtrl.m:
	mpt_oneStepCtrl(): use mpt_maxCtrlSet to compute controllable sets

	before we have been computing maximum controllable sets directly in
	mpt_oneStepCtrl() for LTI, even though such computation really
	belongs to mpt_maxCtrlSet.

	this patch also makes it possible to use mpt_oneStepCtrl() together
	with Kinf computation:

	mpt_oneStepCtrl(sysStruct, probStruct, struct('Kinf', 1))
	[aba12e95ef07]

	* @polytope/volume.m:
	do not return volume as a complex number

	volume of a polytope was sometimes returned as a complex number due
	to numerical inconsistencies (determinant slightly negative, making
	square root of it). now we check that the determinant is positive.

	unit test added: polytope/volume_test1.m
	[762d7bcdffed]

	* extras/graphics/mpt_plotPWA.m, extras/graphics/mpt_plotPartition.m,
	extras/graphics/mpt_plotU.m:
	respect user's choice of subplots

	fixes issue169
	[067eeccd7a40]

2005-11-01  Frank J. Christophersen  <fjc@control.ee.ethz.ch>

	* extras/analysis/mpt_buildAdjacency.m:
	cleaning data from numerical problematic adjacency information

	added 'Options.remove_inf' so one can inforce the removal of columns
	in neighbor list that consist only of -Inf or 0. if Pi is convex:
	one can always use this optional to increase numerical robustness.
	[8f41ad8287ad]

2005-10-31  Frank J. Christophersen  <fjc@control.ee.ethz.ch>

	* extras/analysis/mpt_buildAdjacency.m:
	added numerical robustness for convex polyarrays
	[5baac5c7c5d0]

2005-10-29  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* @polytope/bounding_box.m:
	polytope/bounding_box(): impove performance

	we now postpone computation of dimension of polytope until it is
	really needed. results into a slight speed improvement.
	[db2218e4072b]

	* @polytope/dointersect.m:
	polytope/dointersect(): improve performance

	* use isempty(P.Array) instead of length(P)==1
	* replace length(P) by length(H), where H is a cell array

	leads to a slight speed improvement
	[84c4caee0c98]

	* @polytope/bounding_box.m:
	polytope/bounding_box(): improve performance

	changeset beaa2b73496b fixed the case where input polytope was empty
	(i.e. not fully dimensional). since calling isfulldim(P) is rather
	expensive and because doing ~isempty(P.bbox) performs the same
	check, we move the ~isfulldim(P) part after the ~isempty(P.bbox)
	condition.

	this results in significant speedup for "standard" calls, e.g. for
	[B, low, up] = bounding_box(P, Options) since doing isfulldim(P) is
	rather expensive, we move the part of the code which is more likely
	to be called prior
	[af8d38fe0469]

	* @polytope/dointersect.m:
	polytope/dointersect(): use bounding boxes also for polyarrays

	we can now quickly detect certain non-intersecting cases based on
	bounding boxes also if input arguments are polytope arrays.

	also improved bounding box logic for single polytopes.
	[8dedc56087e8]

	* @polytope/intersect.m:
	polytope/intersect(): add larger tolerance when checking bounding
	boxes

	when bounding boxes are checked to detect whether two polytopes do
	not intersect, we should use larger tolerance than abs_tol, to avoid
	nunmerical problems caused by wrongly computed bounding boxes.

	also improves the logic based on which we check bounding boxes.
	[df1218b63830]

	* @polytope/bounding_box.m:
	polytope/bounding_box(): change behavior of Options.noPolyOutput

	if Options.noPolyOutput is set to true, we have been returning an
	empty matrix as the first output argument, instead of returning the
	full bounding box polytope (which is expensive to compute).

	now with Options.noPolyOutput=1 we return the input polytope as the
	first output argument, but we update the bounding box information
	inside of that object, if it was not there.

	example: P = polytope(...); P = set(P, 'bbox' []); % clear bounding
	box information Options.noPolyOutput=1; [B, low, up] =
	bounding_box(P)

	now B will be equal to P, but it will contain the bounding box in
	B.bbox. Polytope arrays work in the same way.

	unit test added: polytope/bounding_box_test3.m
	[eb455b1a1e65]

	* @polytope/bounding_box.m, @polytope/private/bboxvertices.m:
	move computation of vertices of bounding boxes into a separate
	function

	@polytope/private/bboxvertices() can now be used by all polytope
	functions to compute all vertices of a bounding box:

	V = bboxvertices(BoxMin, BoxMax, dimension)

	note that the vertices will be stored column-wise!!!
	[c4f755e11b99]

	* @polytope/bounding_box.m:
	remove unnecessary call to dec2bin(1)

	replace binaryOne=dec2bin(1) by T='1' which is much faster.
	[afcec1f83ebe]

2005-10-28  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* @polytope/bounding_box.m:
	make bounding_box() return vertices if asked for

	with Options.bboxvertices=1 and Options.noPolyOutput=1 the function
	will now return all vertices of the bounding box as first output
	argument, i.e.

	Options.bboxvertices = 1; Options.noPolyOutput = 1; V =
	bounding_box(P, Options);

	NOTE! the vertices are stored column-wise!!!

	unit test added: polytope/bounding_box_test2.m
	[83e8ecdf2876]

	* extras/auxiliary/mpt_sysStructInfo.m:
	make mpt_sysStructInfo() display info about a given system

	when run with no output arguments, we now display textual
	information about a given system (either LTI or PWA):

	mpt_sysStructInfo(sysStruct)

	unit test added: extras/auxiliary/mpt_sysStructInfo_test1.m
	[84289275a45c]

	* mpt_init.m:
	speed up mpt_init()

	instead of trying to execute every single solver which we find, we
	just execute a predefined number of them - 3 in LP case, 1 in
	QP/MILP/MIQP case and 5 for vertex enumeration. a major speedup
	follows.

	also re-organized the code slightly, some parts which occured
	several times have been moved to sub-functions.

	unit test added: mpt_init_test1.m
	[8e25dcad3d2f]

	* @mptctrl/horzcat.m, @mptctrl/subsasgn.m, @mptctrl/vertcat.m:
	explicitly disallow concatenation of MPTCTRL objects

	this introduces dummy function horzcat(), subsasgn() and vertcat()
	for MPTCTRL objects which inform the user that the respective
	operation is not supported.

	unit test added: mptctrl/horzcat_test1.m
	[14bc5e6a1fc8]

	* @polytope/Contents.m, @polytope/distribpoints.m:
	[NEW] polytope/distribpoints() - distribure points on polytopes

	distribpoints(P, n) will distribute "n" points inside of polytope
	"P" such that the minimum l_1 distance between any pair of points is
	maximized.

	Note! the procedure is based on MILP and can be _very_ slow for
	higer dimensions / number of points.

	unit test added: polytope/distribpoints_test1.m
	[a74522de46a9]

	* extras/control/mpt_constructMatrices.m:
	fix help description of mpt_constructMatrices()
	[9683c79b9e86]

	* @mptctrl/subsref.m:
	allow to evaluate the control law for state x0 more easily

	extend subindexing of MPTCTRL objects such that: u=ctrl(x0) will now
	do the same as u=mpt_getInput(ctrl, x0). u=ctrl(x0, Options)
	corresponds to u=mpt_getInput(ctrl, x0, Options).

	subindexing with dot ('.') still works, e.g. Pn = ctrl.Pn

	unit test added: mptctrl/subsref_test2.m
	[2b4598c8d2a2]

	* mpt_getInput.m:
	allow to call mpt_getInput() with empty options

	mpt_getInput(ctrl, x0, []) now works

	unit test added: mpt_getInput_test2.m
	[00771efe6087]

	* solvers/mpt_mplp.m, solvers/mpt_mpqp.m:
	fix help descriptions for mpt_mplp() and mpt_mpqp()
	[37b7feff588b]

2005-10-27  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* solvers/mpt_mpqp.m:
	initialize all output variables / detect infeasible solutions
	[2161d6027d78]

	* extras/control/mpt_getInputXU.m:
	properly deal with cases where not all XU regions contain x0

	if some region of the XU set does not contain given state x0 we
	should silently skip to next region, instead of raising an error.

	also returns correct region of the original partition which is
	identified to contain x0.
	[8954b2f727fc]

	* extras/analysis/mpt_maxCtrlSet.m, extras/control/mpt_oneStepCtrl.m:
	allow to break computation of Kinf sets based on volume increase

	introduces new option for mpt_maxCtrlSet() - Options.Vconverge. If
	this option is non-zero, it is assumed to define a percentage value
	which is then used to break computation of Kinf sets if volume of
	the set at iteration "k+1" relative to volume of such set at
	iteration "k" expressed in percents is below this value.

	unit test added: extras/control/mpt_oneStepCtrl_test3.m
	[80e99ef5e36f]

	* extras/analysis/mpt_maxCtrlSet.m, extras/control/mpt_oneStepCtrl.m:
	make mpt_maxCtrlSet() return sets obtained at each iteration

	introduces additional output arguments in mpt_maxCtrlSet() and
	mpt_oneStepCtrl() - Piter. It is a polytope array which contains
	sets obtained at each iteration.

	NOTE! If Kinf set is compute, Piter will contain the initial LQR
	target set as the first element!

	unit test added: extras/control/mpt_oneStepCtrl_test2.m
	[8e3aaba81160]

2005-10-25  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* extras/control/mpt_getInputXU.m:
	initialize all output arguments in mpt_getInputXU()

	due to an uninitialized output argument we have had an error if x0
	was outside of the feasible set.

	unit test added: extras/control/mpt_getInputXU_test2.m
	[5980185d72a1]

	* extras/auxiliary/mpt_randLTISys.m:
	allow to generate only unstable systems in mpt_randLTISys()

	Options.justUnstable=1 will force only unstable systems to be
	generated.

	unit test added: extras/auxiliary/mpt_randLTISys_test1.m
	[7907129f2b33]

	* extras/control/mpt_getInputXU.m, mpt_getInput.m:
	fix typos in variable names

	unit test added: extras/control/mpt_getInputXU_test1.m
	[6660f4d7fa75]

2005-10-24  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* mpt_sys.m:
	inform user what to do if there is problem related to HYSDEL
	simulator

	if we can't read code of a simulator generated by HYSDEL, we tell
	the user he/she can use mpt_sys(..., 'nosimulator') flag to avoid
	generation of simulators in first place.
	[1b6b86d3bf66]

	* mpt_sys.m:
	mpt_sys: do not generate HYSDEL simulator if user tells so

	mpt_sys('hysdelfile', 'nosimulator') will disable generation of
	HYSDEL simulators. Note that on-line simulation of systems converted
	with this flag will be done via solving a feasibility MILP, which
	can be much slower than using the simulator.

	unit test added: mpt_sys_test1.m
	[62a6bc85df58]

2005-10-22  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* extras/auxiliary/mpt_mplp_ver7.m:
	add missing semicolon
	[ed517da0e518]

2005-10-20  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* extras/auxiliary/mpt_mplp_ver7.m:
	fix random perturbations for 1D systems

	random perturbations are performed in mpt_mplp when looking for set
	of active constraints. if the problem is in 1D, we have to use
	different technique, because we can't use radius of facets, since it
	is zero in 1D case.

	unit test added: solvers/mpt_mplp_test2.m
	[229a486b9db4]

	* extras/auxiliary/mpt_options.m:
	allow to return individual settings in mpt_options

	mpt_options('field') will now return value of the corresponding
	field in mptOptions. for instance, mpt_options('lpsolver') can now
	be used to quickly return index of the currently selected lp solver.

	unit test added: extras/auxiliary/mpt_options_test1.m
	[5903330a779d]

2005-10-20  Frank J. Christophersen  <fjc@control.ee.ethz.ch>

	* extras/control/mpt_getInputXU.m:
	control strategies if XUset is provided
	[14dd745193ef]

	* mpt_computeTrajectory.m, mpt_getInput.m:
	functionality for XUsets included

	Possibility to simulate controller partitions (with holes) based
	stability XUsets is included.
	[cecc670d2a7c]

2005-09-29  Miroslav Baric  <baric@control.ee.ethz.ch>

	* extras/auxiliary/mpt_mplp_ver7.m:
	fix problems with xBeyond violating more than one bounds

	this should fix most of the problems caused by xBeyond violating
	more than one bound, such as in issue156.

	unit test added: mpt_mplp_ver7_test1.m
	[fd61ad5c8a19]

2005-09-28  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* extras/geometry/hull.m:
	[PATCH] initialize all variables in hull_cddmex
	[88c5a3071b7a]

	* @polytope/extreme.m:
	[PATCH] catch empty vertices in checkextreme()

	related to 0be43f8fb8af150cf3912220965a6b88aa2d6bd8
	[6c3ea374351e]

2005-09-26  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* extras/auxiliary/mpt_solveLPi.m, solvers/mpt_solveQP.m:
	[PATCH] tell CPLEXINT to not release license after each run

	CPLEXINT 2.3 introduce the OPTIONS.lic_rel option which allows to
	specify after how many runs a license should be released. Since
	allocation of network licenses is rather slow, we set the limit to
	1e3 for LPs and 1e2 for QPs
	[97cbe425f8d9]

2005-09-24  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* extras/geometry/hull.m:
	[PATCH] catch empty vertices after reducing convex hull

	Spotted by Johan Loefberg

	if any solver fails to compute Vconv vertices (i.e. those points
	which form the convex hull), we now detect it as a problem and try
	different method. before we have been pretending eveything is ok.
	[0be43f8fb8af]

2005-09-23  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* solvers/glpkmex/glpkmex.dll:
	recompile glpkmex.dll to keep it silent on Matlab R14SP3

	glpkmex.dll had to be recompiled on windows, because it started to
	produce verbosity outputs on R14SP3 even with verbose=0.

	this is sue to bug in GLPK 4.8, as described in issue158.

	fixes issue158
	[8d0e6ce80e3d]

2005-09-22  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* solvers/SeDuMi105/adendotd.mexglx,
	solvers/SeDuMi105/adenscale.mexglx,
	solvers/SeDuMi105/blkchol.mexglx, solvers/SeDuMi105/bwblkslv.mexglx,
	solvers/SeDuMi105/bwdpr1.mexglx, solvers/SeDuMi105/cholsplit.mexglx,
	solvers/SeDuMi105/choltmpsiz.mexglx, solvers/SeDuMi105/ddot.mexglx,
	solvers/SeDuMi105/dpr1fact.mexglx, solvers/SeDuMi105/eigK.mexglx,
	solvers/SeDuMi105/extractA.mexglx, solvers/SeDuMi105/eyeK.mexglx,
	solvers/SeDuMi105/factorK.mexglx, solvers/SeDuMi105/findblks.mexglx,
	solvers/SeDuMi105/finsymbden.mexglx,
	solvers/SeDuMi105/fwblkslv.mexglx, solvers/SeDuMi105/fwdpr1.mexglx,
	solvers/SeDuMi105/getada1.mexglx, solvers/SeDuMi105/getada2.mexglx,
	solvers/SeDuMi105/getada3.mexglx,
	solvers/SeDuMi105/givensrot.mexglx,
	solvers/SeDuMi105/incorder.mexglx,
	solvers/SeDuMi105/invcholfac.mexglx,
	solvers/SeDuMi105/iswnbr.mexglx, solvers/SeDuMi105/makereal.mexglx,
	solvers/SeDuMi105/ordmmdmex.mexglx,
	solvers/SeDuMi105/partitA.mexglx, solvers/SeDuMi105/psdeig.mexglx,
	solvers/SeDuMi105/psdfactor.mexglx,
	solvers/SeDuMi105/psdframeit.mexglx,
	solvers/SeDuMi105/psdinvjmul.mexglx,
	solvers/SeDuMi105/psdinvscale.mexglx,
	solvers/SeDuMi105/psdjmul.mexglx, solvers/SeDuMi105/psdscale.mexglx,
	solvers/SeDuMi105/qblkmul.mexglx, solvers/SeDuMi105/qframev.mexglx,
	solvers/SeDuMi105/qinvsqrt.mexglx, solvers/SeDuMi105/qrK.mexglx,
	solvers/SeDuMi105/qreshape.mexglx, solvers/SeDuMi105/qscaleK.mexglx,
	solvers/SeDuMi105/quadadd.mexglx, solvers/SeDuMi105/sortnnz.mexglx,
	solvers/SeDuMi105/sqrtinv.mexglx, solvers/SeDuMi105/statsK.mexglx,
	solvers/SeDuMi105/symbbwblk.mexglx,
	solvers/SeDuMi105/symbfwblk.mexglx,
	solvers/SeDuMi105/symfctmex.mexglx,
	solvers/SeDuMi105/triumtriu.mexglx,
	solvers/SeDuMi105/urotorder.mexglx, solvers/SeDuMi105/vecsym.mexglx,
	solvers/SeDuMi105/vectril.mexglx, solvers/SeDuMi105/whichcpx.mexglx:
	recompile SeDuMi on Linux according to issue157
	[8885f699c473]

2005-10-20  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* extras/geometry/mpt_voronoi.m:
	sort voronoi cells according to seed points

	if Options.sortcells is true (default), we sort cells of the voronoi
	partition such that P(i) corresponds to seed point "i".

	unit test added: extras/geometry/mpt_voronoi_test1.m
	[8c2c78063c1b]

2005-10-19  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* solvers/mpt_solveQP.m:
	properly impose equality constraints for NAG QP solver

	instead of defining equality constrains as Beq <= Aeq*x <= Beq, we
	use lower and upper bounds on variables, which is the proper way of
	doing that for e04naf().

	unit test added: solvers/mpt_solveQP_test1.m
	[e95314c45a4f]

2005-10-12  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* extras/control/mpt_oneStepCtrl.m:
	allow to choose a method to compute feasible sets

	if Options.useprojection=1 (default), we use projections to compute
	feasible sets. Otherwise we solve mpQPs/mpLPs to obtain such sets.

	unit test added: extras/control/mpt_oneStepCtrl_test1.m
	[3bb98cb9fa61]

	* extras/analysis/mpt_maxCtrlSet.m:
	allow to call mpt_maxCtrlSet with custom problem-dependent
	parameters

	Options.Tset, Options.R, Options.Q or Options.probStruct can now be
	specified by the user to override default values.

	Note that if Options.probStruct is given, other problem-related
	parameters (.Tset, .R, .Q) are discarded.

	unit test added: extras/analysis/mpt_maxCtrlSet_test3.m
	[f7d32f56741b]

	* @polytope/extreme.m, extras/geometry/hull.m:
	allow rounding to increase numerical robustness for CDD

	This patch introduces Options.roundat which defines to how many
	decimal points should a (V/H) representation of a polytope be
	rounded to avoid numerical problems with CDD.

	It was noticed that if input to CDD contains too many decimal
	points, it can lead to numerical inconsistencies. Rounding inputs
	to, say, 14 decimal points often helps CDD to get the correct
	solution.

	Default setting for polytope/extreme() is Options.roundat=15.
	Default setting for extras/geometry/hull() is Options.roundat=14. No
	rounding will be done if Options.roundat is Inf.

	unit test added: polytope/extreme_test3.m unit test modified:
	polytope/hull_test1.m unit test modified:
	extras/geometry/hull_test2.m
	[f858644173da]

2005-10-11  Frank J. Christophersen  <fjc@control.ee.ethz.ch>

	* extras/graphics/mpt_plotPWA.m, extras/graphics/mpt_plotPWQ.m:
	[NEW] add Options.edgewidth

	Options.edgewidth allows to specify width of edges.

	unit test updated: mpt_plotPWA_test1.m unit test updated:
	mpt_plotPWQ_test1.m
	[6e28982ce208]

2005-10-10  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* extras/auxiliary/mpt_performance.m:
	properly handle Options.pfinal even if controller is an object

	the assignment "ctrlStruct.Pfinal = Options.Pfinal" was not a valid
	one if ctrlStruct is an MPTCTRL object.

	unit test added: mpt_performance_test1.m
	[7857da5d13b9]

	* @polytope/hull.m:
	polytope/hull: recompute convex hull if something goes wrong

	if input polytopes is bounded and the computed convex hull is not,
	we solve the problem with different method, to avoid numerical
	problems.

	unit test added: hull_test1.m
	[872276717b0c]

2005-10-08  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* @polytope/reduce.m:
	throw an error if no constraints are left after reduction

	if there are no constraints left after removing redundant ones, the
	polytope is R^n and we should throw an error.

	unit test added: reduce_test1.m
	[9be079edfd3d]

	* extras/auxiliary/sub_computeTrajectory.m:
	fixed computation of closed-loop cost for systems w/ deltaU
	constraints

	if we have deltaU constraints then we need to crop Q weight to
	proper dimension because it gets extended by an additional state in
	mpt_prepareDU. this patch also simplifies procedure to obtain
	dimensions of state/inputs/outputs.

	unit test added: sub_computeTrajectory_test3.m unit test added:
	sub_computeTrajectory_test4.m
	[c26604d12fb2]

2005-10-05  Frank J. Christophersen  <fjc@control.ee.ethz.ch>

	* @mptctrl/modify.m:
	make mptctrl/modify() return indices of regions wrt original
	controller

	[newctrl, ind] = modify(ctrl, 'action', ...) now returns vector of
	indices, which denote regions of the original controller which are
	also present in the resulting modified controller.

	unit test added: modify_test3.m
	[2849163734bc]

	* @mptctrl/modify.m:
	[NEW] allow mptctrl/modify() to remove flat regions

	flat regions can be removed by modify(ctrl, 'removeflat') or
	modify(ctrl, 'removeflat', Options)

	unit test added: modify_test2.m
	[bafd0fcda3c3]

2005-10-05  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* @mptctrl/modify.m:
	allow to call mptctrl/modify() with additional Options + code
	cleanup
	[7571add1e721]

2005-10-03  Miroslav Baric  <baric@control.ee.ethz.ch>

	* extras/control/mpt_optControlPWA.m:
	make mpt_optControlPWA() work for 1D systems

	isOffset was wrongly computed for 1D systems, which lead to crashes,
	because the vector didn't have proper dimensions.

	unit test added: mpt_optControlPWA_test1.m
	[1fe40897a937]

2005-10-03  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* extras/graphics/mpt_plotU.m:
	make mpt_plotU work with 1D systems with multiple inputs

	mpt_plotU(ctrl) will now divide the plot into as many subplots as
	there are number of inputs.

	mpt_plotU(ctrl, u_index) will plot just the input given by
	"u_index".

	unit test added: mpt_plotU_test1.m
	[98002ced7324]

2005-10-02  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* extras/control/mpt_iterativePWA.m:
	allow to specify which Lyapunov function to compute in
	mpt_iterativePWA

	Options.lyapunov_type specifies which type of Lyapunov function
	should be compute in order to testify stability of one-step
	controllers.

	Allowed settings: 'any' - use PWQ, if it fails, switch to PWA
	'pwq' - compute PWQ Lyapunov function only 'pwa' - compute PWA
	Lyapunov function only 'none' - do not compute any Lyapunov
	function

	this options replaces Options.nolyapunov and Options.bothLyapFct

	unit test added: mpt_iterativePWA_test1.m
	[02f93efda25d]

2005-09-30  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* @polytope/union.m:
	call isconvex() from union() with user-specified options
	[ce7c5329b83e]

	* @polytope/distance.m:
	fix typos in help description of polytope/distance()
	[2c4defc0fed8]

	* extras/control/mpt_iterativePWA.m:
	allow to opt-out from computing lyapunov functions

	if Options.nolyapunov=1 then no lyapunov function will be computed
	to testify stability of one-step controllers. default is 0.
	[4da001ad75b0]

2005-09-29  Frank J. Christophersen  <fjc@control.ee.ethz.ch>

	* @polytope/plot.m:
	allow colormap to be specified for polytope plots

	plot(P, struct('colormap', 'summer')) is now a valid option.

	unit test added: plot_test1.m
	[4b8d6d70a482]

2005-09-29  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* extras/graphics/mpt_plotPWQ.m:
	allow to call mpt_plotPWQ with Options as 5th input argument

	if anybody wants to give additional optinas to mpt_plotPWQ, he had
	to provide "meshgridpoints" first, i.e.:

	mpt_plotPWA(Pn, A, B, C, meshgridpoints, Options)

	now it is possible to pass Options as 5th argument, in which case
	"meshgridpoints" will be defaulted to 30, i.e.

	mpt_plotPWQ(Pn, A, B, C, Options)

	unit test added: mpt_plotPWQ_test2
	[27f1c9a4569f]

2005-09-29  Frank J. Christophersen  <fjc@control.ee.ethz.ch>

	* extras/graphics/mpt_plotPWA.m, extras/graphics/mpt_plotPWQ.m:
	allow Options.edgecolor to be specified for PWA/PWQ plots
	[bc1236ba3f22]

2005-09-28  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* mpt_getInput.m:
	[NEW] allow to use a "recovery" mode for mpt_getInput()

	If Options.recovery is set to 1 and: A) current state belongs to the
	feasible set, but B) there is no region associate to x0 then we use
	the control law of nearest neighbour.

	Options.recovery is 0 by default.
	[538b97ef6abe]

	* extras/graphics/mpt_plotPWA.m, extras/graphics/mpt_plotPWQ.m:
	[NEW] allow to specify level of transparency in PWA/PWQ plots

	level of transparency can now be specified in Options.shade
	[e021892298da]

	* extras/auxiliary/unitbox.m:
	[NEW] allow to call unitbox() with just one input argument

	unitbox(d) now produces the same result as unitbox(d,1)
	[028f049b527b]

2005-09-26  Frank J. Christophersen  <fjc@control.ee.ethz.ch>

	* @polytope/plot.m:
	allow gradient coloring in polytope/plot

	if Options.gradcolor is true, we use the third coordinate of a 3d
	polytope as a gradient color. default is false.
	[f911b5bd5b90]

2005-09-26  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* extras/auxiliary/mpt_mplp_ver7.m:
	make mpt_mplp_ver7 use facetcircle()

	before we used a hard-coded function which was essentially identical
	to facetcircle(), but was lacking additional numerical checks. now
	we just call facetcircle directly.

	resolves issue159
	[b1194e41edd9]

	* @polytope/facetcircle.m:
	facetcircle() now allows to pass a vector of facets to explore

	facetcircle(P, [1 2 3]) is now acctepted and returns matrix of
	centers and a vector of radii.

	resolves issue159
	[2adf21359670]

2005-09-24  Frank J. Christophersen  <fjc@control.ee.ethz.ch>

	* extras/auxiliary/identifyRegion.m:
	typo fix and more detailed error message
	[b84c810fe456]

	* extras/auxiliary/identifyRegion.m:
	simplify identification of a range of regions

	following syntax is now allowed: identifyRegion(Pn, 10:20)

	and the function will automatically pick regions 10 to 20 from Pn.
	before, the user had to do it, e.g. identifyRegion(Pn(10:20),
	10:20)

	also checks of proper indexes is now more robust.
	[c584798cbcdb]

2005-09-24  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* extras/auxiliary/identifyRegion.m:
	allow to pass indices of regions to identify

	identifyRegions(Pn(10:20), 10:20)

	will now identify only regions 10 to 20.
	[861f0f2861e6]

2005-09-22  Frank J. Christophersen  <fjc@control.ee.ethz.ch>

	* @polytope/facetvoronoi.m:
	allow to pass indices of facets to facetvoronoi()

	we now allow the user to specify indices of facets for which the
	"facet voronoi" diagram should be constructed. by default we do it
	for all facets.
	[d0831a6a47eb]

2005-09-22  kvasnica  <kvasnica@autlux09.ee.ethz.ch>

	* extras/simulink/mex_getInput.mexglx, solvers/cddmex/cddmex.mexglx,
	solvers/esp/esp_setdiff_c.mexglx, solvers/glpkmex/glpkmex.mexglx:
	recompile mex files according to issue157
	[73f47053fa2b]

2005-09-20  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* mpt_getInput.m:
	[PATCH] don't check regions twice

	before we used to call isinside() on the whole controller partition
	twice: first time with Options.fastbreak=1 to find out if the
	current state belongs at least to the feasible set, and the second
	time we called it with Options.fastbreak=0 to identify the proper
	feedback law.

	this redundancy was causing quite dramatic overhead in on-line
	implementation of control laws.

	now we called isinside() just once, with Options.fastbreak=0. this
	brings a speedup of at least 50% even with simplest partitions.
	[15bcfdf406d9]

2005-09-21  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* mpt_init.m:
	[PATCH] allow the user to exclude some solvers from being checked

	numerical codes of solvers which should be excluded from being
	checked can now be provided in 'dontcheck.lp', 'dontcheck.qp',
	'dontcheck.milp' and 'dontcheck.miqp'.

	but it would be better if the user could just specify, say
	dontcheck = {'cplex', 'xpress'} and then we will automatically
	exclude all interfaces for those solvers.
	[7294ff6459b6]

	* @mptctrl/get.m, @mptctrl/set.m:
	add get()/set() methods for MPTCTRL objects

	get() allows to access fields of MPTCTRL objects directly, e.g. Pn
	= get(ctrl, 'Pn') note, however, that this is rather obsolete, since
	we allow to access fields of controller objects directly using the
	'dot' operator, e.g.: Pn = ctrl.Pn

	set() allows to set fields of MPTCTRL directly, without the need to
	convert the object to a structure and then back to an object, i.e.
	ctrl = set(ctrl, 'Property', 'PropertyValue') e.g. ctrl =
	set(ctrl, 'Pfinal', ctrl.Pn) will set 'ctrl.Pfinal' to 'ctrl.Pn'.
	[9ee694f0d63a]

2005-09-21  Frank J. Christophersen  <fjc@control.ee.ethz.ch>

	* extras/analysis/mpt_buildAdjacency.m:
	updated help description
	[b84f6daed880]

2005-09-21  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* extras/geometry/mpt_voronoi.m:
	allow to pass a "bounding polytope" when computing voronoi cells

	Users can now specify a bounding polytope in Options.pbound. If
	given, the polytope is uses to limit the exploration space. If not
	given, we fall back to the old approach where we use a hypercube
	with size = 1.5*max(seeds).
	[37e5db03875a]

2005-09-20  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* @mptctrl/modify.m:
	[NEW] mptctrl/modify - modifies a given MPTCTRL object

	following operations are supported at this moment: 'remove' -
	removes given region from the controller 'pick' - returns only
	selected regions

	in the future we should extend it to support following actions:
	'add' - add region(s) at the end 'addbefore' - add region(s)
	at position in front of a given region 'addafter' - add region(s)
	at position after a given region
	[6c39cd555841]

2005-09-19  Miroslav Baric  <baric@control.ee.ethz.ch>

	* extras/analysis/mpt_buildAdjacency.m:
	[NEW] mpt_buildAdjacency detects which regions are adjacent

	Signed-off-by: Miroslav Baric Signed-off-by: Michal Kvasnica

	for a given polytope array Pi, detects which regions are adjacent,
	i.e. which of them share at least one common facet. The polytope
	array must not contain any overlaps!
	[0d1b3a0e92cb]

2005-09-18  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* @polytope/facetcircle.m:
	[PATCH] use mpt_solveLPs instead of mpt_solveLP

	Signed-off-by: Michal Kvasnica

	two reasons for the change: 1. numerical robustness -- mpt_solveLPs
	tries to use different solver if the current one fails to find a
	feasible solution, 2. speed -- mpt_solveLP() introduces some
	overhead because of additional sanity checks (e.g. sparsity checks,
	etc.), which we don't need here.
	[5a9982ad89a1]

2005-09-18  Miroslav Baric  <baric@control.ee.ethz.ch>

	* @polytope/facetcircle.m:
	[PATCH] properly normalize vectors of normals

	Signed-off-by: Miroslav Baric Signed-off-by: Michal Kvasnica

	due to not normalizing vectors of normals, we have not been
	returning the center and radius of the _largest_ ball inside of a
	given facet:

	P=polytope([1 0; -1e-4 1+1e-4; 0 -1], [10; 0; 0]); [x,r] =
	facetcircle(P, 2)

	x = 9.9990 0.0010

	r = 9.9980e-004

	where the correct results should be:

	x = 5.0000 0.0005

	r = 5.0000
	[b74a86be25ca]

2005-09-18  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* @polytope/Contents.m, Contents.m, history.txt, mpt_init.m,
	readme.txt:
	bump version number to 2.0.5
	[d5c281864c35]

2005-09-16  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* .hgtags:
	MPT 2.0.4
	[ae21a4f37260]

	* @polytope/Contents.m, Contents.m, history.txt, readme.txt:
	update documentation to MPT 2.0.4
	[32a7139933d2] [MPT_2_0_4]

2005-09-15  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* @polytope/extreme.m:
	assign updated polytope in caller's workspace only if nargout=0
	[28d36340ff9f]

	* @polytope/extreme.m:
	[PATCH] remove bogus checking of number of vertices

	Signed-off-by: Michal Kvasnica

	fixes problems which occur on cyclic polytopes which have more
	extreme points than number of facets.
	[7139809be5b0]

2005-09-12  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* extras/graphics/mpt_plotTimeTrajectory.m:
	remove ghost legend labels when sysStruct.OutputName is given
	[4602d07a6dfd]

2005-09-10  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* extras/control/mpt_iterativePWA.m:
	set probStruct.P_N to stage cost if probStruct.Tset is provided

	otherwise it is _very_ likely that one will get an error wrom dlqr()
	complaining about non-minimal modes.
	[4a04ef0bfda3]

	* extras/control/mpt_iterativePWA.m, history.txt:
	allow user-defined target sets even if no dynamics contains the
	origin
	[ae79ed5c229f]

	* mpt_init.m:
	bumped version number to 2.0.4
	[188f722c758b]

2005-09-15  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* @polytope/merge.m:
	add note about overlaps when optimal merging is required

	mpt_optMerge by default does overlapping merge. if this is not
	desired, one must to specify Options.algo accordingly.
	[86be6dd5674f]

	* extras/control/optmerge/mpt_merge5.m,
	extras/control/optmerge/mpt_optMerge.m,
	extras/control/optmerge/mpt_optMergeDivCon.m:
	add missing file for optimal non-overlapping merging
	[0656954fa390]

2005-09-14  Mario Vasak  <mario.vasak@fer.hr>

	* @polytope/minus.m, @polytope/plus.m:
	change behavior when second input is a polytope array

	polytope arrays as second input should be treated as unions of
	polytopes, not as a sequence of individual polytopes.
	[76697e5360fe]

2005-09-13  Mario Vasak  <mario.vasak@fer.hr>

	* @polytope/minus.m:
	allow to simplify minkowski difference representation by merging

	if Options.merge is true (default) and the resulting minkowski
	difference consists of more than 1 region, we now call merge() to
	get a simpler representation. merging method can be specified by
	Options.merge_method, 'greedy' is default.
	[91c7a4702af5]

2005-09-13  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* @polytope/dointersect.m, extras/auxiliary/identifyRegion.m:
	help update

	Signed-off-by: Frank J. Christophersen
	[4185f3fb1fd8]

	* mpt_init.m:
	add more robust check if all paths are set correctly

	now we interrupt with an error if one of the needed paths is not
	set. missing paths to examples are announced with a warning.

	helps to prevent problems as in issue150
	[ab634aabb9a8]

2005-09-12  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* @polytope/dointersect.m:
	properly set intersection flag in dointersect
	[8ec20784a4fb]

	* @polytope/dointersect.m:
	return information about which polytopes do intersect
	[10e70c25eb54]

2005-09-08  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* .hgtags:
	MPT 2.0.3 final
	[fd6b82473e7a]

2005-09-07  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* @polytope/reduce.m:
	[PATCH] solve LPs in "safe" mode to avoid problems

	Signed-off-by: Michal Kvasnica

	needed to fix issue142 and issue149 for certain solvers.
	[95f6f67d574c] [MPT_2_0_3]

	* @polytope/reduce.m:
	[PATCH] increase tolerance when checking bounding boxes

	Signed-off-by: Michal Kvasnica

	temporarily fixes issue142 and issue149
	[bf5ecf0a59b4]

2005-09-05  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* extras/gui/mpt_guiProbStruct.m,
	extras/gui/mpt_guiProbStruct_export.m:
	[PATCH] fixed checking of C matrix

	Signed-off-by: Michal Kvasnica

	fixes issue128.
	[6043d35bae0c]

2005-09-01  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* mpt_control.m:
	[PATCH] report infeasible solution if Fi is an empty cell

	Signed-off-by: Michal Kvasnica
	[6f7fdb2aa545]

	* @mptctrl/mptctrl.m, mpt_control.m:
	[PATCH] augment state-space via mpr_prepareDU() if Rdu is given

	Signed-off-by: Michal Kvasnica

	we should still augment the state vector if user specifies
	probStruct.Rdu but no dumax/dumin constraints
	[9d29ebb98bc2]

	* extras/auxiliary/mpt_prepareDU.m:
	[PATCH] use probStruct.Rdu if defined

	Signed-off-by: Michal Kvasnica
	[4cad6755de30]

2005-09-06  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* extras/auxiliary/mpt_solveLPi.m:
	return correct lagrangian multipliers for certain solvers

	dual variables and not lagrangian multipliers have been returned if
	GLPK, QSOpt, or CLP have been used
	[2f80d0fe1d21]

2005-09-02  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* @polytope/reduce.m:
	make removal of redundant constraints more numerically robust

	the LP we solve to detect if a hyperplane is redundant cannot be
	infeasible, even though it sometimes happens (CDD Criss-Cross on
	issue142). Therefore in such case we solve the LP again with a
	sifferent solver until we get a feasible solution.

	Partially fixes issue142
	[33b92868c02a]

	* extras/geometry/hull.m:
	use unreduced H-representation when checking hull correctness

	this extends changeset fd0988cdbbff020bc33d11b5af31d33e8c067885

	Signed-off-by: Mario Vasak Signed-off-by: Michal Kvasnica
	[3dcb742778f8]

2005-09-01  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* extras/auxiliary/mpt_mplp_ver5.m, extras/auxiliary/mpt_mplp_ver6.m,
	extras/auxiliary/mpt_mplp_ver7.m:
	updated copyright info

	Signed-off-by: Michal Kvasnica
	[61c22be038e5]

	* extras/auxiliary/mpt_sysStructInfo.m:
	[PATCH] updated help description, return more information

	Signed-off-by: Michal Kvasnica

	the "intInfo" output now includes definition of each dynamics in the
	X-space as a cell array of polytopes.
	[873b4efde85a]

	* @polytope/projection.m:
	[PATCH] exit quickly if input polytope is not fully dimensional

	Signed-off-by: Michal Kvasnica
	[45255b7315dd]

	* extras/auxiliary/mpt_sysStructInfo.m:
	[PATCH] avoid unnecessary computation of setdiff() of vectors

	Signed-off-by: Michal Kvasnica
	[675afcb52f0f]

2005-08-31  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* extras/geometry/mpt_voronoi.m:
	[PATCH] make mpt_mplp() silent by default in mpt_voronoi()

	Signed-off-by: Michal Kvasnica
	[a212f31b55f4]

	* @polytope/extreme.m:
	[PATCH] check if enough extreme points have been computed

	Signed-off-by: Michal Kvasnica

	we now check if we have at least as many extreme points as is the
	number of facets of an input polytope (in reduced H-representation)
	[de0c85de8ca9]

	* @polytope/extreme.m:
	[PATCH] use different method for 3D polytopes with more than 100
	facets

	Signed-off-by: Michal Kvasnica

	this only applies to the analytical method - if a polytope in 3D has
	more than 100 facets, we now use a hull-based method to obtain
	extreme points, because otherwise we would have just too many
	combinations of facets to explore. the new approach is significantly
	faster.
	[65b690448ab6]

	* history.txt:
	removed executable flag from history.txt

	Signed-off-by: Michal Kvasnica
	[be265364886f]

2005-08-26  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* @polytope/plot.m:
	[PATCH] use analytical computation of vertices if CDD fails

	Signed-off-by: Michal Kvasnica

	Note! requires cddmex compiled with latest cddlib 0.94b, earlier
	versions segfaulted, making it impossible to use try-catch in
	matlab.
	[b33d5458b863]

	* solvers/cddmex/cddmex.dll:
	[PATCH] set executable flag for cddmex.dll

	Signed-off-by: Michal Kvasnica
	[a0043bed5fab]

2005-08-26  kvasnica  <kvasnica@autlux09.ee.ethz.ch>

	* solvers/cddmex/cddmex.dll, solvers/cddmex/cddmex.mexglx,
	solvers/cddmex/cddmex.mexsol:
	[NEW] CDDMEX compiled with latest CDDLIB 0.94b

	Signed-off-by: Michal Kvasnica
	[b1813308ab7c]

2005-08-30  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* .hgtags:
	MPT 2.0.3 Release Candidate 1
	[88b321d8c7dd]

	* mpt_init.m:
	bump version number to 2.0.3
	[6bd4d81f728d] [MPT-2_0_3-RC1]

	* @polytope/Contents.m, Contents.m, history.txt:
	changes for MPT 2.0.3

	Signed-off-by: Michal Kvasnica
	[58e5d2e5e9a5]

	* solvers/mpt_solveLP.m:
	[PATCH] only check constraints satisfaction if A is not empty

	Signed-off-by: Michal Kvasnica

	we should not check if A*xopt<=B is satisfied if A is an empty
	matrix.
	[832844e65927]

	* extras/auxiliary/mpt_sysStructInfo.m:
	[PATCH] properly decide which dynamics intersect in X-space

	Signed-off-by: Mario Vasak Signed-off-by: Michal Kvasnica

	when computing which dynamics intersect in X-space one should use
	the pre-computed projection polytopes instead of setting guardsU to
	zero.

	fixes issue146
	[e929adc5c4bd]

	* @polytope/regiondiff.m:
	[PATCH] exit quickly if one of input polytopes is not fully
	dimensional

	Signed-off-by: Michal Kvasnica

	fixes issue145
	[b244e4703f33]

	* extras/auxiliary/mpt_prepareTracking.m:
	[PATCH] use more descriptive error message

	Signed-off-by: Michal Kvasnica
	[598927b61014]

2005-08-27  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* mpt_simplify.m:
	[PATCH] use envelope() instead of hull() for dimensions above 3

	Signed-off-by: Michal Kvasnica

	for optimal merging, we need to compute a complement of Pfinal to
	some convex domain. when computing this domain in dimensions above
	3, it is faster to use envelope instead of hull.
	[bc3f87beb54e]

	* @polytope/envelope.m:
	[PATCH] if envelope is R^n, use the dimension of input polytope

	Signed-off-by: Michal Kvasnica

	before, R^n was returned as a polytope in R^1 with x <= Inf. this,
	however, caused problems when performing operations which check
	dimensions, as for instance the and (&) operator:

	take for instance polyarray "P" in R^2, whose envelope is R^n. then
	without this patch dimension(envelope(P)) would return 1. with this
	patch applied, it returns 2 (or whatever the dimension of P is).
	[f0e6b1dd6509]

	* @polytope/isconvex.m:
	[PATCH] handle cases where bounding_box() returns NaN answer

	Signed-off-by: Michal Kvasnica

	if E=envelope(P) returns R^n, bounding_box(E) returns NaNs. we
	should escape quickly, because this means that P is non-convex.
	[11a22ee285ec]

	* @polytope/union.m:
	[PATCH] updated help description

	Signed-off-by: Michal Kvasnica

	mention that we use isconvex by default if length(Pn)>2
	[14435437284e]

	* extras/auxiliary/mpt_verifyProbStruct.m:
	[PATCH] check if Rdu is positive definite for 2-norm problems

	Signed-off-by: Michal Kvasnica
	[ce44a1700675]

2005-08-26  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* @polytope/isbounded.m:
	[PATCH] use better approach (LP without equality constraints)

	Signed-off-by: Miroslav Baric Signed-off-by: Michal Kvasnica

	use null space to get rid of equality constraints in feasibility LP.
	fixes issue142.
	[5d8fec61a19a]

	* solvers/mpt_solveLP.m:
	[PATCH] add "lb" and "ub" to usage line

	Signed-off-by: Michal Kvasnica
	[c04360799efb]

	* solvers/mpt_solveLP.m:
	[NEW] allow lower and upper bounds on variables to be specified

	Signed-off-by: Michal Kvasnica

	lb <= x <= ub bounds can now be specified as optional arguments.
	[34d2ef259191]

	* extras/auxiliary/mpt_solveLPi.m:
	[PATCH] use e04naf()'s syntax for equality constraints

	Signed-off-by: Michal Kvasnica
	[89e09f55aa64]

2005-08-25  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* extras/auxiliary/mpt_solveLPs.m:
	[PATCH] really use next available LP solver when in "rescue" mode

	Signed-off-by: Michal Kvasnica

	a typo caused an LP to be solved always with the default solver.
	[6966bf093282]

	* @polytope/chebyball.m, @polytope/private/chebyball_f.m,
	extras/analysis/mpt_removeOverlaps.m,
	extras/analysis/mpt_searchTree.m, extras/auxiliary/mpt_mplp_ver6.m,
	extras/auxiliary/mpt_mplp_ver7.m,
	extras/control/optmerge/polyinnerball.m, solvers/mpt_solveLP.m:
	[PATCH] use mpt_solveLPs when solving LP in the "rescue" mode

	Signed-off-by: Michal Kvasnica
	[4691422eca5a]

	* extras/auxiliary/mpt_solveLPs.m:
	[NEW] solves an LP in the "rescue" mode

	Signed-off-by: Michal Kvasnica

	a "rescue" mode means that an LP is solved with different solver if
	the default solver fails.

	NOTE! make sure to read the help file before using this function!
	[9e1aebc912d2]

	* extras/auxiliary/mpt_solveLPi.m:
	[PATCH] unify exitflag output for all solvers, remove "rescue" mode

	Signed-off-by: Michal Kvasnica

	this patch consists of 2 parts:

	1. unify value of "exitflag" output for all solvers: 1 -
	feasible optimal solution found 0 - unbounded or undecided
	problem
	    -1 - infeasible problem

	2. remove the "rescue" mode, in which an LP was solved with
	different solver if the default solver failed. this functionality
	is now performed by mpt_solveLPs()
	[4ab458808767]

	* extras/analysis/mpt_reachSets.m:
	[PATCH] do not use the "rescue" mode when solving LPs

	Signed-off-by: Michal Kvasnica
	[bd03448da38b]

2005-08-26  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* extras/geometry/hull.m:
	[PATCH] use unreduced H and K pair for checking correctness of hull

	Signed-off-by: Mario Vasak Signed-off-by: Michal Kvasnica

	the command P=polytope(H,K,0,2) just could return an empty polytope
	if cheby radius of P falls below the abs_tol, and that is correct.
	But taking H & K then from P brings empty H and K in the
	superimposed function, and this ends in a hull-error (result=1), but
	nothing is really wrong: H and K are hopefully correctly computed,
	but the resulting hull is too small, so H and K should be checked
	in checkhull.m, while hull.m should return an empty polytope if the
	check is all right.
	[fd0988cdbbff]

2005-08-25  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* @polytope/facetcircle.m:
	[PATCH] add more descriptive error messages

	Signed-off-by: Michal Kvasnica
	[ddb8ff39d316]

2005-08-24  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* @polytope/facetcircle.m:
	[PATCH] solve LP with different solver if the current one fails

	Signed-off-by: Michal Kvasnica

	it was noticed that some LP solvers have difficulties when solving
	the facet-LP. if we see problems with the default solver, we try to
	solve the LP again with all available LP solvers until we find a
	feasible solution. information about which solvers are being tried
	is displayed if Options.verbose = 2

	partially fixes issue138.
	[2b0e82d7649e]

	* solvers/mpt_solveLP.m:
	[PATCH] double-check if optimizer satisfies inequality constraints

	Signed-off-by: Michal Kvasnica

	sometimes an LP solver reports a feasible solution, but the
	optimizer does not fullfill constraints. therefore we double-check
	this.
	[64bf13a043fc]

	* examples/demos/mpt_demo3.m:
	[PATCH] fix typo

	Signed-off-by: Helfried Peyrl Signed-off-by: Michal Kvasnica
	[c1c57ca42571]

	* extras/simulink/mpt_simSys_sfunc.m:
	[PATCH] calculate correct output for PWA/MLD systems

	Signed-off-by: Michal Kvasnica

	Spotted by Peter Ortner, this commit fixes issue138:

	The output y is always calculated in the function "mdlOutputs" and
	if there is no direct feedtrough (D-Matrix of the LTI system is
	zero) then the u-vector is set to zero! and the problem is now, that
	you first have to choose the valid PWA region before setting u to
	zero because the selection of the valid region not only depends on
	the actual state (guardX) it also depends on the actual input
	(guardU). When setting the input to zero you get a wrong region.
	[29ed92d8157e]

	* @polytope/Contents.m, @polytope/facetvoronoi.m:
	[NEW] function to compute "voronoi diagram for facets of polytopes"

	Signed-off-by: Frank J. Christophersen Signed-off-by: Michal
	Kvasnica
	[374b648b1026]

2005-08-23  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* @polytope/plus.m:
	[PATCH] properly deal with sums involving matrices

	Signed-off-by: Michal Kvasnica

	fixed a case where a matrix was added to a polytope, where the
	matrix argument was first, e.g. eye(2) + Pn
	[06171fa1d1cf]

	* @polytope/plus.m:
	[PATCH] handle polyarrays when adding a vector

	Signed-off-by: Michal Kvasnica
	[33794ef8f501]

2005-08-22  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* @polytope/plot.m:
	[PATCH] fix typo in help description

	Signed-off-by: Michal Kvasnica
	[4890f9a49d67]

	* extras/control/hys2pwa/hys2pwa.m,
	extras/control/hys2pwa/mpt_hyparr.m:
	[PATCH] use different function for hyperplane arrangement

	Signed-off-by: Tobias Geyer Signed-off-by: Michal Kvasnica
	[72022528e477]

2005-08-17  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* extras/control/mpt_boolMinTime.m:
	[PATCH] deal with empty regions without breaking

	Signed-off-by: Michal Kvasnica
	[635af27e8044]

	* @polytope/projection.m:
	[PATCH] add Options.projection=6, re-order prefered solvers

	Signed-off-by: Michal Kvasnica

	Options.projection=6 uses mex fourier-motzkin elimination without
	going one dimension down at every step. it is much faster than
	Options.projection=5, but can be very unreliable.
	[a21f10ab0128]

	* mpt_control.m:
	[PATCH] create correct ctrlStruct for cases with xref/uref

	Signed-off-by: Michal Kvasnica
	[003d7d68ca04]

2005-08-16  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* extras/auxiliary/mpt_verifySysStruct.m:
	[PATCH] check if min/max constraints have the same length

	Signed-off-by: Michal Kvasnica

	applies to xmax/xmin, umax/umin, ymax/ymin, dumax/dumin, dymax/dymin
	[6f5828ae1ab0]

	* extras/auxiliary/mpt_verifySysProb.m:
	[PATCH] reject deltaU formulation for systems with uncertainties

	Signed-off-by: Michal Kvasnica

	related is commit e5fe3d942fa149c08c95280a127bba29a6a0cc04
	[e3ef2ea18f5d]

	* extras/auxiliary/mpt_prepareDU.m:
	[PATCH] augment Tset also for LTI systems

	Signed-off-by: Michal Kvasnica
	[243ebc1ee2df]

	* extras/control/mpt_solveMPC.m:
	[PATCH] do not reshape already reshaped U (happens for boolean
	inputs)

	Signed-off-by: Michal Kvasnica
	[f38774d36048]

2005-08-15  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* mpt_control.m:
	[PATCH] save FBgain to probStruct if xref/uref is used

	Signed-off-by: Michal Kvasnica
	[b7000d8ddd1f]

	* extras/control/mpt_oneStepCtrl.m:
	[PATCH] exit if problem is infeasible

	Signed-off-by: Michal Kvasnica
	[74c314a287d6]

	* extras/auxiliary/mpt_verifyProbStruct.m:
	[PATCH] reject output weights for minimum-time solutions

	Signed-off-by: Michal Kvasnica
	[4c827afcda2b]

	* extras/analysis/mpt_getPWQLyapFct.m:
	[PATCH] 2nd fix on handling controllers with just one region

	Signed-off-by: Michal Kvasnica
	[9a7f8407c511]

	* extras/control/mpt_iterative.m:
	[PATCH] exit if no fully dimensional invariant set is found

	Signed-off-by: Michal Kvasnica
	[c04f74126778]

	* extras/auxiliary/mpt_verifyProbStruct.m,
	extras/auxiliary/mpt_verifySysProb.m:
	[PATCH] reject feedback pre-stabilization for tracking and/or
	boolean inputs

	Signed-off-by: Michal Kvasnica
	[d79e37ca40ae]

	* extras/control/mpt_oneStepCtrl.m:
	[PATCH] fix undefined output argument

	Signed-off-by: Michal Kvasnica
	[1efd31f4554b]

	* extras/analysis/mpt_getPWQLyapFct.m:
	[PATCH] fixed handling of controllers defined over one region

	Signed-off-by: Michal Kvasnica
	[3bf456fcf681]

	* extras/auxiliary/mpt_verifyProbStruct.m:
	[PATCH] reject tracking for infinite-time solutions

	Signed-off-by: Michal Kvasnica
	[2daace9163f3]

2005-08-14  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* extras/auxiliary/mpt_verifySysProb.m:
	[PATCH] reject uncertainties for infinite time solutions

	Signed-off-by: Michal Kvasnica
	[f978cc75b099]

	* extras/control/mpt_optBoolCtrl.m, extras/control/mpt_optMixedCtrl.m:
	[PATCH] use more descriptive error messages

	Signed-off-by: Michal Kvasnica
	[144c24f62dbe]

	* mpt_control.m:
	fix typo

	Signed-off-by: Michal Kvasnica
	[d368f91d215d]

	* extras/auxiliary/mpt_verifySysProb.m:
	[PATCH] reject systems with uncertainties for tracking

	Signed-off-by: Michal Kvasnica

	TODO: we can lift this limitation once we support flat noise
	polytopes. the problem here is that noise polytope has to be
	augmented, because the state vector included new states (past input
	and/or reference).

	parametric uncertainties are easy to handle, but we postpone it and
	deal with them when we also handle additive uncertainties.
	[e5fe3d942fa1]

	* extras/auxiliary/mpt_mplp_ver7.m:
	[PATCH] correctly set cr.type if polytope is not fully dimensional

	Signed-off-by: Michal Kvasnica
	[77a28969ce57]

	* extras/analysis/mpt_getPWALyapFct.m,
	extras/analysis/mpt_getPWPLyapFct.m,
	extras/analysis/mpt_getPWQLyapFct.m,
	extras/analysis/mpt_infsetPWA.m:
	[PATCH] less verbosity output for verbose=1

	Signed-off-by: Michal Kvasnica
	[d62f59af3cf0]

	* mpt_control.m:
	[PATCH] make substitution of uref more general

	Signed-off-by: Michal Kvasnica
	[e0604356ecb3]

2005-08-13  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* @polytope/slice.m:
	[PATCH] exit quickly if input polytope is not fully dimensional

	Signed-off-by: Michal Kvasnica
	[f9863abef86f]

	* extras/auxiliary/mpt_pwa2hys.m:
	rename mpt_ss2mld to mpt_pwa2hys

	Signed-off-by: Michal Kvasnica
	[e5eebf186b46]

	* mpt_sys.m:
	[PATCH] use mpt_pwa2mld() when converting from PWA to MLD

	Signed-off-by: Michal Kvasnica
	[305f43bc3a5f]

2005-08-11  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* @mptctrl/mptctrl.m:
	[PATCH] include state/output constraints when constructing matrices

	Signed-off-by: Michal Kvasnica
	[5b3d56baaa03]

	* examples/models/lti2Dstable.m, examples/models/lti2Dunstable.m:
	[NEW] 2 new LTI examples

	Signed-off-by: Michal Kvasnica
	[1b1a5657e39e]

2005-08-10  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* @polytope/isconvex.m:
	[PATCH] always call bounding_box() with proper options

	Signed-off-by: Michal Kvasnica
	[0182e3a98427]

	* extras/auxiliary/mpt_performance.m:
	[PATCH] return states which lead to infeasible trajectories

	Signed-off-by: Michal Kvasnica
	[9b9fe69c3290]

	* extras/auxiliary/sub_computeTrajectory.m:
	[PATCH] return cost=-Inf if problem is infeasible

	Signed-off-by: Michal Kvasnica
	[e30df71b6cd3]

	* extras/auxiliary/mpt_performance.m:
	[PATCH] do not convert mptctrl object into structure

	Signed-off-by: Michal Kvasnica
	[a1e08d14bbef]

	* extras/analysis/mpt_infsetPWA.m:
	[PATCH] use union() instead of greedy merging for higher dimensions

	Signed-off-by: Michal Kvasnica

	polytope/union now uses isconvex, which is much faster on higher
	dimensions, making the use of greedy merging obsolete.
	[0fd2cb1dc821]

	* mpt_invariantSet.m:
	[PATCH] remove obsolete comments

	Signed-off-by: Michal Kvasnica
	[38537944730b]

	* extras/auxiliary/mpt_greedyMerging.m:
	[PATCH] remove obsolete comments and options

	Signed-off-by: Michal Kvasnica
	[c57a2f3d5b77]

	* @polytope/union.m:
	[PATCH] use isconvex() if length(Pn)>2

	Signed-off-by: Michal Kvasnica

	isconvex() replaces hull-through-union option.
	[d94a70333f52]

	* extras/graphics/mpt_plotTimeTrajectory.m:
	[PATCH] handle empty State/Input/Output names

	Signed-off-by: Michal Kvasnica
	[7a99d353644d]

	* extras/auxiliary/mpt_evalPWA.m:
	[NEW] evaluates a PWA function at a given location

	Signed-off-by: Michal Kvasnica
	[475ed25713b3]

2005-08-09  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* extras/auxiliary/sub_computeTrajectory.m:
	[PATCH] compute correct closed-loop cost

	Signed-off-by: Michal Kvasnica
	[4bb3a20f2f8c]

	* extras/control/mldmpc/mpc_mip.m:
	[PATCH] always respect user-provided Options.epsil

	Signed-off-by: Michal Kvasnica
	[3c0fd3aa85a5]

2005-08-08  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* solvers/mpt_solveMILP.m:
	[PATCH] set iterations limit for GLPKMEX to Inf

	Signed-off-by: Michal Kvasnica
	[38235032f488]

	* @polytope/triangulate.m:
	[PATCH] prevent crash due to undefined variable when computing
	volume

	Signed-off-by: Michal Kvasnica
	[64acbb051c21]

	* solvers/mpt_solveMILP.m:
	[PATCH] always make glpkmex silent

	Signed-off-by: Michal Kvasnica
	[0e63d6c33936]

	* mpt_simSys.m:
	[PATCH] updated help description

	Signed-off-by: Michal Kvasnica
	[f3a82cf8e10f]

	* extras/auxiliary/mpt_mplp_ver7.m:
	[PATCH] catch empty regions with warning

	Signed-off-by: Michal Kvasnica
	[a9c168c1022b]

	* mpt_simSys.m:
	[PATCH] read "params" from workspace when simulator is used

	Signed-off-by: Michal Kvasnica

	Also made Options.usemldsim=1 the default setting, since often it is
	faster to use mpt_mldsim() than to execute the simulator.
	[e02b28fb6b03]

2005-08-06  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* extras/auxiliary/mpt_mplp_ver7.m:
	[PATCH] use guess of optimal solution when solving an LP

	Signed-off-by: Michal Kvasnica
	[4e8b308e54af]

	* docs/mpt_sysStruct.m, extras/auxiliary/mpt_prepareTracking.m:
	[PATCH] use user specified bounds on references / make bounds
	tighter

	Signed-off-by: Michal Kvasnica

	1. bounds on reference signals can now be specified in
	sysStruct.yrefmax, .yrefmin, .xremax, .xrefmin 2. if none of these
	bounds are given, state/output constraints are used as default
	bounds on references. in order to avoid problems with
	unboundeness, we replace any +/- Inf values with mptOptions.infbox
	[f418346d9963]

	* @polytope/bounding_box.m:
	[PATCH] fast exit if input polytope is empty

	Signed-off-by: Michal Kvasnica
	[beaa2b73496b]

	* mpt_control.m:
	[PATCH] use default names of inputs if inputname() returns empty

	Signed-off-by: Michal Kvasnica

	Uses default names for sysStruct and probStruct if they cannot be
	deduced automatically by the function inputname().
	[aac33941050f]

	* mpt_control.m:
	[PATCH] throw an error when computing explicit controllers for MLD
	systems

	Signed-off-by: Michal Kvasnica

	Throws an error when explicit solution is requested for hybrid
	systems without PWA representation.
	[5d67b335d0bd]

	* @mptctrl/mptctrl.m:
	[PATCH] fixed typo in one comment

	Signed-off-by: Michal Kvasnica
	[24265e4bf2e3]

	* @mptctrl/mptctrl.m, extras/control/mldmpc/mpc_buildmatFAST.m,
	mpt_getInput.m:
	[PATCH] add state and output constraints in mpc_buildmatFAST

	Signed-off-by: Michal Kvasnica

	before, those constraints have been added directly to MLD matrices
	by addMLDconstraints() function. Now we are adding constraints only
	to MPC formulation, leaving the original MLD matrices unchanged.
	[8659c328ff12]

	* @mptctrl/mptctrl.m:
	[PATCH] honor ctrlStruct.type when creating object from structure

	Signed-off-by: Michal Kvasnica
	[470027a30d54]

2005-08-05  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* extras/control/mldmpc/mpc_mip.m:
	[PATCH] added option to convert bounds on variables into constraints

	Signed-off-by: Michal Kvasnica

	If Options.bounds2ineq is true, bounds on variables (bl <= x <= bu)
	are converted into inequality constraints. This option is off by
	default.
	[b4c10194f769]

	* extras/control/mldmpc/mpc_mip.m:
	[PATCH] changed default value of Options.epsil to 1e-10

	Signed-off-by: Michal Kvasnica

	On the example provided by Arno Heijden, CPLEX fails if too high
	value of Options.epsil is used.
	[09a95e01742f]

	* extras/control/mldmpc/mpc_mip.m:
	[PATCH] added option to remove "z <= Inf" type of constraints

	Signed-off-by: Michal Kvasnica

	if Options.removeInfBounds is set to true, "z <= Inf" constraints
	are removed, and in addition, +/- Inf elements in bounds of
	variables are replaced by +/- Options.bigB. The option is off by
	default.
	[54f3d63d5009]

	* extras/control/mldmpc/mpc_mip.m:
	[PATCH] properly impose deltaU constraints in open-loop

	Signed-off-by: Michal Kvasnica

	"horizon" parameter is defined as a vector of ones, hence the true
	horizon is equal to sum(horizon).
	[b5575500cc9e]

2005-08-04  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* @mptctrl/private/addMLDconstraints.m:
	[PATCH] correctly detect +/- Inf type of constraints

	Signed-off-by: Michal Kvasnica
	[a68bd078181b]

	* extras/control/mldmpc/mpc_buildmatFAST.m, mpt_getInput.m:
	[PATCH] enforce state constraints on final state x(N)

	Signed-off-by: Michal Kvasnica

	Noticed by Arno van der Heijden, state costraints on final state
	x(N) have not been imposed at all.

	Moreover this patch adds possibility to impose constraints on all
	states x(k) if Options.allxconstrained is set to true. The default
	value remains false, since we add state constraints directly into
	MLD matrices in @mptctrl/addMLDconstraints
	[fcb0b39d8073]

	* solvers/mpt_solveMILP.m:
	[PATCH] default lower bound for GLPK was incorrectly set

	Signed-off-by: Michal Kvasnica
	[eca40a7da134]

	* extras/control/mldmpc/mpc_mip.m:
	[PATCH] set "epsil" to zero if GLPK is used

	Signed-off-by: Michal Kvasnica

	The relaxation parameter "epsil" is now set to zero if GLPK is used,
	because a non-zero value was causing numerical problems. Inspired by
	example provided by Arno van der Heijden.
	[3c387ef89efc]

	* @mptctrl/private/addMLDconstraints.m:
	[PATCH] do not add +/- Inf type of constraints

	Signed-off-by: Michal Kvasnica
	[7a4a297726e1]

2005-08-03  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* extras/simulink/mpt_simInput_sfunc.m:
	[PATCH] include reference when solving MPC problem for MLD systems

	Signed-off-by: Michal Kvasnica
	[35eec206a796]

	* mpt_sys.m:
	[PATCH] properly handle cases where both Ts and 'nopwa' flag are
	given

	Signed-off-by: Michal Kvasnica
	[a24a34f3565d]

	* mpt_simSys.m:
	[PATCH] recalculate results using mpt_mldsim() if simulator fails

	Signed-off-by: Michal Kvasnica
	[59ee617c08bf]

	* @mptctrl/mptctrl.m, extras/auxiliary/sub_computeTrajectory.m,
	extras/control/mldmpc/mpc_mip.m,
	extras/simulink/mpt_simInput_sfunc.m, mpt_getInput.m:
	[PATCH] satisfy deltaU constraints in closed-loop in MPC for MLD
	systems

	Signed-off-by: Michal Kvasnica
	[8b0fa2609421]

2005-07-28  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* extras/analysis/mpt_reachSets.m:
	[PATCH] handle controllers with feedback pre-stabilization

	Signed-off-by: Michal Kvasnica
	[74b98dd07f8a]

2005-07-27  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* extras/analysis/mpt_getCommonSOSLyapFct.m,
	extras/analysis/mpt_getQuadLyapFct.m:
	[PATCH] initialize FBgain to proper size if it is not given

	Signed-off-by: Michal Kvasnica
	[3b37f9fe6974]

	* @polytope/plot.m:
	[PATCH] handle Options.wirecolor in 3D plots

	Signed-off-by: Michal Kvasnica

	Spotted by: Frank J. Christophersen
	[ba80527f2bb9]

	* @polytope/isconvex.m:
	[PATCH] return Pconv also for non-fully dimensional inputs

	Signed-off-by: Frank J. Christophersen Signed-off-by: Michal
	Kvasnica
	[3faaad25ecb9]

	* @polytope/plot.m:
	[PATCH] do not call line with NaNs when ploting in wire mode

	Signed-off-by: Michal Kvasnica

	Spotted by Frank J. Christophersen
	[22d7586497d2]

	* @polytope/isconvex.m:
	[PATCH] return the anyhow computed convex set

	Signed-off-by: Frank J. Christophersen Signed-off-by: Michal
	Kvasnica
	[f4d5984d5772]

	* extras/analysis/mpt_getCommonSOSLyapFct.m,
	extras/analysis/mpt_getPWALyapFct.m,
	extras/analysis/mpt_getPWPLyapFct.m,
	extras/analysis/mpt_getPWQLyapFct.m,
	extras/analysis/mpt_getQuadLyapFct.m, mpt_invariantSet.m:
	[PATCH] properly handle controllers with feedback prestabilization

	Signed-off-by: Michal Kvasnica
	[24e0af692d25]

	* @polytope/envelope.m:
	[PATCH] avoid redundant computation of polytopes

	Signed-off-by: Michal Kvasnica

	Avoid redundant computation of polytope objects when intersecting
	envelope with infinity box
	[bd1a5c966bc3]

	* @polytope/bounding_box.m:
	[PATCH] fixed undefined variable

	Signed-off-by: Frank J. Christophersen Signed-off-by: Michal
	Kvasnica
	[6ee300f6851e]

	* @polytope/Contents.m, @polytope/isconvex.m:
	[NEW] isconvex(P) checks if polyarray P forms a convex union

	Signed-off-by: Michal Kvasnica
	[6fd4dde075e4]

	* solvers/mpt_solveMILP.m, solvers/mpt_solveMIQP.m:
	[PATCH] always convert vectors to column format

	Signed-off-by: Michal Kvaasnica
	[e06dfc7104c2]

2005-07-26  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* mpt_sys.m:
	[PATCH] mark inputs as real/boolean when importing from hysdel

	Signed-off-by: Michal Kvasnica

	Mark inputs as real/boolean when importing either from hysdel or
	from MLD matrices without subsequent conversion to PWA
	[8ee344d6ea3f]

2005-07-25  Michal Kvasnica  <kvasnica@control.ee.ethz.ch>

	* @polytope/slice.m:
	[PATCH] fixed sorting of rows

	Signed-off-by: Frank J. Christophersen Signed-off-by: Michal
	Kvasnica
	[2b76b096c228]

	* .hgtags:
	Added tag MPT_2_0_2 for changeset
	4c277c69b8b22eff8203b4bfbb6b984323008786
	[7e23ff330de5]

	* @mptctrl/analyze.m, @mptctrl/char.m, @mptctrl/display.m,
	@mptctrl/isexplicit.m, @mptctrl/isinvariant.m,
	@mptctrl/isstabilizable.m, @mptctrl/length.m, @mptctrl/mptctrl.m,
	@mptctrl/plot.m, @mptctrl/private/addMLDconstraints.m,
	@mptctrl/private/copyvalidfields.m, @mptctrl/runtime.m,
	@mptctrl/subsref.m, @polytope/analyticCenter.m, @polytope/and.m,
	@polytope/bounding_box.m, @polytope/chebyball.m,
	@polytope/dimension.m, @polytope/display.m, @polytope/dointersect.m,
	@polytope/domain.m, @polytope/double.m, @polytope/end.m,
	@polytope/envelope.m, @polytope/eq.m, @polytope/extreme.m,
	@polytope/facetcircle.m, @polytope/fliplr.m, @polytope/flipud.m,
	@polytope/ge.m, @polytope/get.m, @polytope/gt.m,
	@polytope/horzcat.m, @polytope/hull.m, @polytope/intersect.m,
	@polytope/isbounded.m, @polytope/isfulldim.m, @polytope/isinside.m,
	@polytope/isminrep.m, @polytope/isnormal.m, @polytope/isredundant.m,
	@polytope/le.m, @polytope/length.m, @polytope/loadobj.m,
	@polytope/lt.m, @polytope/merge.m, @polytope/minus.m,
	@polytope/mldivide.m, @polytope/mtimes.m, @polytope/nconstr.m,
	@polytope/ne.m, @polytope/normalize.m, @polytope/or.m,
	@polytope/plot.m, @polytope/plus.m, @polytope/polytope.m,
	@polytope/private/chebyball_f.m, @polytope/private/unique2.m,
	@polytope/private/uniquerows1.m, @polytope/private/uniquerows2.m,
	@polytope/range.m, @polytope/reduce.m, @polytope/reduceunion.m,
	@polytope/regiondiff.m, @polytope/regiondiffXU.m, @polytope/set.m,
	@polytope/size.m, @polytope/slice.m, @polytope/subsasgn.m,
	@polytope/subsref.m, @polytope/uminus.m, @polytope/union.m,
	@polytope/uplus.m, @polytope/vertcat.m, @polytope/volume.m,
	docs/mpt_probStruct.m, docs/mpt_sysStruct.m,
	examples/ballandplate/ballandplate.m,
	examples/ballandplate/ballandplatedemo.m,
	examples/ballandplate/ballandplatesim.mdl,
	examples/ccode/mpt_example.c, examples/ccode/mpt_getInput.c,
	examples/demos/mpt_demo1.m, examples/demos/mpt_demo2.m,
	examples/demos/mpt_demo3.m, examples/demos/mpt_demo4.m,
	examples/demos/mpt_demo5.m, examples/demos/mpt_demo6.m,
	examples/demos/mpt_makedemos.m, examples/models/Double_Integrator.m,
	examples/models/Double_Integrator_addU.m,
	examples/models/Double_Integrator_parU.m,
	examples/models/FourthOrder.m, examples/models/ThirdOrder.m,
	examples/models/ThirdOrder_addU.m,
	examples/models/ThirdOrder_parU.m, examples/models/four_tanks.m,
	examples/models/matotest.m, examples/models/opt_sincos.m,
	examples/models/oscilator.m, examples/models/pwa2d.m,
	examples/models/pwa2d_addU.m, examples/models/pwa3d.m,
	examples/models/pwa3d_addU.m, examples/models/pwa4d.m,
	examples/models/pwa_DI.m, examples/models/pwa_DI_addU.m,
	examples/models/pwa_car.m, examples/models/pwa_sincos.m,
	examples/models/pwa_sincos_addU.m, examples/models/two_tanks.m,
	examples/models/two_tanks_sim.m, examples/reachdemo/reachdemo1.m,
	examples/reachdemo/reachdemo2.m, examples/reachdemo/verifdemo1.m,
	examples/reachdemo/verifdemo2.m, examples/turbocar/turbocardemo.m,
	examples/turbocar/turbocarsim.mdl,
	examples/watertanks/fourtanksdemo.m,
	examples/watertanks/fourtankssim.mdl,
	examples/watertanks/twotanksdemo.m,
	examples/watertanks/twotankssim.mdl,
	extras/analysis/mpt_checkLyapFct.m,
	extras/analysis/mpt_computePWATset.m,
	extras/analysis/mpt_getPWALyapFct.m,
	extras/analysis/mpt_getPWPLyapFct.m,
	extras/analysis/mpt_getPWQLyapFct.m,
	extras/analysis/mpt_getQuadLyapFct.m,
	extras/analysis/mpt_getReachSubset.m, extras/analysis/mpt_infset.m,
	extras/analysis/mpt_infsetPWA.m, extras/analysis/mpt_isPWAbigger.m,
	extras/analysis/mpt_maxCtrlSet.m, extras/analysis/mpt_reachSets.m,
	extras/analysis/mpt_reachXU.m, extras/analysis/mpt_removeOverlaps.m,
	extras/analysis/mpt_searchTree.m, extras/analysis/mpt_transmap.m,
	extras/analysis/mpt_verify.m, extras/auxiliary/identifyRegion.m,
	extras/auxiliary/mousepoly.m, extras/auxiliary/mpt_addTset.m,
	extras/auxiliary/mpt_allcombs.m, extras/auxiliary/mpt_dlqr.m,
	extras/auxiliary/mpt_dummyCS.m, extras/auxiliary/mpt_error.m,
	extras/auxiliary/mpt_evalSystem.m,
	extras/auxiliary/mpt_feasibleStates.m,
	extras/auxiliary/mpt_getCommonLyapFct.m,
	extras/auxiliary/mpt_getFullRankSubset.m,
	extras/auxiliary/mpt_getOptimizer.m,
	extras/auxiliary/mpt_greedyMerging.m,
	extras/auxiliary/mpt_ineq2eq.m, extras/auxiliary/mpt_isValidCS.m,
	extras/auxiliary/mpt_iscombequal.m,
	extras/auxiliary/mpt_issysstruct.m, extras/auxiliary/mpt_lrs.m,
	extras/auxiliary/mpt_lti2pwa.m, extras/auxiliary/mpt_mergeCS.m,
	extras/auxiliary/mpt_mldsim.m, extras/auxiliary/mpt_mplp_ver1.m,
	extras/auxiliary/mpt_mplp_ver2.m, extras/auxiliary/mpt_mplp_ver3.m,
	extras/auxiliary/mpt_mplp_ver4.m, extras/auxiliary/mpt_mplp_ver5.m,
	extras/auxiliary/mpt_optControlPWAold.m,
	extras/auxiliary/mpt_options.m, extras/auxiliary/mpt_patch2eps.m,
	extras/auxiliary/mpt_performance.m,
	extras/auxiliary/mpt_prepareDU.m,
	extras/auxiliary/mpt_prepareTracking.m,
	extras/auxiliary/mpt_qphess.m, extras/auxiliary/mpt_randPWASys.m,
	extras/auxiliary/mpt_solveLPi.m, extras/auxiliary/mpt_solverInfo.m,
	extras/auxiliary/mpt_ss2mld.m, extras/auxiliary/mpt_statusbar.m,
	extras/auxiliary/mpt_sysStructInfo.m, extras/auxiliary/mpt_update.m,
	extras/auxiliary/mpt_verifyProbStruct.m,
	extras/auxiliary/mpt_verifySysProb.m,
	extras/auxiliary/mpt_verifySysStruct.m,
	extras/auxiliary/mpt_version.m, extras/auxiliary/sbprogress.m,
	extras/auxiliary/sub_computeTrajectory.m,
	extras/auxiliary/unitbox.m, extras/auxiliary/within.m,
	extras/control/hys2pwa/mpt_pwa2mld.m,
	extras/control/hys2pwa/mpt_pwa2sys.m,
	extras/control/mpt_blockingMatrices.m,
	extras/control/mpt_boolMinTime.m,
	extras/control/mpt_constructMatrices.m,
	extras/control/mpt_getStabFeedback.m,
	extras/control/mpt_iterative.m, extras/control/mpt_iterativePWA.m,
	extras/control/mpt_mixedMinTime.m, extras/control/mpt_oneStepCtrl.m,
	extras/control/mpt_optBoolCtrl.m, extras/control/mpt_optControl.m,
	extras/control/mpt_optControlPWA.m,
	extras/control/mpt_optInfControl.m,
	extras/control/mpt_optInfControlPWA.m,
	extras/control/mpt_optMixedCtrl.m, extras/control/mpt_solveMPC.m,
	extras/control/optmerge/intersectHP1.m,
	extras/control/optmerge/polyinnerball.m,
	extras/control/optmerge/tg_polyreduce.m, extras/geometry/hull.m,
	extras/geometry/mpt_delaunay.m, extras/geometry/mpt_voronoi.m,
	extras/graphics/mpt_plotArrangement.m, extras/graphics/mpt_plotJ.m,
	extras/graphics/mpt_plotLyapunov.m, extras/graphics/mpt_plotPWA.m,
	extras/graphics/mpt_plotPWQ.m, extras/graphics/mpt_plotPartition.m,
	extras/graphics/mpt_plotSysStruct.m,
	extras/graphics/mpt_plotTimeTrajectory.m,
	extras/graphics/mpt_plotTrajectory.m, extras/graphics/mpt_plotU.m,
	extras/gui/@mptaffexpr/char.m, extras/gui/@mptaffexpr/display.m,
	extras/gui/@mptaffexpr/double.m, extras/gui/@mptaffexpr/ge.m,
	extras/gui/@mptaffexpr/get.m, extras/gui/@mptaffexpr/le.m,
	extras/gui/@mptaffexpr/minus.m, extras/gui/@mptaffexpr/mptaffexpr.m,
	extras/gui/@mptaffexpr/mrdivide.m, extras/gui/@mptaffexpr/mtimes.m,
	extras/gui/@mptaffexpr/plus.m, extras/gui/@mptaffexpr/uminus.m,
	extras/gui/@mptaffexpr/uplus.m, extras/gui/@mptvar/char.m,
	extras/gui/@mptvar/display.m, extras/gui/@mptvar/ge.m,
	extras/gui/@mptvar/get.m, extras/gui/@mptvar/isinput.m,
	extras/gui/@mptvar/isstate.m, extras/gui/@mptvar/le.m,
	extras/gui/@mptvar/length.m, extras/gui/@mptvar/minus.m,
	extras/gui/@mptvar/mptvar.m, extras/gui/@mptvar/mrdivide.m,
	extras/gui/@mptvar/mtimes.m, extras/gui/@mptvar/plus.m,
	extras/gui/@mptvar/subsref.m, extras/gui/@mptvar/uminus.m,
	extras/gui/@mptvar/uplus.m, extras/gui/@mptvar/varindex.m,
	extras/gui/@mptvar/vartype.m, extras/gui/mpt_guiInputs_export.m,
	extras/gui/mpt_guiLoadWorkspace_export.m,
	extras/gui/mpt_guiLyapunov_export.m,
	extras/gui/mpt_guiProbAdv_export.m,
	extras/gui/mpt_guiProbStruct_export.m,
	extras/gui/mpt_guiSetup_export.m,
	extras/gui/mpt_guiSimulate_export.m,
	extras/gui/mpt_guiSysStruct_export.m,
	extras/gui/mpt_guiTextLabels_export.m,
	extras/gui/mpt_guiWeights_export.m, extras/gui/statusbar.m,
	extras/simulink/mex_getInput.c, extras/simulink/mex_getInput.mexglx,
	extras/simulink/mex_getInput.mexsol, extras/simulink/mpt_exportc.m,
	extras/simulink/mpt_getInput.c,
	extras/simulink/mpt_getInput_sfunc.c,
	extras/simulink/mpt_getInput_sfunc_parm.c,
	extras/simulink/mpt_getSfuncParam.m,
	extras/simulink/mpt_isinside_sfunc.c, extras/simulink/mpt_mexData.m,
	extras/simulink/mpt_sim.mdl, extras/simulink/mpt_simInput_sfunc.m,
	extras/simulink/mpt_simSys_sfunc.m, extras/simulink/slblocks.m,
	history.txt, license.txt, mpt_computeTrajectory.m, mpt_control.m,
	mpt_getInput.m, mpt_init.m, mpt_invariantSet.m, mpt_lyapunov.m,
	mpt_setup.m, mpt_simSys.m, mpt_simplify.m, mpt_studio.m, readme.txt,
	runExample.m, runMoveBlocking.m, solvers/SeDuMi105/Amul.m,
	solvers/SeDuMi105/Contents.m, solvers/SeDuMi105/Install.dos,
	solvers/SeDuMi105/Install.unix, solvers/SeDuMi105/Makefile,
	solvers/SeDuMi105/Makefile.mak, solvers/SeDuMi105/Makefile.sedumi,
	solvers/SeDuMi105/PopK.m, solvers/SeDuMi105/ada_pcg.m,
	solvers/SeDuMi105/adendotd.c, solvers/SeDuMi105/adendotd.dll,
	solvers/SeDuMi105/adendotd.m, solvers/SeDuMi105/adendotd.mexglx,
	solvers/SeDuMi105/adendotd.mexsol, solvers/SeDuMi105/adenscale.c,
	solvers/SeDuMi105/adenscale.dll, solvers/SeDuMi105/adenscale.mexglx,
	solvers/SeDuMi105/adenscale.mexsol, solvers/SeDuMi105/asmDxq.m,
	solvers/SeDuMi105/auxfwdpr1.c, solvers/SeDuMi105/auxgivens.c,
	solvers/SeDuMi105/blkaux.c, solvers/SeDuMi105/blkchol.c,
	solvers/SeDuMi105/blkchol.dll, solvers/SeDuMi105/blkchol.m,
	solvers/SeDuMi105/blkchol.mexglx, solvers/SeDuMi105/blkchol.mexsol,
	solvers/SeDuMi105/blkchol2.c, solvers/SeDuMi105/blkmul.c,
	solvers/SeDuMi105/blksdp.h, solvers/SeDuMi105/bwblkslv.c,
	solvers/SeDuMi105/bwblkslv.dll, solvers/SeDuMi105/bwblkslv.m,
	solvers/SeDuMi105/bwblkslv.mexglx,
	solvers/SeDuMi105/bwblkslv.mexsol, solvers/SeDuMi105/bwblkslv2.c,
	solvers/SeDuMi105/bwdpr1.c, solvers/SeDuMi105/bwdpr1.dll,
	solvers/SeDuMi105/bwdpr1.m, solvers/SeDuMi105/bwdpr1.mexglx,
	solvers/SeDuMi105/bwdpr1.mexsol, solvers/SeDuMi105/cell2diag.m,
	solvers/SeDuMi105/cellK.m, solvers/SeDuMi105/checkpars.m,
	solvers/SeDuMi105/cholsplit.c, solvers/SeDuMi105/cholsplit.dll,
	solvers/SeDuMi105/cholsplit.mexglx,
	solvers/SeDuMi105/cholsplit.mexsol, solvers/SeDuMi105/choltmpsiz.c,
	solvers/SeDuMi105/choltmpsiz.dll,
	solvers/SeDuMi105/choltmpsiz.mexglx,
	solvers/SeDuMi105/choltmpsiz.mexsol, solvers/SeDuMi105/complexblk.m,
	solvers/SeDuMi105/conversion/blk2vec.m,
	solvers/SeDuMi105/conversion/feascpx.m,
	solvers/SeDuMi105/conversion/feasreal.m,
	solvers/SeDuMi105/conversion/frompack.m,
	solvers/SeDuMi105/conversion/fromsdpa.m,
	solvers/SeDuMi105/conversion/getproblem.m,
	solvers/SeDuMi105/conversion/prelp.m,
	solvers/SeDuMi105/conversion/readme.m,
	solvers/SeDuMi105/conversion/runsp.m,
	solvers/SeDuMi105/conversion/sdpa2vec.m,
	solvers/SeDuMi105/conversion/sdpasplit.m,
	solvers/SeDuMi105/conversion/writesdp.m, solvers/SeDuMi105/copying,
	solvers/SeDuMi105/dJdot.c, solvers/SeDuMi105/ddot.c,
	solvers/SeDuMi105/ddot.dll, solvers/SeDuMi105/ddot.m,
	solvers/SeDuMi105/ddot.mexglx, solvers/SeDuMi105/ddot.mexsol,
	solvers/SeDuMi105/deninfac.m, solvers/SeDuMi105/doc/rls.m,
	solvers/SeDuMi105/doc/specfac.m, solvers/SeDuMi105/doc/toepest.m,
	solvers/SeDuMi105/doc/usrguide.ps, solvers/SeDuMi105/dpr1fact.c,
	solvers/SeDuMi105/dpr1fact.dll, solvers/SeDuMi105/dpr1fact.m,
	solvers/SeDuMi105/dpr1fact.mexglx,
	solvers/SeDuMi105/dpr1fact.mexsol, solvers/SeDuMi105/dpr1order.c,
	solvers/SeDuMi105/dzstruct.c, solvers/SeDuMi105/dzstruct.m,
	solvers/SeDuMi105/eigK.c, solvers/SeDuMi105/eigK.dll,
	solvers/SeDuMi105/eigK.m, solvers/SeDuMi105/eigK.mexglx,
	solvers/SeDuMi105/eigK.mexsol, solvers/SeDuMi105/extractA.c,
	solvers/SeDuMi105/extractA.dll, solvers/SeDuMi105/extractA.m,
	solvers/SeDuMi105/extractA.mexglx,
	solvers/SeDuMi105/extractA.mexsol, solvers/SeDuMi105/eyeK.c,
	solvers/SeDuMi105/eyeK.dll, solvers/SeDuMi105/eyeK.m,
	solvers/SeDuMi105/eyeK.mexglx, solvers/SeDuMi105/eyeK.mexsol,
	solvers/SeDuMi105/factorK.c, solvers/SeDuMi105/factorK.dll,
	solvers/SeDuMi105/factorK.mexglx, solvers/SeDuMi105/factorK.mexsol,
	solvers/SeDuMi105/findblks.c, solvers/SeDuMi105/findblks.dll,
	solvers/SeDuMi105/findblks.m, solvers/SeDuMi105/findblks.mexglx,
	solvers/SeDuMi105/findblks.mexsol, solvers/SeDuMi105/finsymbden.c,
	solvers/SeDuMi105/finsymbden.dll, solvers/SeDuMi105/finsymbden.m,
	solvers/SeDuMi105/finsymbden.mexglx,
	solvers/SeDuMi105/finsymbden.mexsol, solvers/SeDuMi105/frameit.m,
	solvers/SeDuMi105/fwblkslv.c, solvers/SeDuMi105/fwblkslv.dll,
	solvers/SeDuMi105/fwblkslv.m, solvers/SeDuMi105/fwblkslv.mexglx,
	solvers/SeDuMi105/fwblkslv.mexsol, solvers/SeDuMi105/fwdpr1.c,
	solvers/SeDuMi105/fwdpr1.dll, solvers/SeDuMi105/fwdpr1.m,
	solvers/SeDuMi105/fwdpr1.mexglx, solvers/SeDuMi105/fwdpr1.mexsol,
	solvers/SeDuMi105/getDAt.c, solvers/SeDuMi105/getDAt.m,
	solvers/SeDuMi105/getDAtm.m, solvers/SeDuMi105/getada1.c,
	solvers/SeDuMi105/getada1.dll, solvers/SeDuMi105/getada1.m,
	solvers/SeDuMi105/getada1.mexglx, solvers/SeDuMi105/getada1.mexsol,
	solvers/SeDuMi105/getada2.c, solvers/SeDuMi105/getada2.dll,
	solvers/SeDuMi105/getada2.m, solvers/SeDuMi105/getada2.mexglx,
	solvers/SeDuMi105/getada2.mexsol, solvers/SeDuMi105/getada3.c,
	solvers/SeDuMi105/getada3.dll, solvers/SeDuMi105/getada3.m,
	solvers/SeDuMi105/getada3.mexglx, solvers/SeDuMi105/getada3.mexsol,
	solvers/SeDuMi105/getdense.m, solvers/SeDuMi105/getframeq.c,
	solvers/SeDuMi105/getsymbada.m, solvers/SeDuMi105/givens.h,
	solvers/SeDuMi105/givensrot.c, solvers/SeDuMi105/givensrot.dll,
	solvers/SeDuMi105/givensrot.m, solvers/SeDuMi105/givensrot.mexglx,
	solvers/SeDuMi105/givensrot.mexsol, solvers/SeDuMi105/incorder.c,
	solvers/SeDuMi105/incorder.dll, solvers/SeDuMi105/incorder.m,
	solvers/SeDuMi105/incorder.mexglx,
	solvers/SeDuMi105/incorder.mexsol, solvers/SeDuMi105/invcholfac.c,
	solvers/SeDuMi105/invcholfac.dll, solvers/SeDuMi105/invcholfac.m,
	solvers/SeDuMi105/invcholfac.mexglx,
	solvers/SeDuMi105/invcholfac.mexsol, solvers/SeDuMi105/invjmulK.c,
	solvers/SeDuMi105/invjmulK.m, solvers/SeDuMi105/invscaleK.c,
	solvers/SeDuMi105/iswnbr.c, solvers/SeDuMi105/iswnbr.dll,
	solvers/SeDuMi105/iswnbr.m, solvers/SeDuMi105/iswnbr.mexglx,
	solvers/SeDuMi105/iswnbr.mexsol, solvers/SeDuMi105/jmulK.c,
	solvers/SeDuMi105/jmulK.m, solvers/SeDuMi105/loopPcg.m,
	solvers/SeDuMi105/mJdetd.c, solvers/SeDuMi105/makereal.c,
	solvers/SeDuMi105/makereal.dll, solvers/SeDuMi105/makereal.m,
	solvers/SeDuMi105/makereal.mexglx,
	solvers/SeDuMi105/makereal.mexsol, solvers/SeDuMi105/mat.m,
	solvers/SeDuMi105/maxstep.m, solvers/SeDuMi105/optstep.m,
	solvers/SeDuMi105/ordmmd.c, solvers/SeDuMi105/ordmmdmex.c,
	solvers/SeDuMi105/ordmmdmex.dll, solvers/SeDuMi105/ordmmdmex.m,
	solvers/SeDuMi105/ordmmdmex.mexglx,
	solvers/SeDuMi105/ordmmdmex.mexsol, solvers/SeDuMi105/partitA.c,
	solvers/SeDuMi105/partitA.dll, solvers/SeDuMi105/partitA.m,
	solvers/SeDuMi105/partitA.mexglx, solvers/SeDuMi105/partitA.mexsol,
	solvers/SeDuMi105/posttransfo.m, solvers/SeDuMi105/pretransfo.m,
	solvers/SeDuMi105/psdeig.c, solvers/SeDuMi105/psdeig.dll,
	solvers/SeDuMi105/psdeig.m, solvers/SeDuMi105/psdeig.mexglx,
	solvers/SeDuMi105/psdeig.mexsol, solvers/SeDuMi105/psdfactor.c,
	solvers/SeDuMi105/psdfactor.dll, solvers/SeDuMi105/psdfactor.m,
	solvers/SeDuMi105/psdfactor.mexglx,
	solvers/SeDuMi105/psdfactor.mexsol, solvers/SeDuMi105/psdframeit.c,
	solvers/SeDuMi105/psdframeit.dll,
	solvers/SeDuMi105/psdframeit.mexglx,
	solvers/SeDuMi105/psdframeit.mexsol, solvers/SeDuMi105/psdinvjmul.c,
	solvers/SeDuMi105/psdinvjmul.dll, solvers/SeDuMi105/psdinvjmul.m,
	solvers/SeDuMi105/psdinvjmul.mexglx,
	solvers/SeDuMi105/psdinvjmul.mexsol,
	solvers/SeDuMi105/psdinvscale.c, solvers/SeDuMi105/psdinvscale.dll,
	solvers/SeDuMi105/psdinvscale.mexglx,
	solvers/SeDuMi105/psdinvscale.mexsol, solvers/SeDuMi105/psdjmul.c,
	solvers/SeDuMi105/psdjmul.dll, solvers/SeDuMi105/psdjmul.m,
	solvers/SeDuMi105/psdjmul.mexglx, solvers/SeDuMi105/psdjmul.mexsol,
	solvers/SeDuMi105/psdscale.c, solvers/SeDuMi105/psdscale.dll,
	solvers/SeDuMi105/psdscale.m, solvers/SeDuMi105/psdscale.mexglx,
	solvers/SeDuMi105/psdscale.mexsol, solvers/SeDuMi105/qblkmul.c,
	solvers/SeDuMi105/qblkmul.dll, solvers/SeDuMi105/qblkmul.m,
	solvers/SeDuMi105/qblkmul.mexglx, solvers/SeDuMi105/qblkmul.mexsol,
	solvers/SeDuMi105/qframeit.m, solvers/SeDuMi105/qframev.c,
	solvers/SeDuMi105/qframev.dll, solvers/SeDuMi105/qframev.mexglx,
	solvers/SeDuMi105/qframev.mexsol, solvers/SeDuMi105/qinvjmul.m,
	solvers/SeDuMi105/qinvsqrt.c, solvers/SeDuMi105/qinvsqrt.dll,
	solvers/SeDuMi105/qinvsqrt.mexglx,
	solvers/SeDuMi105/qinvsqrt.mexsol, solvers/SeDuMi105/qjmul.m,
	solvers/SeDuMi105/qrK.c, solvers/SeDuMi105/qrK.dll,
	solvers/SeDuMi105/qrK.mexglx, solvers/SeDuMi105/qrK.mexsol,
	solvers/SeDuMi105/qreshape.c, solvers/SeDuMi105/qreshape.dll,
	solvers/SeDuMi105/qreshape.m, solvers/SeDuMi105/qreshape.mexglx,
	solvers/SeDuMi105/qreshape.mexsol, solvers/SeDuMi105/qscaleK.c,
	solvers/SeDuMi105/qscaleK.dll, solvers/SeDuMi105/qscaleK.mexglx,
	solvers/SeDuMi105/qscaleK.mexsol, solvers/SeDuMi105/quadadd.c,
	solvers/SeDuMi105/quadadd.dll, solvers/SeDuMi105/quadadd.m,
	solvers/SeDuMi105/quadadd.mexglx, solvers/SeDuMi105/quadadd.mexsol,
	solvers/SeDuMi105/read.me, solvers/SeDuMi105/reflect.c,
	solvers/SeDuMi105/reflect.h, solvers/SeDuMi105/rotlorentz.m,
	solvers/SeDuMi105/sddir.m, solvers/SeDuMi105/sdfactor.m,
	solvers/SeDuMi105/sdinit.m, solvers/SeDuMi105/sdmauxCmp.c,
	solvers/SeDuMi105/sdmauxCone.c, solvers/SeDuMi105/sdmauxFill.c,
	solvers/SeDuMi105/sdmauxRdot.c, solvers/SeDuMi105/sdmauxScalarmul.c,
	solvers/SeDuMi105/sdmauxTriu.c, solvers/SeDuMi105/sdmauxTriudot.c,
	solvers/SeDuMi105/sedumi.m, solvers/SeDuMi105/sortnnz.c,
	solvers/SeDuMi105/sortnnz.dll, solvers/SeDuMi105/sortnnz.m,
	solvers/SeDuMi105/sortnnz.mexglx, solvers/SeDuMi105/sortnnz.mexsol,
	solvers/SeDuMi105/sparbwslv.m, solvers/SeDuMi105/sparchol.m,
	solvers/SeDuMi105/sparfwslv.m, solvers/SeDuMi105/spscale.c,
	solvers/SeDuMi105/sqrtinv.c, solvers/SeDuMi105/sqrtinv.dll,
	solvers/SeDuMi105/sqrtinv.m, solvers/SeDuMi105/sqrtinv.mexglx,
	solvers/SeDuMi105/sqrtinv.mexsol,
	solvers/SeDuMi105/startup.m.sample, solvers/SeDuMi105/statsK.c,
	solvers/SeDuMi105/statsK.dll, solvers/SeDuMi105/statsK.m,
	solvers/SeDuMi105/statsK.mexglx, solvers/SeDuMi105/statsK.mexsol,
	solvers/SeDuMi105/stepdif.m, solvers/SeDuMi105/symbbwblk.c,
	solvers/SeDuMi105/symbbwblk.dll, solvers/SeDuMi105/symbbwblk.mexglx,
	solvers/SeDuMi105/symbbwblk.mexsol, solvers/SeDuMi105/symbchol.m,
	solvers/SeDuMi105/symbcholden.m, solvers/SeDuMi105/symbfwblk.c,
	solvers/SeDuMi105/symbfwblk.dll, solvers/SeDuMi105/symbfwblk.mexglx,
	solvers/SeDuMi105/symbfwblk.mexsol, solvers/SeDuMi105/symfct.c,
	solvers/SeDuMi105/symfctmex.c, solvers/SeDuMi105/symfctmex.dll,
	solvers/SeDuMi105/symfctmex.m, solvers/SeDuMi105/symfctmex.mexglx,
	solvers/SeDuMi105/symfctmex.mexsol, solvers/SeDuMi105/tdet.m,
	solvers/SeDuMi105/triuaux.c, solvers/SeDuMi105/triuaux.h,
	solvers/SeDuMi105/triumtriu.c, solvers/SeDuMi105/triumtriu.dll,
	solvers/SeDuMi105/triumtriu.m, solvers/SeDuMi105/triumtriu.mexglx,
	solvers/SeDuMi105/triumtriu.mexsol, solvers/SeDuMi105/trydif.m,
	solvers/SeDuMi105/updtransfo.m, solvers/SeDuMi105/urotorder.c,
	solvers/SeDuMi105/urotorder.dll, solvers/SeDuMi105/urotorder.m,
	solvers/SeDuMi105/urotorder.mexglx,
	solvers/SeDuMi105/urotorder.mexsol, solvers/SeDuMi105/vec.m,
	solvers/SeDuMi105/veccomplex.m, solvers/SeDuMi105/vecreal.m,
	solvers/SeDuMi105/vecsym.c, solvers/SeDuMi105/vecsym.dll,
	solvers/SeDuMi105/vecsym.m, solvers/SeDuMi105/vecsym.mexglx,
	solvers/SeDuMi105/vecsym.mexsol, solvers/SeDuMi105/vectril.c,
	solvers/SeDuMi105/vectril.dll, solvers/SeDuMi105/vectril.m,
	solvers/SeDuMi105/vectril.mexglx, solvers/SeDuMi105/vectril.mexsol,
	solvers/SeDuMi105/whichcpx.c, solvers/SeDuMi105/whichcpx.dll,
	solvers/SeDuMi105/whichcpx.m, solvers/SeDuMi105/whichcpx.mexglx,
	solvers/SeDuMi105/whichcpx.mexsol, solvers/SeDuMi105/widelen.m,
	solvers/SeDuMi105/wrapPcg.m, solvers/SeDuMi105/wregion.m,
	solvers/cddmex/cddmex.c, solvers/cddmex/cddmex.dll,
	solvers/cddmex/cddmex.m, solvers/cddmex/cddmex.mexglx,
	solvers/cddmex/cddmex.mexmac, solvers/cddmex/cddmex.mexsol,
	solvers/cddmex/readme.txt, solvers/clp/clp.m,
	solvers/clp/mexclp.cpp, solvers/clp/mexclp.dll,
	solvers/esp/H2normalize.m, solvers/esp/a2s.m, solvers/esp/esp.m,
	solvers/esp/esp_1D.m, solvers/esp/esp_LP.m, solvers/esp/esp_adj.m,
	solvers/esp/esp_affhull.m, solvers/esp/esp_affhull_checkall.m,
	solvers/esp/esp_affhull_one.m, solvers/esp/esp_dual_make_unique.m,
	solvers/esp/esp_fulldim.m, solvers/esp/esp_helper.m,
	solvers/esp/esp_innerball.m, solvers/esp/esp_isdegen.m,
	solvers/esp/esp_null.m, solvers/esp/esp_preptable.m,
	solvers/esp/esp_projaff.m, solvers/esp/esp_rdg.m,
	solvers/esp/esp_setdiff.m, solvers/esp/esp_setdiff_c.c,
	solvers/esp/esp_setdiff_c.dll, solvers/esp/esp_setdiff_c.mexglx,
	solvers/esp/esp_setdiff_c.mexsol, solvers/esp/esp_shift.m,
	solvers/esp/esp_shoot.m, solvers/esp/esp_table.m,
	solvers/esp/mpt_esp.m, solvers/esp/polydim.m,
	solvers/espresso/espresso.exe, solvers/espresso/espresso.linux,
	solvers/fourier/fourier.cc, solvers/fourier/fourier.dll,
	solvers/fourier/fourier.h, solvers/fourier/fourier.m,
	solvers/fourier/fourier.mexglx, solvers/fourier/fourier.mexsol,
	solvers/fourier/makelinux.m, solvers/fourier/makewin.m,
	solvers/fourier/matlab_driver.cc, solvers/fourier/readme.txt,
	solvers/fourier/support.cc, solvers/glpkmex/COPYING,
	solvers/glpkmex/ChangeLog, solvers/glpkmex/INSTALL,
	solvers/glpkmex/glpkfun.h, solvers/glpkmex/glpkmex.c,
	solvers/glpkmex/glpkmex.dll, solvers/glpkmex/glpkmex.m,
	solvers/glpkmex/glpkmex.mexglx, solvers/glpkmex/glpkmex.mexsol,
	solvers/glpkmex/glpkparams.m, solvers/glpkmex/glpksets.h,
	solvers/glpkmex/glpksparse.m, solvers/glpkmex/glpktest1.m,
	solvers/glpkmex/glpktest2.m, solvers/glpkmex/makeglpk.fig,
	solvers/glpkmex/makeglpk.m, solvers/glpkmex/makeglpkcmd.m,
	solvers/hysdel/hylink.m, solvers/hysdel/hysdel.exe,
	solvers/hysdel/hysdel.linux, solvers/hysdel/hysdel.m,
	solvers/hysdel/hysdel.sol, solvers/mpt_mplp.m, solvers/mpt_mpqp.m,
	solvers/mpt_solveLP.m, solvers/mpt_solveMILP.m,
	solvers/mpt_solveMIQP.m, solvers/mpt_solveQP.m, testing/lti2d_def.m,
	testing/lti3d_def.m, testing/mpt_runTests.m,
	testing/mpt_test_LTI2d.m, testing/mpt_test_PWA.m, testing/pwa_def.m:
	import of MPT repository to mercurial
	[4c277c69b8b2] [MPT_2_0_2]

